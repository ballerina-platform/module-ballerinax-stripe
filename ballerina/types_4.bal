// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;

public type customs_param record {
    @constraint:String {maxLength: 5000}
    string eori_number?;
};

public type Deleted_terminal\.location record {
    true deleted;
    string id;
    "terminal.location" 'object;
};

# Represents the Queries record for the operation: GetTreasuryReceivedCredits
public type GetTreasuryReceivedCreditsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The FinancialAccount that received the funds.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryReceivedCreditsQueriesExpandItemsString[] expand?;
    # Only return ReceivedCredits described by the flow.
    linked_flows_param linked_flows?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return ReceivedCredits that have the given status: `succeeded` or `failed`.
    "failed"|"succeeded" status?;
};

# 
public type Tax_product_resource_tax_settings_status_details_resource_pending record {
    # The list of missing fields that are required to perform calculations. It includes the entry `head_office` when the status is `pending`. It is recommended to set the optional values even if they aren't listed as required for calculating taxes. Calculations can fail if missing fields aren't explicitly provided on every call.
    Tax_product_resource_tax_settings_status_details_resource_pendingMissingfieldsItemsString[]? missing_fields?;
};

public type transactions_transaction_body record {|
    # Specifies which fields in the response should be expanded.
    transactions_transaction_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Payment_method_options_customer_balance_eu_bank_account record {
    # The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
    "BE"|"DE"|"ES"|"FR"|"IE"|"NL" country;
};

public type Subscriptiondefaulttaxrates1ItemsString string;

# 
public type Quotes_resource_computed record {
    # The definitive totals and line items the customer will be charged on a recurring basis. Takes into account the line items with recurring prices and discounts with `duration=forever` coupons only. Defaults to `null` if no inputted line items with recurring prices.
    Quotes_resource_recurring? recurring?;
    Quotes_resource_upfront upfront;
};

# 
public type Payment_intent_next_action_display_multibanco_details record {
    # Entity number associated with this Multibanco payment.
    string? entity?;
    # The timestamp at which the Multibanco voucher expires.
    int? expires_at?;
    # The URL for the hosted Multibanco voucher page, which allows customers to view a Multibanco voucher.
    string? hosted_voucher_url?;
    # Reference number associated with this Multibanco payment.
    string? reference?;
};

# 
public type Payment_pages_checkout_session_consent record {
    # If `opt_in`, the customer consents to receiving promotional communications
    # from the merchant about this Checkout Session.
    "opt_in"|"opt_out"? promotions?;
    # If `accepted`, the customer in this Checkout Session has agreed to the merchant's terms of service.
    "accepted"? terms_of_service?;
};

# 
public type TopupList record {
    Topup[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/topups`}
    string url;
};

public type transactions_create_from_calculation_body record {|
    # Tax Calculation ID to be used as input when creating the transaction.
    @constraint:String {maxLength: 5000}
    string calculation;
    # Specifies which fields in the response should be expanded.
    transactions_create_from_calculation_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The Unix timestamp representing when the tax liability is assumed or reduced, which determines the liability posting period and handling in tax liability reports. The timestamp must fall within the `tax_date` and the current time, unless the `tax_date` is scheduled in advance. Defaults to the current time.
    int posted_at?;
    # A custom order or sale identifier, such as 'myOrder_123'. Must be unique across all transactions, including reversals.
    @constraint:String {maxLength: 500}
    string reference;
|};

# Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.
public type authorization_controls_param record {
    (authorization_controls_paramAllowedcategoriesItemsString)[] allowed_categories?;
    authorization_controls_paramAllowedmerchantcountriesItemsString[] allowed_merchant_countries?;
    (authorization_controls_paramBlockedcategoriesItemsString)[] blocked_categories?;
    authorization_controls_paramBlockedmerchantcountriesItemsString[] blocked_merchant_countries?;
    spending_limits_param[] spending_limits?;
};

@constraint:String {maxLength: 5000}
public type Bank_connections_resource_link_account_session_filtersCountriesItemsString string;

public type account_unsubscribe_bodyExpandItemsString string;

public type customer_balance_transactions_body record {|
    # The integer amount in **cents (or local equivalent)** to apply to the customer's credit balance.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Specifies the [`invoice_credit_balance`](https://stripe.com/docs/api/customers/object#customer_object-invoice_credit_balance) that this transaction will apply to. If the customer's `currency` is not set, it will be updated to this value.
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 350}
    string description?;
    # Specifies which fields in the response should be expanded.
    customer_balance_transactions_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type customer_cash_balance_bodyExpandItemsString string;

public type coupons_bodyExpandItemsString string;

# Configuration settings for the PaymentIntent that is generated when the invoice is finalized.
public type payment_settings_1 record {
    string|"" default_mandate?;
    payment_method_options_1 payment_method_options?;
    ("ach_credit_transfer"|"ach_debit"|"acss_debit"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"konbini"|"link"|"p24"|"paynow"|"paypal"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"us_bank_account"|"wechat_pay")[]|"" payment_method_types?;
};

public type line_item record {
    int amount;
    @constraint:String {maxLength: 5000}
    string description;
    int quantity;
};

# 
public type Payment_method_details_au_becs_debit record {
    # Bank-State-Branch number of the bank account.
    string? bsb_number?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    @constraint:String {maxLength: 5000}
    string mandate?;
};

# 
public type Payment_method_details_card_wallet_amex_express_checkout record {
};

# 
public type Checkout_eps_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type Reporting\.report_run record {
    int created;
    string? 'error?;
    string id;
    boolean livemode;
    "reporting.report_run" 'object;
    Financial_reporting_finance_report_run_run_parameters parameters;
    string report_type;
    File? result?;
    string status;
    int? succeeded_at?;
};

public type Billing\.meter_event_adjustment record {
    Billing_meter_resource_billing_meter_event_adjustment_cancel? cancel?;
    string event_name;
    boolean livemode;
    "billing.meter_event_adjustment" 'object;
    "complete"|"pending" status;
    "cancel" 'type;
};

# 
public type Person_additional_tos_acceptances record {
    Person_additional_tos_acceptance account;
};

public type customer_cards_body record {|
    # A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.
    @constraint:String {maxLength: 5000}
    string alipay_account?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Specifies which fields in the response should be expanded.
    customer_cards_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

@constraint:String {maxLength: 5000}
public type Account_capability_requirementsEventuallydueItemsString string;

public type subscription_schedules_schedule_bodyExpandItemsString string;

public type subscriptions_subscription_exposed_id_bodyExpandItemsString string;

public type Subscription_itemDiscountsItemsnull string|Discount;

# 
public type Billing_meter_resource_billing_meter_event_adjustment_cancel record {
    # Unique identifier for the event.
    string? identifier?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundTransfersQueriesExpandItemsString string;

# 
public type Account_invoices_settings record {
    # The list of default Account Tax IDs to automatically include on invoices. Account Tax IDs get added when an invoice is finalized.
    (string|Tax_id)[]? default_account_tax_ids?;
};

# 
public type Treasury_received_debits_resource_status_transitions record {
    # Timestamp describing when the DebitReversal changed status to `completed`.
    int? completed_at?;
};

public type payment_links_payment_link_bodyExpandItemsString string;

# 
public type Charge_transfer_data record {
    # The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account.
    int? amount?;
    # ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.
    string|Account destination;
};

# ConfirmationTokens help transport client side data collected by Stripe JS over
# to your server for confirming a PaymentIntent or SetupIntent. If the confirmation
# is successful, values present on the ConfirmationToken are written onto the Intent.
# 
# To learn more about how to use ConfirmationToken, visit the related guides:
# - [Finalize payments on the server](https://stripe.com/docs/payments/finalize-payments-on-the-server)
# - [Build two-step confirmation](https://stripe.com/docs/payments/build-a-two-step-confirmation).
public type Confirmation_token record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Time at which this ConfirmationToken expires and can no longer be used to confirm a PaymentIntent or SetupIntent.
    int? expires_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Data used for generating a Mandate.
    Confirmation_tokens_resource_mandate_data? mandate_data?;
    # String representing the object's type. Objects of the same type share the same value.
    "confirmation_token" 'object;
    # ID of the PaymentIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.
    string? payment_intent?;
    # Payment-method-specific configuration for this ConfirmationToken.
    Confirmation_tokens_resource_payment_method_options? payment_method_options?;
    # Payment details collected by the Payment Element, used to create a PaymentMethod when a PaymentIntent or SetupIntent is confirmed with this ConfirmationToken.
    Confirmation_tokens_resource_payment_method_preview? payment_method_preview?;
    # Return URL used to confirm the Intent.
    string? return_url?;
    # Indicates that you intend to make future payments with this ConfirmationToken's payment method.
    # 
    # The presence of this property will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete.
    "off_session"|"on_session"? setup_future_usage?;
    # ID of the SetupIntent that this ConfirmationToken was used to confirm, or null if this ConfirmationToken has not yet been used.
    string? setup_intent?;
    # Shipping information collected on this ConfirmationToken.
    Confirmation_tokens_resource_shipping? shipping?;
    # Indicates whether the Stripe SDK is used to handle confirmation flow. Defaults to `true` on ConfirmationToken.
    boolean use_stripe_sdk;
};

public type display_preference_param record {
    "none"|"off"|"on" preference?;
};

@constraint:String {maxLength: 5000}
public type NetworksAvailableItemsString string;

# 
public type Portal_flows_after_completion_redirect record {
    # The URL the customer will be redirected to after the flow is completed.
    @constraint:String {maxLength: 5000}
    string return_url;
};

public type transfer_data_params record {
    int amount?;
    string destination;
};

# 
public type Three_d_secure_usage record {
    # Whether 3D Secure is supported on this card.
    boolean supported;
};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationSessionsQueriesExpandItemsString string;

# Payment-method-specific configuration.
public type payment_method_options_param record {
    payment_method_options_param acss_debit?;
    payment_method_options_param_1 affirm?;
    payment_method_options_param_1 afterpay_clearpay?;
    payment_method_options_param_1 alipay?;
    payment_method_options_param_2 amazon_pay?;
    payment_method_options_param_1 au_becs_debit?;
    payment_method_options_param_3 bacs_debit?;
    payment_method_options_param_1 bancontact?;
    payment_method_options_param_4 boleto?;
    payment_method_options_param_5 card?;
    payment_method_options_param_3 cashapp?;
    payment_method_options_param_6 customer_balance?;
    payment_method_options_param_1 eps?;
    payment_method_options_param_1 fpx?;
    payment_method_options_param_1 giropay?;
    payment_method_options_param_1 grabpay?;
    payment_method_options_param_1 ideal?;
    payment_method_options_param_1 klarna?;
    payment_method_options_param_7 konbini?;
    payment_method_options_param_2 link?;
    payment_method_options_param_1 mobilepay?;
    payment_method_options_param_1 multibanco?;
    payment_method_options_param_7 oxxo?;
    payment_method_options_param_8 p24?;
    payment_method_options_param_1 paynow?;
    payment_method_options_param_9 paypal?;
    payment_method_options_param_10 pix?;
    payment_method_options_param_2 revolut_pay?;
    payment_method_options_param_3 sepa_debit?;
    payment_method_options_param_1 sofort?;
    payment_method_options_param_11 swish?;
    payment_method_options_param_12 us_bank_account?;
    payment_method_options_param_13 wechat_pay?;
};

public type canada record {
    province_standard province_standard?;
    "province_standard"|"simplified"|"standard" 'type;
};

# Encodes whether a FinancialAccount has access to a particular feature. Stripe or the platform can control features via the requested field.
public type feature_access record {
    access card_issuing?;
    access deposit_insurance?;
    financial_addresses financial_addresses?;
    inbound_transfers inbound_transfers?;
    access intra_stripe_flows?;
    outbound_payments outbound_payments?;
    outbound_transfers outbound_transfers?;
};

# Represents the Queries record for the operation: GetEntitlementsActiveEntitlements
public type GetEntitlementsActiveEntitlementsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetEntitlementsActiveEntitlementsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The ID of the customer.
    @constraint:String {maxLength: 5000}
    string customer;
};

public type verification_sessions_session_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_shipping_cost record {
    # Total shipping cost before any discounts or taxes are applied.
    int amount_subtotal;
    # Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.
    int amount_tax;
    # Total shipping cost after discounts and taxes are applied.
    int amount_total;
    # The ID of the ShippingRate for this order.
    string|Shipping_rate? shipping_rate?;
    # The taxes applied to the shipping rate.
    Line_items_tax_amount[] taxes?;
};

# 
public type CardList record {
    Card[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Country_spec_verification_fields record {
    Country_spec_verification_field_details company;
    Country_spec_verification_field_details individual;
};

# The line items representing what is being sold.
public type PaymentLinksResourceListLineItems_1 record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Information about the features available in the portal.
public type features_creation_param record {
    customer_update_creation_param customer_update?;
    invoice_list_param invoice_history?;
    payment_method_update_param payment_method_update?;
    subscription_cancel_creation_param subscription_cancel?;
    subscription_update_creation_param subscription_update?;
};

# 
public type Account_unification_account_controller_stripe_dashboard record {
    # A value indicating the Stripe dashboard this account has access to independent of the Connect application.
    "express"|"full"|"none" 'type;
};

public type treasury_inbound_transfers_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    treasury_inbound_transfers_bodyExpandItemsString[] expand?;
    # The FinancialAccount to send funds to.
    string financial_account;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The origin payment method to be debited for the InboundTransfer.
    @constraint:String {maxLength: 5000}
    string origin_payment_method;
    # The complete description that appears on your customers' statements. Maximum 10 characters.
    @constraint:String {maxLength: 10}
    string statement_descriptor?;
|};

public type invoice_data_params record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    record {string name; string value;}[]|"" custom_fields?;
    @constraint:String {maxLength: 1500}
    string description?;
    @constraint:String {maxLength: 5000}
    string footer?;
    param issuer?;
    record {|string...;|} metadata?;
    record {""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;}|"" rendering_options?;
};

# 
public type Refund_destination_details_generic record {
    # The reference assigned to the refund.
    string? reference?;
    # Status of the reference on the refund. This can be `pending`, `available` or `unavailable`.
    string? reference_status?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBankAccountsQueriesExpandItemsString string;

# 
public type Mandate_us_bank_account record {
    # Mandate collection method
    "paper" collection_method?;
};

@constraint:String {maxLength: 5000}
public type GetBalanceTransactionsQueriesExpandItemsString string;

# 
public type Payment_pages_checkout_session_custom_fields_text record {
    # The value that will pre-fill the field on the payment page.
    string? default_value?;
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
    # The value entered by the customer.
    string? value?;
};

public type capability_param record {
    boolean requested?;
};

# 
public type Payment_method_ideal record {
    # The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe"? bank?;
    # The Bank Identifier Code of the customer's bank, if the bank was provided.
    "ABNANL2A"|"ASNBNL21"|"BITSNL2A"|"BUNQNL2A"|"FVLBNL22"|"HANDNL2A"|"INGBNL2A"|"KNABNL2H"|"MOYONL21"|"NNBANL2G"|"NTSBDEB1"|"RABONL2U"|"RBRBNL21"|"REVOIE23"|"REVOLT21"|"SNSBNL2A"|"TRIONL2U"? bic?;
};

# All invoices will be billed using the specified settings.
public type invoice_settings_param record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    param issuer?;
};

public type discount_params record {
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string promotion_code?;
};

public type prices_price_body record {|
    # Whether the price can be used for new purchases. Defaults to `true`.
    boolean active?;
    # Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|record {record {boolean enabled; int maximum?; int minimum?; int preset?;} custom_unit_amount?; "exclusive"|"inclusive"|"unspecified" tax_behavior?; record {int flat_amount?; string flat_amount_decimal?; int unit_amount?; string unit_amount_decimal?; "inf"|int up_to;}[] tiers?; int unit_amount?; string unit_amount_decimal?;}...;|}|"" currency_options?;
    # Specifies which fields in the response should be expanded.
    prices_price_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.
    @constraint:String {maxLength: 200}
    string lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # A brief description of the price, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.
    boolean transfer_lookup_key?;
|};

# Documents that may be submitted to satisfy various informational requests.
public type external_account_documents_param record {
    documents_param bank_account_ownership_verification?;
};

# 
public type Payment_links_resource_tax_id_collection record {
    # Indicates whether tax ID collection is enabled for the session.
    boolean enabled;
};

public type sources_id_bodyExpandItemsString string;

# The full address of the location. If you're updating the `address` field, avoid changing the `country`. If you need to modify the `country` field, create a new `Location` object and re-register any existing readers to that location.
public type optional_fields_address_1 record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Treasury_received_credits_resource_reversal_details record {
    # Time before which a ReceivedCredit can be reversed.
    int? deadline?;
    # Set if a ReceivedCredit cannot be reversed.
    "already_reversed"|"deadline_passed"|"network_restricted"|"other"|"source_flow_restricted"? restricted_reason?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSourcesQueriesExpandItemsString string;

public type customer_funding_instructions_bodyExpandItemsString string;

public type customers_bodyPreferredlocalesItemsString string;

public type price_data_with_product_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product?;
    product_data product_data?;
    recurring_adhoc recurring?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# 
public type Payment_intent_payment_method_options_mobilepay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Transfer_schedule record {
    # The number of days charges for the account will be held before being paid out.
    int delay_days;
    # How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.
    @constraint:String {maxLength: 5000}
    string interval;
    # The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
    int monthly_anchor?;
    # The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.
    @constraint:String {maxLength: 5000}
    string weekly_anchor?;
};

# 
public type Payment_pages_checkout_session_after_expiration record {
    # When set, configuration used to recover the Checkout Session on expiry.
    Payment_pages_checkout_session_after_expiration_recovery? recovery?;
};

# Represents the Queries record for the operation: GetIdentityVerificationReportsReport
public type GetIdentityVerificationReportsReportQueries record {
    # Specifies which fields in the response should be expanded.
    GetIdentityVerificationReportsReportQueriesExpandItemsString[] expand?;
};

# The delivery of a specified quantity of carbon for an order.
public type Climate_removals_order_deliveries record {
    # Time at which the delivery occurred. Measured in seconds since the Unix epoch.
    int delivered_at;
    # Specific location of this delivery.
    Climate_removals_location? location?;
    # Quantity of carbon removal supplied by this delivery.
    @constraint:String {maxLength: 5000}
    string metric_tons;
    # Once retired, a URL to the registry entry for the tons from this delivery.
    string? registry_url?;
    Climate\.supplier supplier;
};

public type preferences_list_param record {
    boolean is_default?;
    boolean is_platform_default?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentIntentsIntentQueriesExpandItemsString string;

# ABA Records contain U.S. bank account details per the ABA format.
public type Treasury_financial_accounts_resource_aba_record record {
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name;
    # The account number.
    string? account_number?;
    # The last four characters of the account number.
    @constraint:String {maxLength: 5000}
    string account_number_last4;
    # Name of the bank.
    @constraint:String {maxLength: 5000}
    string bank_name;
    # Routing number for the account.
    @constraint:String {maxLength: 5000}
    string routing_number;
};

# List of subscription items, each with an attached price.
public type SubscriptionItemList record {
    # Details about each object.
    Subscription_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type apple_pay_domains_body record {|
    string domain_name;
    # Specifies which fields in the response should be expanded.
    apple_pay_domains_bodyExpandItemsString[] expand?;
|};

public type payment_method_configurations_configuration_body record {|
    payment_method_param_2 acss_debit?;
    # Whether the configuration can be used for new payments.
    boolean active?;
    payment_method_param_3 affirm?;
    payment_method_param_4 afterpay_clearpay?;
    payment_method_param_5 alipay?;
    payment_method_param_6 amazon_pay?;
    payment_method_param_7 apple_pay?;
    payment_method_param_8 apple_pay_later?;
    payment_method_param_9 au_becs_debit?;
    payment_method_param_10 bacs_debit?;
    payment_method_param_11 bancontact?;
    payment_method_param_12 blik?;
    payment_method_param_13 boleto?;
    payment_method_param_14 card?;
    payment_method_param_15 cartes_bancaires?;
    payment_method_param_16 cashapp?;
    payment_method_param_17 customer_balance?;
    payment_method_param_18 eps?;
    # Specifies which fields in the response should be expanded.
    payment_method_configurations_configuration_bodyExpandItemsString[] expand?;
    payment_method_param_19 fpx?;
    payment_method_param_20 giropay?;
    payment_method_param_21 google_pay?;
    payment_method_param_22 grabpay?;
    payment_method_param_23 ideal?;
    payment_method_param_24 jcb?;
    payment_method_param_25 klarna?;
    payment_method_param_26 konbini?;
    payment_method_param_27 link?;
    payment_method_param_28 mobilepay?;
    payment_method_param_29 multibanco?;
    # Configuration name.
    @constraint:String {maxLength: 100}
    string name?;
    payment_method_param_30 oxxo?;
    payment_method_param_31 p24?;
    payment_method_param_32 paynow?;
    payment_method_param_33 paypal?;
    payment_method_param_34 promptpay?;
    payment_method_param_35 revolut_pay?;
    payment_method_param_36 sepa_debit?;
    payment_method_param_37 sofort?;
    payment_method_param_38 swish?;
    payment_method_param_39 us_bank_account?;
    payment_method_param_40 wechat_pay?;
    payment_method_param_41 zip?;
|};

public type spending_limits_paramCategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# 
public type Payment_method_details_interac_present_receipt record {
    # The type of account being debited or credited
    "checking"|"savings"|"unknown" account_type?;
    # EMV tag 9F26, cryptogram generated by the integrated circuit chip.
    string? application_cryptogram?;
    # Mnenomic of the Application Identifier.
    string? application_preferred_name?;
    # Identifier for this transaction.
    string? authorization_code?;
    # EMV tag 8A. A code returned by the card issuer.
    string? authorization_response_code?;
    # Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
    string? cardholder_verification_method?;
    # EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.
    string? dedicated_file_name?;
    # The outcome of a series of EMV functions performed by the card reader.
    string? terminal_verification_results?;
    # An indication of various EMV functions performed during the transaction.
    string? transaction_status_information?;
};

public type account_sessions_body record {|
    # The identifier of the account to create an Account Session for.
    string account;
    account_session_create_components_param components;
    # Specifies which fields in the response should be expanded.
    account_sessions_bodyExpandItemsString[] expand?;
|};

public type FullnamealiasesItemsString string;

public type sources_id_body_1ExpandItemsString string;

# 
public type Payment_links_resource_automatic_tax record {
    # If `true`, tax will be calculated automatically using the customer's location.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

public type TaxamountsItemsObject record {
    int amount;
    record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data;
    int taxable_amount;
};

# 
public type Checkout_alipay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type subscription_trial_end "now"|int;

# 
public type Payment_method_details_card record {
    # The authorized amount.
    int? amount_authorized?;
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # When using manual capture, a future timestamp at which the charge will be automatically refunded if uncaptured.
    int capture_before?;
    # Check results by Card networks on Card address and CVC at time of payment.
    Payment_method_details_card_checks? checks?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization extended_authorization?;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization incremental_authorization?;
    # Installment details for this payment (Mexico only).
    # 
    # For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
    Payment_method_details_card_installments? installments?;
    # The last four digits of the card.
    string? last4?;
    # ID of the mandate used to make this payment or created by it.
    string? mandate?;
    Payment_flows_private_payment_methods_card_details_api_resource_multicapture multicapture?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # If this card has network token credentials, this contains the details of the network token credentials.
    Payment_method_details_card_network_token? network_token?;
    Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture overcapture?;
    # Populated if this transaction used 3D Secure authentication.
    Three_d_secure_details_charge? three_d_secure?;
    # If this Card is part of a card wallet, this contains the details of the card wallet.
    Payment_method_details_card_wallet? wallet?;
};

public type coupon_offer_param record {
    @constraint:String {maxLength: 5000}
    string coupon;
};

# Represents the Queries record for the operation: GetPlansPlan
public type GetPlansPlanQueries record {
    # Specifies which fields in the response should be expanded.
    GetPlansPlanQueriesExpandItemsString[] expand?;
};

# Settings for automatic tax lookup for this session and resulting payments, invoices, and subscriptions.
public type automatic_tax_params record {
    boolean enabled;
    param liability?;
};

public type transactions_create_force_capture_bodyExpandItemsString string;

public type settlements_settlement_body record {|
    # Specifies which fields in the response should be expanded.
    settlements_settlement_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type Source_type_eps record {
    string? reference?;
    string? statement_descriptor?;
};

public type currency_option record {
    int amount;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
};

public type authorization_increment_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_increment_bodyExpandItemsString[] expand?;
    # The amount to increment the authorization by. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int increment_amount;
    # If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    boolean is_amount_controllable?;
|};

public type transfer_schedule_specs record {
    "minimum"|int delay_days?;
    "daily"|"manual"|"monthly"|"weekly" interval?;
    int monthly_anchor?;
    "friday"|"monday"|"saturday"|"sunday"|"thursday"|"tuesday"|"wednesday" weekly_anchor?;
};

# Stripe needs to collect certain pieces of information about each account
# created. These requirements can differ depending on the account's country. The
# Country Specs API makes these rules available to your integration.
# 
# You can also view the information from this API call as [an online
# guide](/docs/connect/required-verification-information).
public type Country_spec record {
    # The default currency for this country. This applies to both payment methods and bank accounts.
    @constraint:String {maxLength: 5000}
    string default_currency;
    # Unique identifier for the object. Represented as the ISO country code for this country.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "country_spec" 'object;
    # Currencies that can be accepted in the specific country (for transfers).
    record {|string[]...;|} supported_bank_account_currencies;
    # Currencies that can be accepted in the specified country (for payments).
    Country_specSupportedpaymentcurrenciesItemsString[] supported_payment_currencies;
    # Payment methods available in the specified country. You may need to enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach)) on your account before they appear in this list. The `stripe` payment method refers to [charging through your platform](https://stripe.com/docs/connect/destination-charges).
    Country_specSupportedpaymentmethodsItemsString[] supported_payment_methods;
    # Countries that can accept transfers from the specified country.
    Country_specSupportedtransfercountriesItemsString[] supported_transfer_countries;
    Country_spec_verification_fields verification_fields;
};

public type id_fail_body_1 record {|
    # Specifies which fields in the response should be expanded.
    id_fail_body_1ExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetEventsQueriesExpandItemsString string;

public type Issuing\.transaction record {
    int amount;
    Issuing_transaction_amount_details? amount_details?;
    string|Issuing\.authorization? authorization?;
    string|Balance_transaction? balance_transaction?;
    string|Issuing\.card card;
    string|Issuing\.cardholder? cardholder?;
    int created;
    string currency;
    string|Issuing\.dispute? dispute?;
    string id;
    boolean livemode;
    int merchant_amount;
    string merchant_currency;
    Issuing_authorization_merchant_data merchant_data;
    record {|string...;|} metadata;
    Issuing_transaction_network_data? network_data?;
    "issuing.transaction" 'object;
    Issuing_transaction_purchase_details? purchase_details?;
    string|Issuing\.token? token?;
    Issuing_transaction_treasury? treasury?;
    "capture"|"refund" 'type;
    "apple_pay"|"google_pay"|"samsung_pay"? wallet?;
};

# Represents the Queries record for the operation: GetIssuingCards
public type GetIssuingCardsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Only return cards that have the given last four digits.
    @constraint:String {maxLength: 5000}
    string last4?;
    # Specifies which fields in the response should be expanded.
    GetIssuingCardsQueriesExpandItemsString[] expand?;
    @constraint:String {maxLength: 5000}
    string personalization_design?;
    # Only return cards that were issued during the given date interval.
    created_19 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return cards that have the given expiration month.
    int exp_month?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return cards that have the given expiration year.
    int exp_year?;
    # Only return cards belonging to the Cardholder with the provided ID.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # Only return cards that have the given type. One of `virtual` or `physical`.
    "physical"|"virtual" 'type?;
    # Only return cards that have the given status. One of `active`, `inactive`, or `canceled`.
    "active"|"canceled"|"inactive" status?;
};

public type transactions_create_unlinked_refund_bodyExpandItemsString string;

# Simulated data for the interac_present payment method.
public type interac_present record {
    @constraint:String {maxLength: 5000}
    string number?;
};

# 
public type Payment_intent_next_action_swish_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesQueriesExpandItemsString string;

public type verification_sessions_session_body record {|
    # Specifies which fields in the response should be expanded.
    verification_sessions_session_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    session_options_param options?;
    provided_details_param provided_details?;
    # The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed.
    "document"|"id_number" 'type?;
|};

@constraint:String {maxLength: 5000}
public type GetTaxRegistrationsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetInvoiceitems
public type GetInvoiceitemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetInvoiceitemsQueriesExpandItemsString[] expand?;
    # Only return invoice items that were created during the given date interval.
    created_15 created?;
    # Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied.
    boolean pending?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed.
    @constraint:String {maxLength: 5000}
    string invoice?;
    # The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type intent_verify_microdeposits_body_1ExpandItemsString string;

public type decline_charge_on_specs record {
    boolean avs_failure?;
    boolean cvc_failure?;
};

# Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.
public type Radar_radar_options record {
    # A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.
    @constraint:String {maxLength: 5000}
    string session?;
};

public type payment_intents_intent_body record {|
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int|"" application_fee_amount?;
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # ID of the Customer this PaymentIntent belongs to, if one exists.
    # 
    # Payment methods attached to other Customers cannot be used with this PaymentIntent.
    # 
    # If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    payment_intents_intent_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this PaymentIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params payment_method_data?;
    payment_method_options_param_15 payment_method_options?;
    # The list of payment method types (for example, card) that this PaymentIntent can use. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    payment_intents_intent_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    # Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string|"" receipt_email?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    # 
    # If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
    ""|"off_session"|"on_session" setup_future_usage?;
    # Shipping information for this PaymentIntent.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string carrier?; string name; string phone?; string tracking_number?;}|"" shipping?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_update_params transfer_data?;
    # A string that identifies the resulting payment as part of a group. You can only provide `transfer_group` if it hasn't been set. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    string transfer_group?;
|};

public type run_parameter_specsColumnsItemsString string;

public type refund_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    refund_cancel_bodyExpandItemsString[] expand?;
|};

public type prices_body record {|
    # Whether the price can be used for new purchases. Defaults to `true`.
    boolean active?;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|currency_option_2...;|} currency_options?;
    custom_unit_amount_1 custom_unit_amount?;
    # Specifies which fields in the response should be expanded.
    prices_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.
    @constraint:String {maxLength: 200}
    string lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # A brief description of the price, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    # The ID of the product that this price will belong to.
    @constraint:String {maxLength: 5000}
    string product?;
    inline_product_params product_data?;
    recurring recurring?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.
    "graduated"|"volume" tiers_mode?;
    # If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.
    boolean transfer_lookup_key?;
    transform_usage_param transform_quantity?;
    # A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge. One of `unit_amount`, `unit_amount_decimal`, or `custom_unit_amount` is required, unless `billing_scheme=tiered`.
    int unit_amount?;
    # Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    string unit_amount_decimal?;
|};

# 
public type TreasuryOutboundTransfersResourceOutboundTransferList record {
    # Details about each object.
    Treasury\.outbound_transfer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type reader_present_payment_method_bodyExpandItemsString string;

public type customer_subscriptions_body record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config automatic_tax?;
    # For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.
    int backdate_start_date?;
    # A future timestamp in UTC format to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals.
    int billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    customer_subscriptions_bodyExpandItemsString[] expand?;
    invoice_settings_param invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_create_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # Only applies to subscriptions with `collection_method=charge_automatically`.
    # 
    # Use `allow_incomplete` to create Subscriptions with `status=incomplete` if the first invoice can't be paid. Creating Subscriptions with this status allows you to manage scenarios where additional customer actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the PaymentIntent on the first invoice. This allows simpler management of scenarios where additional customer actions are needed to pay a subscription’s invoice, such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the PaymentIntent is not confirmed within 23 hours Subscriptions transition to `status=incomplete_expired`, which is a terminal state.
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice can't be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further customer action is needed, this parameter doesn't create a Subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    # 
    # `pending_if_incomplete` is only used with updates and cannot be passed when creating a Subscription.
    # 
    # Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first Invoice status.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    transfer_data_specs_3 transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    # Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    int trial_period_days?;
    trial_settings_config_1 trial_settings?;
|};

public type account_reject_body record {|
    # Specifies which fields in the response should be expanded.
    account_reject_bodyExpandItemsString[] expand?;
    # The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.
    @constraint:String {maxLength: 5000}
    string reason;
|};

public type transfers_bodyExpandItemsString string;

# 
public type Checkout_boleto_payment_method_options record {
    # The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type topups_topup_bodyExpandItemsString string;

# 
public type Invoice_transfer_data record {
    # The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.
    int? amount?;
    # The account where funds from the payment will be transferred to upon payment success.
    string|Account destination;
};

# Payment settings to pass to invoices created by the subscription.
public type payment_settings record {
    payment_method_options payment_method_options?;
    ("ach_credit_transfer"|"ach_debit"|"acss_debit"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"konbini"|"link"|"p24"|"paynow"|"paypal"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"us_bank_account"|"wechat_pay")[]|"" payment_method_types?;
    "off"|"on_subscription" save_default_payment_method?;
};

# Header data.
public type Forwarded_request_header record {
    # The header name.
    @constraint:String {maxLength: 5000}
    string name;
    # The header value.
    @constraint:String {maxLength: 5000}
    string value;
};

# 
public type Payment_method_card_wallet_google_pay record {
};

# 
public type Payment_links_resource_consent_collection record {
    # Settings related to the payment method reuse text shown in the Checkout UI.
    Payment_links_resource_payment_method_reuse_agreement? payment_method_reuse_agreement?;
    # If set to `auto`, enables the collection of customer consent for promotional communications.
    "auto"|"none"? promotions?;
    # If set to `required`, it requires cutomers to accept the terms of service before being able to pay. If set to `none`, customers won't be shown a checkbox to accept the terms of service.
    "none"|"required"? terms_of_service?;
};

public type data_params record {
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    string value;
};

# 
public type Treasury_received_debits_resource_linked_flows record {
    # The DebitReversal created as a result of this ReceivedDebit being reversed.
    string? debit_reversal?;
    # Set if the ReceivedDebit is associated with an InboundTransfer's return of funds.
    string? inbound_transfer?;
    # Set if the ReceivedDebit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.
    string? issuing_authorization?;
    # Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https://stripe.com/docs/api#issuing_disputes) object.
    string? issuing_transaction?;
    # Set if the ReceivedDebit was created due to a [Payout](https://stripe.com/docs/api#payouts) object.
    string? payout?;
};

# This is an object representing a capability for a Stripe account.
# 
# Related guide: [Account capabilities](https://stripe.com/docs/connect/account-capabilities)
public type Capability record {
    # The account for which the capability enables functionality.
    string|Account account;
    Account_capability_future_requirements future_requirements?;
    # The identifier for the capability.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "capability" 'object;
    # Whether the capability has been requested.
    boolean requested;
    # Time at which the capability was requested. Measured in seconds since the Unix epoch.
    int? requested_at?;
    Account_capability_requirements requirements?;
    # The status of the capability. Can be `active`, `inactive`, `pending`, or `unrequested`.
    "active"|"disabled"|"inactive"|"pending"|"unrequested" status;
};

public type topup_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    topup_cancel_bodyExpandItemsString[] expand?;
|};

public type fleet_reported_breakdown_tax_specs record {
    string local_amount_decimal?;
    string national_amount_decimal?;
};

# Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`).
public type receiver_params record {
    "email"|"manual"|"none" refund_attributes_method?;
};

public type MarketingfeaturesItemsObject record {
    string name;
};

# 
public type SecretServiceResourceSecretList record {
    Apps\.secret[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/apps/secrets`}
    string url;
};

public type person_additional_tos_acceptances_specs_1 record {
    settings_terms_of_service_specs account?;
};

# Represents the Queries record for the operation: GetTaxRegistrationsId
public type GetTaxRegistrationsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxRegistrationsIdQueriesExpandItemsString[] expand?;
};

# Pending Updates store the changes pending from a previous update that will be applied
# to the Subscription upon successful payment.
public type Subscriptions_resource_pending_update record {
    # If the update is applied, determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.
    int? billing_cycle_anchor?;
    # The point after which the changes reflected by this update will be discarded and no longer applied.
    int expires_at;
    # List of subscription items, each with an attached plan, that will be set if the update is applied.
    Subscription_item[]? subscription_items?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time, if the update is applied.
    int? trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean? trial_from_plan?;
};

# 
public type Invoices_resource_line_items_credited_items record {
    # Invoice containing the credited invoice line items
    @constraint:String {maxLength: 5000}
    string invoice;
    # Credited invoice line items
    Invoices_resource_line_items_credited_itemsInvoicelineitemsItemsString[] invoice_line_items;
};

# 
public type Payment_links_resource_completion_behavior_confirmation_page record {
    # The custom message that is displayed to the customer after the purchase is complete.
    string? custom_message?;
};

# Represents the Queries record for the operation: GetTreasuryInboundTransfersId
public type GetTreasuryInboundTransfersIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryInboundTransfersIdQueriesExpandItemsString[] expand?;
};

# 
public type Account_branding_settings record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.
    string|File? icon?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.
    string|File? logo?;
    # A CSS hex color value representing the primary branding color for this account
    string? primary_color?;
    # A CSS hex color value representing the secondary branding color for this account
    string? secondary_color?;
};

public type charge_capture_body record {|
    # The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded.
    int amount?;
    # An application fee to add on to this charge.
    int application_fee?;
    # An application fee amount to add on to this charge, which must be less than or equal to the original amount.
    int application_fee_amount?;
    # Specifies which fields in the response should be expanded.
    charge_capture_bodyExpandItemsString[] expand?;
    # The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode.
    string receipt_email?;
    # For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_specs_1 transfer_data?;
    # A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string transfer_group?;
|};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerQueriesExpandItemsString string;

# 
public type Customer_balance_customer_balance_settings record {
    # The configuration for how funds that land in the customer cash balance are reconciled.
    "automatic"|"manual" reconciliation_mode;
    # A flag to indicate if reconciliation mode returned is the user's default or is specific to this customer cash balance
    boolean using_merchant_default;
};

@constraint:String {maxLength: 5000}
public type GetApplicationFeesQueriesExpandItemsString string;

public type bank_accounts_id_bodyExpandItemsString string;

public type subscriptions_subscription_exposed_id_body_3ExpandItemsString string;

# This is an object representing a person associated with a Stripe account.
# 
# A platform cannot access a person for an account where [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `stripe`, which includes Standard and Express accounts, after creating an Account Link or Account Session to start Connect onboarding.
# 
# See the [Standard onboarding](/connect/standard-accounts) or [Express onboarding](/connect/express-accounts) documentation for information about prefilling information and account onboarding steps. Learn more about [handling identity verification with the API](/connect/handling-api-verification#person-information).
public type Person record {
    # The account the person is associated with.
    @constraint:String {maxLength: 5000}
    string account;
    Person_additional_tos_acceptances additional_tos_acceptances?;
    Address address?;
    Legal_entity_japan_address? address_kana?;
    Legal_entity_japan_address? address_kanji?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    Legal_entity_dob dob?;
    # The person's email address.
    string? email?;
    # The person's first name.
    string? first_name?;
    # The Kana variation of the person's first name (Japan only).
    string? first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    string? first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    PersonFullnamealiasesItemsString[] full_name_aliases?;
    Person_future_requirements? future_requirements?;
    # The person's gender (International regulations require either "male" or "female").
    string? gender?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Whether the person's `id_number` was provided. True if either the full ID number was provided or if only the required part of the ID number was provided (ex. last four of an individual's SSN for the US indicated by `ssn_last_4_provided`).
    boolean id_number_provided?;
    # Whether the person's `id_number_secondary` was provided.
    boolean id_number_secondary_provided?;
    # The person's last name.
    string? last_name?;
    # The Kana variation of the person's last name (Japan only).
    string? last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    string? last_name_kanji?;
    # The person's maiden name.
    string? maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # The country where the person is a national.
    string? nationality?;
    # String representing the object's type. Objects of the same type share the same value.
    "person" 'object;
    # The person's phone number.
    string? phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    "existing"|"none" political_exposure?;
    Address registered_address?;
    Person_relationship relationship?;
    Person_requirements? requirements?;
    # Whether the last four digits of the person's Social Security number have been provided (U.S. only).
    boolean ssn_last_4_provided?;
    Legal_entity_person_verification verification?;
};

# 
public type Payment_method_paypal record {
    # Owner's email. Values are provided by PayPal directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? payer_email?;
    # PayPal account PayerID. This identifier uniquely identifies the PayPal customer.
    string? payer_id?;
};

# 
public type Outbound_payments_payment_method_details record {
    Treasury_shared_resource_billing_details billing_details;
    Outbound_payments_payment_method_details_financial_account financial_account?;
    # The type of the payment method used in the OutboundPayment.
    "financial_account"|"us_bank_account" 'type;
    Outbound_payments_payment_method_details_us_bank_account us_bank_account?;
};

# Represents the Queries record for the operation: GetExchangeRatesRateId
public type GetExchangeRatesRateIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetExchangeRatesRateIdQueriesExpandItemsString[] expand?;
};

# 
public type Quotes_resource_automatic_tax record {
    # Automatically calculate taxes
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
    # The status of the most recent automated tax calculation for this quote.
    "complete"|"failed"|"requires_location_inputs"? status?;
};

# 
public type IssuingTransactionList record {
    Issuing\.transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/transactions`}
    string url;
};

public type networks_update_api_param record {
    ""|"cartes_bancaires"|"mastercard"|"visa" preferred?;
};

public type calculation_line_item record {
    int amount;
    @constraint:String {maxLength: 5000}
    string product?;
    int quantity?;
    @constraint:String {maxLength: 500}
    string reference?;
    "exclusive"|"inclusive" tax_behavior?;
    string tax_code?;
};

# 
public type Payment_method_klarna record {
    # The customer's date of birth, if provided.
    Payment_flows_private_payment_methods_klarna_dob? dob?;
};

public type connect_js_account_token_company_specs record {
    legal_entity_and_kyc_address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    boolean directors_provided?;
    boolean executives_provided?;
    @constraint:String {maxLength: 5000}
    string export_license_id?;
    @constraint:String {maxLength: 5000}
    string export_purpose_code?;
    @constraint:String {maxLength: 100}
    string name?;
    @constraint:String {maxLength: 100}
    string name_kana?;
    @constraint:String {maxLength: 100}
    string name_kanji?;
    boolean owners_provided?;
    company_ownership_declaration ownership_declaration?;
    boolean ownership_declaration_shown_and_signed?;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string registration_number?;
    ""|"free_zone_establishment"|"free_zone_llc"|"government_instrumentality"|"governmental_unit"|"incorporated_non_profit"|"incorporated_partnership"|"limited_liability_partnership"|"llc"|"multi_member_llc"|"private_company"|"private_corporation"|"private_partnership"|"public_company"|"public_corporation"|"public_partnership"|"registered_charity"|"single_member_llc"|"sole_establishment"|"sole_proprietorship"|"tax_exempt_government_instrumentality"|"unincorporated_association"|"unincorporated_non_profit"|"unincorporated_partnership" structure?;
    @constraint:String {maxLength: 5000}
    string tax_id?;
    @constraint:String {maxLength: 5000}
    string tax_id_registrar?;
    @constraint:String {maxLength: 5000}
    string vat_id?;
    verification_specs verification?;
};

public type payment_method_domains_payment_method_domain_body record {|
    # Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
    boolean enabled?;
    # Specifies which fields in the response should be expanded.
    payment_method_domains_payment_method_domain_bodyExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetCustomersCustomerCashBalanceTransactionsTransaction
public type GetCustomersCustomerCashBalanceTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCashBalanceTransactionsTransactionQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type Payment_intentPaymentmethodtypesItemsString string;

public type personalization_design_deactivate_bodyExpandItemsString string;

# 
public type Payment_intent_next_action_konbini_lawson record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# 
public type TransferList record {
    # Details about each object.
    Transfer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/transfers`}
    string url;
};

# 
public type Inbound_transfers record {
    Treasury_shared_resource_billing_details billing_details;
    # The type of the payment method used in the InboundTransfer.
    "us_bank_account" 'type;
    Inbound_transfers_payment_method_details_us_bank_account us_bank_account?;
};

public type terminal_connection_tokens_bodyExpandItemsString string;

public type person_verification_document_param record {
    @constraint:String {maxLength: 5000}
    string back?;
    @constraint:String {maxLength: 5000}
    string front?;
};

public type id_deactivate_bodyExpandItemsString string;

public type outbound_transfer_post_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_post_bodyExpandItemsString[] expand?;
|};

public type networks_options_param record {
    ("ach"|"us_domestic_wire")[] requested?;
};

# Represents the Queries record for the operation: GetChargesChargeRefundsRefund
public type GetChargesChargeRefundsRefundQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesChargeRefundsRefundQueriesExpandItemsString[] expand?;
};

public type Source_type_p24 record {
    string? reference?;
};

public type merchant_postal_address record {
    string|"" city?;
    @constraint:String {maxLength: 5000}
    string country;
    string|"" line1?;
    string|"" line2?;
    string|"" postal_code?;
    string|"" state?;
};

# 
public type Account_bacs_debit_payments_settings record {
    # The Bacs Direct Debit display name for this account. For payments made with Bacs Direct Debit, this name appears on the mandate as the statement descriptor. Mobile banking apps display it as the name of the business. To use custom branding, set the Bacs Direct Debit Display Name during or right after creation. Custom branding incurs an additional monthly fee for the platform. The fee appears 5 business days after requesting Bacs. If you don't set the display name before requesting Bacs capability, it's automatically set as "Stripe" and the account is onboarded to Stripe branding, which is free.
    string? display_name?;
    # The Bacs Direct Debit Service user number for this account. For payments made with Bacs Direct Debit, this number is a unique identifier of the account with our banking partners.
    string? service_user_number?;
};

# 
public type Payment_method_options_revolut_pay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# 
public type CustomerBalanceTransactionList record {
    # Details about each object.
    Customer_balance_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Checkout_link_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

public type created_param record {
    int gt?;
    int gte?;
    int lt?;
    int lte?;
};

# 
public type Issuing_authorization_fleet_non_fuel_price_data record {
    # Gross non-fuel amount that should equal the sum of the line items, inclusive of taxes.
    string? gross_amount_decimal?;
};

# 
public type Api_errors record {
    # For card errors, the ID of the failed charge.
    @constraint:String {maxLength: 5000}
    string charge?;
    # For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.
    @constraint:String {maxLength: 5000}
    string code?;
    # For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.
    @constraint:String {maxLength: 5000}
    string decline_code?;
    # A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.
    @constraint:String {maxLength: 5000}
    string doc_url?;
    # A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
    @constraint:String {maxLength: 40000}
    string message?;
    # If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
    @constraint:String {maxLength: 5000}
    string param?;
    Payment_intent payment_intent?;
    Payment_method payment_method?;
    # If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.
    @constraint:String {maxLength: 5000}
    string payment_method_type?;
    # A URL to the request log entry in your dashboard.
    @constraint:String {maxLength: 5000}
    string request_log_url?;
    Setup_intent setup_intent?;
    # The [source object](https://stripe.com/docs/api/sources/object) for errors returned on a request involving a source.
    Bank_account|Card|Source 'source?;
    # The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`
    "api_error"|"card_error"|"idempotency_error"|"invalid_request_error" 'type;
};

# Represents the Queries record for the operation: GetBalanceTransactions
public type GetBalanceTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBalanceTransactionsQueriesExpandItemsString[] expand?;
    # Only return transactions that were created during the given date interval.
    created_3 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only returns the original transaction.
    @constraint:String {maxLength: 5000}
    string 'source?;
    # Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
    @constraint:String {maxLength: 5000}
    string 'type?;
};

public type setup_intents_intent_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPayoutsQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_au_becs_debit record {
};

@constraint:String {maxLength: 5000}
public type CustomerPreferredlocalesItemsString string;

@constraint:String {maxLength: 5000}
public type Portal_subscription_update_productPricesItemsString string;

# 
public type Tax_product_resource_tax_breakdown record {
    # The amount of tax, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Specifies whether the tax amount is included in the line item amount.
    boolean inclusive;
    Tax_product_resource_tax_rate_details tax_rate_details;
    # The reasoning behind this tax, for example, if the product is tax exempt. We might extend the possible values for this field to support new tax rules.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated" taxability_reason;
    # The amount on which tax is calculated, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int taxable_amount;
};

public type Payment_pages_checkout_session_invoice_settingsAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# If this is a `card` PaymentMethod, this hash contains the user's card details.
public type update_api_param record {
    int exp_month?;
    int exp_year?;
    networks_update_api_param networks?;
};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationReportsReportQueriesExpandItemsString string;

public type id_reversals_bodyExpandItemsString string;

# 
public type Payment_method_revolut_pay record {
};

# 
public type Treasury_received_credits_resource_linked_flows record {
    # The CreditReversal created as a result of this ReceivedCredit being reversed.
    string? credit_reversal?;
    # Set if the ReceivedCredit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.
    string? issuing_authorization?;
    # Set if the ReceivedCredit is also viewable as an [Issuing transaction](https://stripe.com/docs/api#issuing_transactions) object.
    string? issuing_transaction?;
    # ID of the source flow. Set if `network` is `stripe` and the source flow is visible to the user. Examples of source flows include OutboundPayments, payouts, or CreditReversals.
    string? source_flow?;
    # The expandable object of the source flow.
    Treasury_received_credits_resource_source_flows_details? source_flow_details?;
    # The type of flow that originated the ReceivedCredit (for example, `outbound_payment`).
    string? source_flow_type?;
};

public type Tax\.calculation_line_item record {
    int amount;
    int amount_tax;
    string id;
    boolean livemode;
    "tax.calculation_line_item" 'object;
    string? product?;
    int quantity;
    string? reference?;
    "exclusive"|"inclusive" tax_behavior;
    Tax_product_resource_line_item_tax_breakdown[]? tax_breakdown?;
    string tax_code;
};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsPastdueItemsString string;

public type invoiceitems_bodyExpandItemsString string;

public type controller_dashboard_specs record {
    "express"|"full"|"none" 'type?;
};

public type Deleted_terminal\.reader record {
    true deleted;
    string id;
    "terminal.reader" 'object;
};

# 
public type Payment_method_blik record {
};

# Information on whether this personalization design is used to create cards when one is not specified.
public type preferences_param record {
    boolean is_default;
};

# 
public type Deleted_apple_pay_domain record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "apple_pay_domain" 'object;
};

# When you enable this parameter, this PaymentIntent accepts payment methods that you enable in the Dashboard and that are compatible with this PaymentIntent's other parameters.
public type automatic_payment_methods_param record {
    "always"|"never" allow_redirects?;
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type Person_future_requirementsEventuallydueItemsString string;

# Indicates the status of a specific payment method on a payment method domain.
public type Payment_method_domain_resource_payment_method_status record {
    # The status of the payment method on the domain.
    "active"|"inactive" status;
    Payment_method_domain_resource_payment_method_status_details status_details?;
};

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization record {
    # Indicates whether or not the capture window is extended beyond the standard authorization.
    "disabled"|"enabled" status;
};

# 
public type Invoice_payment_method_options_bancontact record {
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    "de"|"en"|"fr"|"nl" preferred_language;
};

@constraint:String {maxLength: 5000}
public type GetClimateOrdersQueriesExpandItemsString string;

# 
public type Payment_links_resource_subscription_data_invoice_settings record {
    Connect_account_reference issuer;
};

# 
public type Payment_method_details_promptpay record {
    # Bill reference generated by PromptPay
    string? reference?;
};

public type tokens_token_body record {|
    # Specifies which fields in the response should be expanded.
    tokens_token_bodyExpandItemsString[] expand?;
    # Specifies which status the token should be updated to.
    "active"|"deleted"|"suspended" status;
|};

public type invoice_mark_uncollectible_bodyExpandItemsString string;

# 
public type Customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction record {
    # The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were unapplied from.
    string|Payment_intent payment_intent;
};

# 
public type Issuing_dispute_canceled_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Date when order was canceled.
    int? canceled_at?;
    # Whether the cardholder was provided with a cancellation policy.
    boolean? cancellation_policy_provided?;
    # Reason for canceling the order.
    string? cancellation_reason?;
    # Date when the cardholder expected to receive the product.
    int? expected_at?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Description of the merchandise or service that was purchased.
    string? product_description?;
    # Whether the product was a merchandise or service.
    "merchandise"|"service"? product_type?;
    # Result of cardholder's attempt to return the product.
    "merchant_rejected"|"successful"? return_status?;
    # Date when the product was returned or attempted to be returned.
    int? returned_at?;
};

# Some payment methods have no required amount that a customer must send.
# Customers can be instructed to send any amount, and it can be made up of
# multiple transactions. As such, sources can have multiple associated
# transactions.
public type Source_transaction record {
    Source_transaction_ach_credit_transfer_data ach_credit_transfer?;
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver.
    int amount;
    Source_transaction_chf_credit_transfer_data chf_credit_transfer?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    Source_transaction_gbp_credit_transfer_data gbp_credit_transfer?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "source_transaction" 'object;
    Source_transaction_paper_check_data paper_check?;
    Source_transaction_sepa_credit_transfer_data sepa_credit_transfer?;
    # The ID of the source this transaction is attached to.
    @constraint:String {maxLength: 5000}
    string 'source;
    # The status of the transaction, one of `succeeded`, `pending`, or `failed`.
    @constraint:String {maxLength: 5000}
    string status;
    # The type of source this transaction is attached to.
    "ach_credit_transfer"|"ach_debit"|"alipay"|"bancontact"|"card"|"card_present"|"eps"|"giropay"|"ideal"|"klarna"|"multibanco"|"p24"|"sepa_debit"|"sofort"|"three_d_secure"|"wechat" 'type;
};

# 
public type Mandate_acss_debit record {
    # List of Stripe products where this mandate can be selected automatically.
    ("invoice"|"subscription")[] default_for?;
    # Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    string? interval_description?;
    # Payment schedule for the mandate.
    "combined"|"interval"|"sporadic" payment_schedule;
    # Transaction type of the mandate.
    "business"|"personal" transaction_type;
};

@constraint:String {maxLength: 5000}
public type GetCustomersSearchQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Person_requirementsEventuallydueItemsString string;

public type link_account_sessions_bodyExpandItemsString string;

# 
public type Account_payout_settings record {
    # A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See [Understanding Connect account balances](/connect/account-balances) for details. The default value is `false` when [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, otherwise `true`.
    boolean debit_negative_balances;
    Transfer_schedule schedule;
    # The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.
    string? statement_descriptor?;
};

# 
public type Payment_method_details_card_installments record {
    # Installment plan selected for the payment.
    Payment_method_details_card_installments_plan? plan?;
};

# 
public type Payment_links_resource_custom_text record {
    # Custom text that should be displayed after the payment confirmation button.
    Payment_links_resource_custom_text_position? after_submit?;
    # Custom text that should be displayed alongside shipping address collection.
    Payment_links_resource_custom_text_position? shipping_address?;
    # Custom text that should be displayed alongside the payment confirmation button.
    Payment_links_resource_custom_text_position? submit?;
    # Custom text that should be displayed in place of the default terms of service agreement text.
    Payment_links_resource_custom_text_position? terms_of_service_acceptance?;
};

# 
public type Source_mandate_notification_bacs_debit_data record {
    # Last 4 digits of the account number associated with the debit.
    @constraint:String {maxLength: 5000}
    string last4?;
};

public type account_disconnect_bodyExpandItemsString string;

# 
public type Shipping_rate_currency_option record {
    # A non-negative integer in cents representing how much to charge.
    int amount;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified" tax_behavior;
};

public type payout_cancel_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetEvents
public type GetEventsQueries record {
    # Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned.
    boolean delivery_success?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetEventsQueriesExpandItemsString[] expand?;
    # An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both.
    GetEventsQueriesTypesItemsString[] types?;
    # Only return events that were created during the given date interval.
    created_10 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.
    @constraint:String {maxLength: 5000}
    string 'type?;
};

# 
public type Deleted_coupon record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "coupon" 'object;
};

# 
public type Gelato_verified_outputs record {
    # The user's verified address.
    Address? address?;
    # The user’s verified date of birth.
    Gelato_data_verified_outputs_date? dob?;
    # The user's verified email address
    string? email?;
    # The user's verified first name.
    string? first_name?;
    # The user's verified id number.
    string? id_number?;
    # The user's verified id number type.
    "br_cpf"|"sg_nric"|"us_ssn"? id_number_type?;
    # The user's verified last name.
    string? last_name?;
    # The user's verified phone number
    string? phone?;
};

# 
public type Payment_method_details_grabpay record {
    # Unique transaction id generated by GrabPay
    string? transaction_id?;
};

public type accounts_account_body record {|
    # An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.
    @constraint:String {maxLength: 5000}
    string account_token?;
    business_profile_specs business_profile?;
    # The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    "company"|"government_entity"|"individual"|"non_profit" business_type?;
    capabilities_param capabilities?;
    company_specs company?;
    # Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).
    string default_currency?;
    documents_specs documents?;
    # The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.
    string email?;
    # Specifies which fields in the response should be expanded.
    accounts_account_bodyExpandItemsString[] expand?;
    # A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    @constraint:String {maxLength: 5000}
    string external_account?;
    individual_specs individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    settings_specs_update settings?;
    tos_acceptance_specs tos_acceptance?;
|};

# Represents the Queries record for the operation: GetTreasuryTransactionsId
public type GetTreasuryTransactionsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryTransactionsIdQueriesExpandItemsString[] expand?;
};

public type postal_address record {
    string|"" city?;
    @constraint:String {maxLength: 5000}
    string country;
    string|"" line1?;
    string|"" line2?;
    string|"" postal_code?;
    string|"" state?;
};

# 
public type Invoice_tax_amount record {
    # The amount, in cents (or local equivalent), of the tax.
    int amount;
    # Whether this tax amount is inclusive or exclusive.
    boolean inclusive;
    # The tax rate that was applied to get this tax amount.
    string|Tax_rate tax_rate;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated"? taxability_reason?;
    # The amount on which tax is calculated, in cents (or local equivalent).
    int? taxable_amount?;
};

# 
public type TaxProductResourceTaxTransactionLineItemList record {
    # Details about each object.
    Tax\.transaction_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/transactions/[^/]+/line_items`}
    string url;
};

# 
public type CountrySpecList record {
    Country_spec[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/country_specs`}
    string url;
};

# 
public type Payment_method_eps record {
    # The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau"? bank?;
};

# Represents the Queries record for the operation: GetAccountsAccount
public type GetAccountsAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountQueriesExpandItemsString[] expand?;
};

public type customer_bank_accounts_bodyExpandItemsString string;

# Specifies which event to cancel.
public type event_adjustment_cancel_settings_param record {
    @constraint:String {maxLength: 100}
    string identifier?;
};

public type Issuing\.dispute record {
    int amount;
    Balance_transaction[]? balance_transactions?;
    int created;
    string currency;
    Issuing_dispute_evidence evidence;
    string id;
    boolean livemode;
    "cardholder_authentication_issuer_liability"|"eci5_token_transaction_with_tavv"|"excess_disputes_in_timeframe"|"has_not_met_the_minimum_dispute_amount_requirements"|"invalid_duplicate_dispute"|"invalid_incorrect_amount_dispute"|"invalid_no_authorization"|"invalid_use_of_disputes"|"merchandise_delivered_or_shipped"|"merchandise_or_service_as_described"|"not_cancelled"|"other"|"refund_issued"|"submitted_beyond_allowable_time_limit"|"transaction_3ds_required"|"transaction_approved_after_prior_fraud_dispute"|"transaction_authorized"|"transaction_electronically_read"|"transaction_qualifies_for_visa_easy_payment_service"|"transaction_unattended" loss_reason?;
    record {|string...;|} metadata;
    "issuing.dispute" 'object;
    "expired"|"lost"|"submitted"|"unsubmitted"|"won" status;
    string|Issuing\.transaction 'transaction;
    Issuing_dispute_treasury? treasury?;
};

public type financial_account_features_bodyExpandItemsString string;

public type customer_balance_transactions_bodyExpandItemsString string;

public type personalization_design_activate_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetSubscriptionItems
public type GetSubscriptionItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSubscriptionItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # The ID of the subscription whose items will be retrieved.
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Issuing_personalization_design_carrier_text record {
    # The footer body text of the carrier letter.
    string? footer_body?;
    # The footer title text of the carrier letter.
    string? footer_title?;
    # The header body text of the carrier letter.
    string? header_body?;
    # The header title text of the carrier letter.
    string? header_title?;
};

# 
public type Payment_links_resource_shipping_option record {
    # A non-negative integer in cents representing how much to charge.
    int shipping_amount;
    # The ID of the Shipping Rate to use for this shipping option.
    string|Shipping_rate shipping_rate;
};

# Represents the Queries record for the operation: GetAccountsAccountCapabilities
public type GetAccountsAccountCapabilitiesQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountCapabilitiesQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetReportingReportTypesQueriesExpandItemsString string;

public type ProductsItemsObject record {
    ProductsItemsObjectPricesItemsString[] prices;
    string product;
};

public type schedule_cancel_bodyExpandItemsString string;

# This object represents files hosted on Stripe's servers. You can upload
# files with the [create file](https://stripe.com/docs/api#create_file) request
# (for example, when uploading dispute evidence). Stripe also
# creates files independently (for example, the results of a [Sigma scheduled
# query](#scheduled_queries)).
# 
# Related guide: [File upload guide](https://stripe.com/docs/file-upload)
public type File record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The file expires and isn't available at this time in epoch seconds.
    int? expires_at?;
    # The suitable name for saving the file to a filesystem.
    string? filename?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    FileResourceFileLinkList_1? links?;
    # String representing the object's type. Objects of the same type share the same value.
    "file" 'object;
    # The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.
    "account_requirement"|"additional_verification"|"business_icon"|"business_logo"|"customer_signature"|"dispute_evidence"|"document_provider_identity_document"|"finance_report_run"|"identity_document"|"identity_document_downloadable"|"pci_document"|"selfie"|"sigma_scheduled_query"|"tax_document_user_upload"|"terminal_reader_splashscreen" purpose;
    # The size of the file object in bytes.
    int size;
    # A suitable title for the document.
    string? title?;
    # The returned file type (for example, `csv`, `pdf`, `jpg`, or `png`).
    string? 'type?;
    # Use your live secret API key to download the file from this URL.
    string? url?;
};

public type reader_present_payment_method_body record {|
    # Simulated on-reader tip amount.
    int amount_tip?;
    card_present card_present?;
    # Specifies which fields in the response should be expanded.
    reader_present_payment_method_bodyExpandItemsString[] expand?;
    interac_present interac_present?;
    # Simulated payment type.
    "card_present"|"interac_present" 'type?;
|};

# This is an object representing your Stripe balance. You can retrieve it to see
# the balance currently on your Stripe account.
# 
# You can also retrieve the balance history, which contains a list of
# [transactions](https://stripe.com/docs/reporting/balance-transaction-types) that contributed to the balance
# (charges, payouts, and so forth).
# 
# The available and pending amounts for each currency are broken down further by
# payment source types.
# 
# Related guide: [Understanding Connect account balances](https://stripe.com/docs/connect/account-balances)
public type Balance record {
    # Available funds that you can transfer or pay out automatically by Stripe or explicitly through the [Transfers API](https://stripe.com/docs/api#transfers) or [Payouts API](https://stripe.com/docs/api#payouts). You can find the available balance for each currency and payment type in the `source_types` property.
    Balance_amount[] available;
    # Funds held due to negative balances on connected accounts where [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. You can find the connect reserve balance for each currency and payment type in the `source_types` property.
    Balance_amount[] connect_reserved?;
    # Funds that you can pay out using Instant Payouts.
    Balance_amount_net[] instant_available?;
    Balance_detail issuing?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "balance" 'object;
    # Funds that aren't available in the balance yet. You can find the pending balance for each currency and each payment type in the `source_types` property.
    Balance_amount[] pending;
};

# 
public type Legal_entity_company record {
    Address address?;
    # The Kana variation of the company's primary address (Japan only).
    Legal_entity_japan_address? address_kana?;
    # The Kanji variation of the company's primary address (Japan only).
    Legal_entity_japan_address? address_kanji?;
    # Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).
    boolean directors_provided?;
    # Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.
    boolean executives_provided?;
    # The export license ID number of the company, also referred as Import Export Code (India only).
    @constraint:String {maxLength: 5000}
    string export_license_id?;
    # The purpose code to use for export transactions (India only).
    @constraint:String {maxLength: 5000}
    string export_purpose_code?;
    # The company's legal name.
    string? name?;
    # The Kana variation of the company's legal name (Japan only).
    string? name_kana?;
    # The Kanji variation of the company's legal name (Japan only).
    string? name_kanji?;
    # Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).
    boolean owners_provided?;
    # This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.
    Legal_entity_ubo_declaration? ownership_declaration?;
    # The company's phone number (used for verification).
    string? phone?;
    # The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.
    "free_zone_establishment"|"free_zone_llc"|"government_instrumentality"|"governmental_unit"|"incorporated_non_profit"|"incorporated_partnership"|"limited_liability_partnership"|"llc"|"multi_member_llc"|"private_company"|"private_corporation"|"private_partnership"|"public_company"|"public_corporation"|"public_partnership"|"registered_charity"|"single_member_llc"|"sole_establishment"|"sole_proprietorship"|"tax_exempt_government_instrumentality"|"unincorporated_association"|"unincorporated_non_profit"|"unincorporated_partnership" structure?;
    # Whether the company's business ID number was provided.
    boolean tax_id_provided?;
    # The jurisdiction in which the `tax_id` is registered (Germany-based companies only).
    @constraint:String {maxLength: 5000}
    string tax_id_registrar?;
    # Whether the company's business VAT number was provided.
    boolean vat_id_provided?;
    # Information on the verification state of the company.
    Legal_entity_company_verification? verification?;
};

# 
public type Gelato_session_document_options record {
    # Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.
    ("driving_license"|"id_card"|"passport")[] allowed_types?;
    # Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.
    boolean require_id_number?;
    # Disable image uploads, identity document images have to be captured using the device’s camera.
    boolean require_live_capture?;
    # Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).
    boolean require_matching_selfie?;
};

public type setup_intents_intent_body record {|
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # ID of the Customer this SetupIntent belongs to, if one exists.
    # 
    # If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    setup_intents_intent_bodyExpandItemsString[] expand?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[] flow_directions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this SetupIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params_1 payment_method_data?;
    payment_method_options_param_16 payment_method_options?;
    # The list of payment method types (for example, card) that this SetupIntent can set up. If you don't provide this array, it defaults to ["card"].
    setup_intents_intent_bodyPaymentmethodtypesItemsString[] payment_method_types?;
|};

public type customer_details_param_2 record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    tax_param_1 tax?;
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    data_params[] tax_ids?;
};

public type invoice_add_lines_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_add_lines_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" invoice_metadata?;
    # The line items to add.
    lines_data_param[] lines;
|};

public type customer_details_param_1 record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    tax_param_1 tax?;
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    data_params[] tax_ids?;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountExternalAccountsIdQueriesExpandItemsString string;

public type orders_order_bodyExpandItemsString string;

# 
public type Payment_method_us_bank_account_blocked record {
    # The ACH network code that resulted in this block.
    "R02"|"R03"|"R04"|"R05"|"R07"|"R08"|"R10"|"R11"|"R16"|"R20"|"R29"|"R31"? network_code?;
    # The reason why this PaymentMethod's fingerprint has been blocked
    "bank_account_closed"|"bank_account_frozen"|"bank_account_invalid_details"|"bank_account_restricted"|"bank_account_unusable"|"debit_not_authorized"? reason?;
};

public type id_void_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_capability_requirementsPastdueItemsString string;

public type subscription_resume_body record {|
    # Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). Setting the value to `unchanged` advances the subscription's billing cycle anchor to the period that surrounds the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "now"|"unchanged" billing_cycle_anchor?;
    # Specifies which fields in the response should be expanded.
    subscription_resume_bodyExpandItemsString[] expand?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was resumed at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
|};

public type Identity\.verification_report record {
    string? client_reference_id?;
    int created;
    Gelato_document_report document?;
    Gelato_email_report email?;
    string id;
    Gelato_id_number_report id_number?;
    boolean livemode;
    "identity.verification_report" 'object;
    Gelato_verification_report_options options?;
    Gelato_phone_report phone?;
    Gelato_selfie_report selfie?;
    "document"|"id_number"|"verification_flow" 'type;
    string verification_flow?;
    string? verification_session?;
};

public type climate_orders_bodyExpandItemsString string;

# When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.
public type subscription_data_update_params record {
    subscription_data_invoice_settings_params invoice_settings?;
    record {|string...;|}|"" metadata?;
    record {record {"cancel"|"create_invoice"|"pause" missing_payment_method;} end_behavior;}|"" trial_settings?;
};

# 
public type Treasury_outbound_payments_resource_ach_tracking_details record {
    # ACH trace ID of the OutboundPayment for payments sent over the `ach` network.
    @constraint:String {maxLength: 5000}
    string trace_id;
};

# 
public type InvoicesResourceList record {
    Invoice[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/invoices`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetInvoicesUpcomingQueriesExpandItemsString string;

# 
public type Account_capabilities record {
    # The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.
    "active"|"inactive"|"pending" acss_debit_payments?;
    # The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.
    "active"|"inactive"|"pending" affirm_payments?;
    # The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.
    "active"|"inactive"|"pending" afterpay_clearpay_payments?;
    # The status of the AmazonPay capability of the account, or whether the account can directly process AmazonPay payments.
    "active"|"inactive"|"pending" amazon_pay_payments?;
    # The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.
    "active"|"inactive"|"pending" au_becs_debit_payments?;
    # The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.
    "active"|"inactive"|"pending" bacs_debit_payments?;
    # The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.
    "active"|"inactive"|"pending" bancontact_payments?;
    # The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.
    "active"|"inactive"|"pending" bank_transfer_payments?;
    # The status of the blik payments capability of the account, or whether the account can directly process blik charges.
    "active"|"inactive"|"pending" blik_payments?;
    # The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.
    "active"|"inactive"|"pending" boleto_payments?;
    # The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards
    "active"|"inactive"|"pending" card_issuing?;
    # The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.
    "active"|"inactive"|"pending" card_payments?;
    # The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.
    "active"|"inactive"|"pending" cartes_bancaires_payments?;
    # The status of the Cash App Pay capability of the account, or whether the account can directly process Cash App Pay payments.
    "active"|"inactive"|"pending" cashapp_payments?;
    # The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.
    "active"|"inactive"|"pending" eps_payments?;
    # The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.
    "active"|"inactive"|"pending" fpx_payments?;
    # The status of the GB customer_balance payments (GBP currency) capability of the account, or whether the account can directly process GB customer_balance charges.
    "active"|"inactive"|"pending" gb_bank_transfer_payments?;
    # The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.
    "active"|"inactive"|"pending" giropay_payments?;
    # The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.
    "active"|"inactive"|"pending" grabpay_payments?;
    # The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.
    "active"|"inactive"|"pending" ideal_payments?;
    # The status of the india_international_payments capability of the account, or whether the account can process international charges (non INR) in India.
    "active"|"inactive"|"pending" india_international_payments?;
    # The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.
    "active"|"inactive"|"pending" jcb_payments?;
    # The status of the Japanese customer_balance payments (JPY currency) capability of the account, or whether the account can directly process Japanese customer_balance charges.
    "active"|"inactive"|"pending" jp_bank_transfer_payments?;
    # The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.
    "active"|"inactive"|"pending" klarna_payments?;
    # The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.
    "active"|"inactive"|"pending" konbini_payments?;
    # The status of the legacy payments capability of the account.
    "active"|"inactive"|"pending" legacy_payments?;
    # The status of the link_payments capability of the account, or whether the account can directly process Link charges.
    "active"|"inactive"|"pending" link_payments?;
    # The status of the MobilePay capability of the account, or whether the account can directly process MobilePay charges.
    "active"|"inactive"|"pending" mobilepay_payments?;
    # The status of the Multibanco payments capability of the account, or whether the account can directly process Multibanco charges.
    "active"|"inactive"|"pending" multibanco_payments?;
    # The status of the Mexican customer_balance payments (MXN currency) capability of the account, or whether the account can directly process Mexican customer_balance charges.
    "active"|"inactive"|"pending" mx_bank_transfer_payments?;
    # The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.
    "active"|"inactive"|"pending" oxxo_payments?;
    # The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.
    "active"|"inactive"|"pending" p24_payments?;
    # The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.
    "active"|"inactive"|"pending" paynow_payments?;
    # The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.
    "active"|"inactive"|"pending" promptpay_payments?;
    # The status of the RevolutPay capability of the account, or whether the account can directly process RevolutPay payments.
    "active"|"inactive"|"pending" revolut_pay_payments?;
    # The status of the SEPA customer_balance payments (EUR currency) capability of the account, or whether the account can directly process SEPA customer_balance charges.
    "active"|"inactive"|"pending" sepa_bank_transfer_payments?;
    # The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.
    "active"|"inactive"|"pending" sepa_debit_payments?;
    # The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.
    "active"|"inactive"|"pending" sofort_payments?;
    # The status of the Swish capability of the account, or whether the account can directly process Swish payments.
    "active"|"inactive"|"pending" swish_payments?;
    # The status of the tax reporting 1099-K (US) capability of the account.
    "active"|"inactive"|"pending" tax_reporting_us_1099_k?;
    # The status of the tax reporting 1099-MISC (US) capability of the account.
    "active"|"inactive"|"pending" tax_reporting_us_1099_misc?;
    # The status of the transfers capability of the account, or whether your platform can transfer funds to the account.
    "active"|"inactive"|"pending" transfers?;
    # The status of the banking capability, or whether the account can have bank accounts.
    "active"|"inactive"|"pending" treasury?;
    # The status of the TWINT capability of the account, or whether the account can directly process TWINT charges.
    "active"|"inactive"|"pending" twint_payments?;
    # The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.
    "active"|"inactive"|"pending" us_bank_account_ach_payments?;
    # The status of the US customer_balance payments (USD currency) capability of the account, or whether the account can directly process US customer_balance charges.
    "active"|"inactive"|"pending" us_bank_transfer_payments?;
    # The status of the Zip capability of the account, or whether the account can directly process Zip charges.
    "active"|"inactive"|"pending" zip_payments?;
};

public type payment_intents_bodyPaymentmethodtypesItemsString string;

# 
public type Invoice_line_item_period record {
    # The end of the period, which must be greater than or equal to the start. This value is inclusive.
    int end;
    # The start of the period. This value is inclusive.
    int 'start;
};

# 
public type Payment_intent_next_action_konbini_seicomart record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# Configure fields to gather active consent from customers.
public type consent_collection_params_1 record {
    payment_method_reuse_agreement_params payment_method_reuse_agreement?;
    "auto"|"none" promotions?;
    "none"|"required" terms_of_service?;
};

# 
public type Tax_product_registrations_resource_country_options_us_local_lease_tax record {
    # A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

# 
public type Payment_intent_next_action_paynow_display_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data;
    # The URL to the hosted PayNow instructions page, which allows customers to view the PayNow QR code.
    string? hosted_instructions_url?;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

public type line_item_params record {
    adjustable_quantity_params adjustable_quantity?;
    line_item_paramsDynamictaxratesItemsString[] dynamic_tax_rates?;
    @constraint:String {maxLength: 5000}
    string price?;
    price_data_with_product_data price_data?;
    int quantity?;
    line_item_paramsTaxratesItemsString[] tax_rates?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentMethodsPaymentMethodQueriesExpandItemsString string;

# FinancialAddresses contain identifying information that resolves to a FinancialAccount.
public type Treasury_financial_accounts_resource_financial_address record {
    Treasury_financial_accounts_resource_aba_record aba?;
    # The list of networks that the address supports
    ("ach"|"us_domestic_wire")[] supported_networks?;
    # The type of financial address
    "aba" 'type;
};

public type due_date record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_intent_payment_method_options_sepa_debit record {
    Payment_intent_payment_method_options_mandate_options_sepa_debit mandate_options?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type id_refund_body record {|
    int amount?;
    @constraint:String {maxLength: 5000}
    string directive?;
    # Specifies which fields in the response should be expanded.
    id_refund_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_intent_payment_method_options_card record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Installment details for this payment (Mexico only).
    # 
    # For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
    Payment_method_options_card_installments? installments?;
    # Configuration options for setting up an eMandate for cards issued in India.
    Payment_method_options_card_mandate_options? mandate_options?;
    # Selected network to process this payment intent on. Depends on the available networks of the card attached to the payment intent. Can be only set confirm-time.
    "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa"? network?;
    # Request ability to [capture beyond the standard authorization validity window](https://stripe.com/docs/payments/extended-authorization) for this PaymentIntent.
    "if_available"|"never" request_extended_authorization?;
    # Request ability to [increment the authorization](https://stripe.com/docs/payments/incremental-authorization) for this PaymentIntent.
    "if_available"|"never" request_incremental_authorization?;
    # Request ability to make [multiple captures](https://stripe.com/docs/payments/multicapture) for this PaymentIntent.
    "if_available"|"never" request_multicapture?;
    # Request ability to [overcapture](https://stripe.com/docs/payments/overcapture) for this PaymentIntent.
    "if_available"|"never" request_overcapture?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
    # When enabled, using a card that is attached to a customer will require the CVC to be provided again (i.e. using the cvc_token parameter).
    boolean require_cvc_recollection?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kana?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kanji?;
};

public type terminal_readers_body record {|
    # Specifies which fields in the response should be expanded.
    terminal_readers_bodyExpandItemsString[] expand?;
    # Custom label given to the reader for easier identification. If no label is specified, the registration code will be used.
    @constraint:String {maxLength: 5000}
    string label?;
    # The location to assign the reader to.
    @constraint:String {maxLength: 5000}
    string location?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # A code generated by the reader used for registering to an account.
    @constraint:String {maxLength: 5000}
    string registration_code;
|};

public type billing_meters_bodyExpandItemsString string;

# 
public type Connect_embedded_payments_features record {
    # Whether to allow capturing and cancelling payment intents. This is `true` by default.
    boolean capture_payments;
    # Whether to allow connected accounts to manage destination charges that are created on behalf of them. This is `false` by default.
    boolean destination_on_behalf_of_charge_management;
    # Whether to allow responding to disputes, including submitting evidence and accepting disputes. This is `true` by default.
    boolean dispute_management;
    # Whether to allow sending refunds. This is `true` by default.
    boolean refund_management;
};

# 
public type Payment_links_resource_payment_intent_data record {
    # Indicates when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual"? capture_method?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Payment Intents](https://stripe.com/docs/api/payment_intents) generated from this payment link.
    record {|string...;|} metadata;
    # Indicates that you intend to make future payments with the payment method collected during checkout.
    "off_session"|"on_session"? setup_future_usage?;
    # Extra information about the payment. This will appear on your customer's statement when this payment succeeds in creating a charge.
    string? statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that's set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    string? statement_descriptor_suffix?;
    # A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.
    string? transfer_group?;
};

public type application string|"";

# The business information shown to customers in the portal.
public type business_profile_update_param record {
    string|"" headline?;
    string|"" privacy_policy_url?;
    string|"" terms_of_service_url?;
};

# 
public type Gelato_phone_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "phone_unverified_other"|"phone_verification_declined"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

# Represents the Queries record for the operation: GetIssuingPersonalizationDesignsPersonalizationDesign
public type GetIssuingPersonalizationDesignsPersonalizationDesignQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingPersonalizationDesignsPersonalizationDesignQueriesExpandItemsString[] expand?;
};

public type financial_accounts_financial_account_body record {|
    # Specifies which fields in the response should be expanded.
    financial_accounts_financial_account_bodyExpandItemsString[] expand?;
    feature_access_1 features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    platform_restrictions platform_restrictions?;
|};

public type id_deactivate_body record {|
    # Specifies which fields in the response should be expanded.
    id_deactivate_bodyExpandItemsString[] expand?;
|};

public type bank_transfer_param record {
    eu_bank_transfer_params eu_bank_transfer?;
    ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?;
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
};

# Information about a specific flow for the customer to go through. See the [docs](https://stripe.com/docs/customer-management/portal-deep-links) to learn more about using customer portal deep links and flows.
public type flow_data_param record {
    flow_data_after_completion_param after_completion?;
    flow_data_subscription_cancel_param subscription_cancel?;
    flow_data_subscription_update_param subscription_update?;
    flow_data_subscription_update_confirm_param subscription_update_confirm?;
    "payment_method_update"|"subscription_cancel"|"subscription_update"|"subscription_update_confirm" 'type;
};

# 
public type Issuing_transaction_flight_data record {
    # The time that the flight departed.
    int? departure_at?;
    # The name of the passenger.
    string? passenger_name?;
    # Whether the ticket is refundable.
    boolean? refundable?;
    # The legs of the trip.
    Issuing_transaction_flight_data_leg[]? segments?;
    # The travel agency that issued the ticket.
    string? travel_agency?;
};

@constraint:String {maxLength: 5000}
public type GetTerminalReadersQueriesExpandItemsString string;

# 
public type TerminalReaderRetrieveReader record {
    # A list of readers
    Terminal\.reader[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsSessionsSessionQueriesExpandItemsString string;

# 
public type Sepa_debit_generated_from record {
    # The ID of the Charge that generated this PaymentMethod, if any.
    string|Charge? charge?;
    # The ID of the SetupAttempt that generated this PaymentMethod, if any.
    string|Setup_attempt? setup_attempt?;
};

# Represents the Queries record for the operation: GetShippingRatesShippingRateToken
public type GetShippingRatesShippingRateTokenQueries record {
    # Specifies which fields in the response should be expanded.
    GetShippingRatesShippingRateTokenQueriesExpandItemsString[] expand?;
};

public type External_account Bank_account|Card;

# 
public type Payment_method_giropay record {
};

public type dispute_submit_bodyExpandItemsString string;

# The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).
public type login_page_create_param record {
    boolean enabled;
};

# Default invoice settings for this customer.
public type customer_param record {
    record {string name; string value;}[]|"" custom_fields?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    @constraint:String {maxLength: 5000}
    string footer?;
    record {""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;}|"" rendering_options?;
};

public type dispute_close_body record {|
    # Specifies which fields in the response should be expanded.
    dispute_close_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetTopupsQueriesExpandItemsString string;

# 
public type Payment_links_resource_custom_fields record {
    Payment_links_resource_custom_fields_dropdown dropdown?;
    # String of your choice that your integration can use to reconcile this field. Must be unique to this field, alphanumeric, and up to 200 characters.
    @constraint:String {maxLength: 5000}
    string 'key;
    Payment_links_resource_custom_fields_label label;
    Payment_links_resource_custom_fields_numeric numeric?;
    # Whether the customer is required to complete the field before completing the Checkout Session. Defaults to `false`.
    boolean optional;
    Payment_links_resource_custom_fields_text text?;
    # The type of the field.
    "dropdown"|"numeric"|"text" 'type;
};

# 
public type Payment_intent_processing record {
    Payment_intent_card_processing card?;
    # Type of the payment method for which payment is in `processing` state, one of `card`.
    "card" 'type;
};

public type intent_cancel_bodyExpandItemsString string;

# 
public type Checkout_pix_payment_method_options record {
    # The number of seconds after which Pix payment will expire.
    int? expires_after_seconds?;
};

# This hash contains the features the Payment Element supports.
public type Customer_session_resource_components_resource_payment_element_resource_features record {
    # A list of [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) values that controls which saved payment methods the Payment Element displays by filtering to only show payment methods with an `allow_redisplay` value that is present in this list.
    # 
    # If not specified, defaults to ["always"]. In order to display all saved payment methods, specify ["always", "limited", "unspecified"].
    ("always"|"limited"|"unspecified")[] payment_method_allow_redisplay_filters;
    # Controls whether or not the Payment Element shows saved payment methods. This parameter defaults to `disabled`.
    "disabled"|"enabled" payment_method_redisplay;
    # Determines the max number of saved payment methods for the Payment Element to display. This parameter defaults to `10`.
    int? payment_method_redisplay_limit?;
    # Controls whether the Payment Element displays the option to remove a saved payment method. This parameter defaults to `disabled`.
    # 
    # Allowing buyers to remove their saved payment methods impacts subscriptions that depend on that payment method. Removing the payment method detaches the [`customer` object](https://docs.stripe.com/api/payment_methods/object#payment_method_object-customer) from that [PaymentMethod](https://docs.stripe.com/api/payment_methods).
    "disabled"|"enabled" payment_method_remove;
    # Controls whether the Payment Element displays a checkbox offering to save a new payment method. This parameter defaults to `disabled`.
    # 
    # If a customer checks the box, the [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay) value on the PaymentMethod is set to `'always'` at confirmation time. For PaymentIntents, the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value is also set to the value defined in `payment_method_save_usage`.
    "disabled"|"enabled" payment_method_save;
    # When using PaymentIntents and the customer checks the save checkbox, this field determines the [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) value used to confirm the PaymentIntent.
    # 
    # When using SetupIntents, directly configure the [`usage`](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage) value on SetupIntent creation.
    "off_session"|"on_session"? payment_method_save_usage?;
};

public type linked_account_options_filters_paramAccountsubcategoriesItemsString "checking"|"savings";

public type schedule_details_params_2 record {
    "cancel"|"release" end_behavior?;
    phase_configuration_params_2[] phases?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

public type entitlements_features_body record {|
    # Specifies which fields in the response should be expanded.
    entitlements_features_bodyExpandItemsString[] expand?;
    # A unique key you provide as your own system identifier. This may be up to 80 characters.
    @constraint:String {maxLength: 80}
    string lookup_key;
    # Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # The feature's name, for your own purpose, not meant to be displayable to the customer.
    @constraint:String {maxLength: 80}
    string name;
|};

public type schedule_details_params_1 record {
    "cancel"|"release" end_behavior?;
    phase_configuration_params_1[] phases?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to
# create multiple codes for a single coupon.
public type Promotion_code record {
    # Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.
    boolean active;
    # The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.
    @constraint:String {maxLength: 5000}
    string code;
    Coupon coupon;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The customer that this promotion code can be used by.
    string|Customer|Deleted_customer? customer?;
    # Date at which the promotion code can no longer be redeemed.
    int? expires_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Maximum number of times this promotion code can be redeemed.
    int? max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "promotion_code" 'object;
    Promotion_codes_resource_restrictions restrictions;
    # Number of times this promotion code has been used.
    int times_redeemed;
};

@constraint:String {maxLength: 5000}
public type GetPaymentLinksQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetApplePayDomainsDomainQueriesExpandItemsString string;

public type test_helpers_test_clocks_body record {|
    # Specifies which fields in the response should be expanded.
    test_helpers_test_clocks_bodyExpandItemsString[] expand?;
    # The initial frozen time for this test clock.
    int frozen_time;
    # The name for this test clock.
    @constraint:String {maxLength: 300}
    string name?;
|};

@constraint:String {maxLength: 5000}
public type GetCountrySpecsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetFileLinksQueriesExpandItemsString string;

public type transfers_body record {|
    # A positive integer in cents (or local equivalent) representing how much to transfer.
    int amount?;
    # 3-letter [ISO code for currency](https://stripe.com/docs/payouts).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The ID of a connected Stripe account. <a href="/docs/connect/separate-charges-and-transfers">See the Connect documentation</a> for details.
    string destination;
    # Specifies which fields in the response should be expanded.
    transfers_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-availability) for details.
    string source_transaction?;
    # The source balance to use for this transfer. One of `bank_account`, `card`, or `fpx`. For most users, this will default to `card`.
    "bank_account"|"card"|"fpx" source_type?;
    # A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string transfer_group?;
|};

@constraint:String {maxLength: 5000}
public type GetDisputesQueriesExpandItemsString string;

public type subscription_default_tax_rates_1 Subscriptiondefaulttaxrates1ItemsString[]|"";

# Represents the Queries record for the operation: GetInvoicesInvoiceLines
public type GetInvoicesInvoiceLinesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesInvoiceLinesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Refund objects allow you to refund a previously created charge that isn't
# refunded yet. Funds are refunded to the credit or debit card that's
# initially charged.
# 
# Related guide: [Refunds](https://stripe.com/docs/refunds)
public type Refund record {
    # Amount, in cents (or local equivalent).
    int amount;
    # Balance transaction that describes the impact on your account balance.
    string|Balance_transaction? balance_transaction?;
    # ID of the charge that's refunded.
    string|Charge? charge?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).
    @constraint:String {maxLength: 5000}
    string description?;
    Refund_destination_details destination_details?;
    # After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
    string|Balance_transaction failure_balance_transaction?;
    # Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string failure_reason?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.
    @constraint:String {maxLength: 5000}
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    Refund_next_action next_action?;
    # String representing the object's type. Objects of the same type share the same value.
    "refund" 'object;
    # ID of the PaymentIntent that's refunded.
    string|Payment_intent? payment_intent?;
    # Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
    "duplicate"|"expired_uncaptured_charge"|"fraudulent"|"requested_by_customer"? reason?;
    # This is the transaction number that appears on email receipts sent for this refund.
    string? receipt_number?;
    # The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.
    string|Transfer_reversal? source_transfer_reversal?;
    # Status of the refund. This can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
    string? status?;
    # This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.
    string|Transfer_reversal? transfer_reversal?;
};

# 
public type Gelato_document_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "document_expired"|"document_type_not_supported"|"document_unverified_other"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

public type Tax\.transaction record {
    int created;
    string currency;
    string? customer?;
    Tax_product_resource_customer_details customer_details;
    string id;
    TaxProductResourceTaxTransactionLineItemList_1? line_items?;
    boolean livemode;
    record {|string...;|}? metadata?;
    "tax.transaction" 'object;
    int posted_at;
    string reference;
    Tax_product_resource_tax_transaction_resource_reversal? reversal?;
    Tax_product_resource_ship_from_details? ship_from_details?;
    Tax_product_resource_tax_transaction_shipping_cost? shipping_cost?;
    int tax_date;
    "reversal"|"transaction" 'type;
};

# 
public type Payment_method_options_bacs_debit record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type coupons_coupon_body record {|
    # Coupons defined in each available currency option (only supported if the coupon is amount-based). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|currency_option_1...;|} currency_options?;
    # Specifies which fields in the response should be expanded.
    coupons_coupon_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.
    @constraint:String {maxLength: 40}
    string name?;
|};

# 
public type Mandate_link record {
};

# 
public type Treasury_outbound_transfers_resource_status_transitions record {
    # Timestamp describing when an OutboundTransfer changed status to `canceled`
    int? canceled_at?;
    # Timestamp describing when an OutboundTransfer changed status to `failed`
    int? failed_at?;
    # Timestamp describing when an OutboundTransfer changed status to `posted`
    int? posted_at?;
    # Timestamp describing when an OutboundTransfer changed status to `returned`
    int? returned_at?;
};

# 
public type Payment_method_card_generated_card record {
    # The charge that created this object.
    string? charge?;
    # Transaction-specific details of the payment method used in the payment.
    Card_generated_from_payment_method_details? payment_method_details?;
    # The ID of the SetupAttempt that generated this PaymentMethod, if any.
    string|Setup_attempt? setup_attempt?;
};

# To top up your Stripe balance, you create a top-up object. You can retrieve
# individual top-ups, as well as list all top-ups. Top-ups are identified by a
# unique, random ID.
# 
# Related guide: [Topping up your platform account](https://stripe.com/docs/connect/top-ups)
public type Topup record {
    # Amount transferred.
    int amount;
    # ID of the balance transaction that describes the impact of this top-up on your account balance. May not be specified depending on status of top-up.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.
    int? expected_availability_date?;
    # Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).
    string? failure_code?;
    # Message to user further explaining reason for top-up failure if available.
    string? failure_message?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "topup" 'object;
    # The source field is deprecated. It might not always be present in the API response.
    Source? 'source?;
    # Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter.
    string? statement_descriptor?;
    # The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`.
    "canceled"|"failed"|"pending"|"reversed"|"succeeded" status;
    # A string that identifies this top-up as part of a group.
    string? transfer_group?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingTransactionsTransactionQueriesExpandItemsString string;

# The address where the card will be shipped.
public type shipping_specs record {
    required_address address;
    address_validation_param address_validation?;
    customs_param customs?;
    @constraint:String {maxLength: 5000}
    string name;
    string phone_number?;
    boolean require_signature?;
    "express"|"priority"|"standard" 'service?;
    "bulk"|"individual" 'type?;
};

public type adjustable_quantity_params record {
    boolean enabled;
    int maximum?;
    int minimum?;
};

public type billing_meter_events_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryInboundTransfersIdQueriesExpandItemsString string;

# 
public type CouponsResourceCouponList record {
    Coupon[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/coupons`}
    string url;
};

# Details provided about the user being verified. These details may be shown to the user.
public type provided_details_param record {
    string email?;
    string phone?;
};

# 
public type Invoice_payment_method_options_sepa_debit record {
};

# Represents the Queries record for the operation: GetCustomersCustomerBankAccountsId
public type GetCustomersCustomerBankAccountsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerBankAccountsIdQueriesExpandItemsString[] expand?;
};

public type treasury_received_debits_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    treasury_received_debits_bodyExpandItemsString[] expand?;
    # The FinancialAccount to pull funds from.
    string financial_account;
    source_params initiating_payment_method_details?;
    # Specifies the network rails to be used. If not set, will default to the PaymentMethod's preferred network. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach" network;
|};

public type default record {
    "standard" 'type;
};

public type invoice_void_bodyExpandItemsString string;

# Updated shipping information for the card.
public type shipping_specs_1 record {
    required_address address;
    address_validation_param address_validation?;
    customs_param customs?;
    @constraint:String {maxLength: 5000}
    string name;
    string phone_number?;
    boolean require_signature?;
    "express"|"priority"|"standard" 'service?;
    "bulk"|"individual" 'type?;
};

# 
public type Legal_entity_ubo_declaration record {
    # The Unix timestamp marking when the beneficial owner attestation was made.
    int? date?;
    # The IP address from which the beneficial owner attestation was made.
    string? ip?;
    # The user-agent string from the browser where the beneficial owner attestation was made.
    string? user_agent?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedCreditsIdQueriesExpandItemsString string;

public type ephemeral_keys_key_body record {|
    # Specifies which fields in the response should be expanded.
    ephemeral_keys_key_bodyExpandItemsString[] expand?;
|};

# 
public type Issuing_card_apple_pay record {
    # Apple Pay Eligibility
    boolean eligible;
    # Reason the card is ineligible for Apple Pay
    "missing_agreement"|"missing_cardholder_contact"|"unsupported_region"? ineligible_reason?;
};

# 
public type Payment_method_details_card_present_offline record {
    # Time at which the payment was collected while offline
    int? stored_at?;
};

# 
public type ApmsSourcesSourceList record {
    # Details about each object.
    (Bank_account|Card|Source)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Account_capability_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date by which the fields in `currently_due` must be collected to keep the capability enabled for the account. These fields may disable the capability sooner if the next threshold is reached before they are collected.
    int? current_deadline?;
    # Fields that need to be collected to keep the capability enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.
    Account_capability_requirementsCurrentlydueItemsString[] currently_due;
    # Description of why the capability is disabled. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification).
    "other"|"paused.inactivity"|"pending.onboarding"|"pending.review"|"platform_disabled"|"platform_paused"|"rejected.inactivity"|"rejected.other"|"rejected.unsupported_business"|"requirements.fields_needed"? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.
    Account_capability_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the capability on the account.
    Account_capability_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_capability_requirementsPendingverificationItemsString[] pending_verification;
};

# Represents the Queries record for the operation: GetTokensToken
public type GetTokensTokenQueries record {
    # Specifies which fields in the response should be expanded.
    GetTokensTokenQueriesExpandItemsString[] expand?;
};

public type retention_param record {
    coupon_offer_param coupon_offer;
    "coupon_offer" 'type;
};

public type personalization_designs_personalization_design_bodyExpandItemsString string;

public type reporting_report_runs_bodyExpandItemsString string;

# 
public type Checkout_oxxo_payment_method_options record {
    # The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetCustomersCustomerCashBalance
public type GetCustomersCustomerCashBalanceQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCashBalanceQueriesExpandItemsString[] expand?;
};

# Configuration for the components supported by this Customer Session.
public type Customer_session_resource_components record {
    Customer_session_resource_components_resource_buy_button buy_button;
    Customer_session_resource_components_resource_payment_element payment_element;
    Customer_session_resource_components_resource_pricing_table pricing_table;
};

# Represents the Queries record for the operation: GetReviewsReview
public type GetReviewsReviewQueries record {
    # Specifies which fields in the response should be expanded.
    GetReviewsReviewQueriesExpandItemsString[] expand?;
};

# Information about fuel that was purchased with this transaction.
public type fuel_specs record {
    @constraint:String {maxLength: 5000}
    string industry_product_code?;
    string quantity_decimal?;
    "diesel"|"other"|"unleaded_plus"|"unleaded_regular"|"unleaded_super" 'type?;
    "charging_minute"|"imperial_gallon"|"kilogram"|"kilowatt_hour"|"liter"|"other"|"pound"|"us_gallon" unit?;
    string unit_cost_decimal?;
};

# 
public type Payment_method_options_pix record {
    # The number of seconds (between 10 and 1209600) after which Pix payment will expire.
    int? expires_after_seconds?;
    # The timestamp at which the Pix expires.
    int? expires_at?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Gelato_id_number_report_error record {
    # A short machine-readable string giving the reason for the verification failure.
    "id_number_insufficient_document_data"|"id_number_mismatch"|"id_number_unverified_other"? code?;
    # A human-readable message giving the reason for the failure. These messages can be shown to your users.
    string? reason?;
};

@constraint:String {maxLength: 5000}
public type GetProductsSearchQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_klarna record {
};

public type custom_field_dropdown_param record {
    @constraint:String {maxLength: 100}
    string default_value?;
    custom_field_option_param[] options;
};

# 
public type Billing_meter_resource_customer_mapping_settings record {
    # The key in the meter event payload to use for mapping the event to a customer.
    @constraint:String {maxLength: 5000}
    string event_payload_key;
    # The method for mapping a meter event to a customer.
    "by_id" 'type;
};

public type configurations_configuration_body_1ExpandItemsString string;

# 
public type Legal_entity_dob record {
    # The day of birth, between 1 and 31.
    int? day?;
    # The month of birth, between 1 and 12.
    int? month?;
    # The four-digit year of birth.
    int? year?;
};

# 
public type Mandate_payment_method_details record {
    Mandate_acss_debit acss_debit?;
    Mandate_amazon_pay amazon_pay?;
    Mandate_au_becs_debit au_becs_debit?;
    Mandate_bacs_debit bacs_debit?;
    Card_mandate_payment_method_details card?;
    Mandate_cashapp cashapp?;
    Mandate_link link?;
    Mandate_paypal paypal?;
    Mandate_revolut_pay revolut_pay?;
    Mandate_sepa_debit sepa_debit?;
    # This mandate corresponds with a specific payment method type. The `payment_method_details` includes an additional hash with the same name and contains mandate information that's specific to that payment method.
    @constraint:String {maxLength: 5000}
    string 'type;
    Mandate_us_bank_account us_bank_account?;
};

@constraint:String {maxLength: 5000}
public type GetTransfersQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTerminalConfigurationsQueriesExpandItemsString string;

# 
public type Invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer record {
    # The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
    "BE"|"DE"|"ES"|"FR"|"IE"|"NL" country;
};

public type transactions_create_reversal_body record {|
    # Specifies which fields in the response should be expanded.
    transactions_create_reversal_bodyExpandItemsString[] expand?;
    # A flat amount to reverse across the entire transaction, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) in negative. This value represents the total amount to refund from the transaction, including taxes.
    int flat_amount?;
    # The line item amounts to reverse.
    transaction_line_item_reversal[] line_items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # If `partial`, the provided line item or shipping cost amounts are reversed. If `full`, the original transaction is fully reversed.
    "full"|"partial" mode;
    # The ID of the Transaction to partially or fully reverse.
    @constraint:String {maxLength: 5000}
    string original_transaction;
    # A custom identifier for this reversal, such as `myOrder_123-refund_1`, which must be unique across all transactions. The reference helps identify this reversal transaction in exported [tax reports](https://stripe.com/docs/tax/reports).
    @constraint:String {maxLength: 500}
    string reference;
    transaction_shipping_cost_reversal shipping_cost?;
|};

# 
public type Setup_intent_payment_method_options_paypal record {
    # The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.
    string? billing_agreement_id?;
};

# 
public type Outbound_transfers_payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach"|"us_domestic_wire" network;
    # Routing number of the bank account.
    string? routing_number?;
};

public type shipping_rates_shipping_rate_token_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentMethodConfigurationsConfigurationQueriesExpandItemsString string;

public type id_refunds_body record {|
    # A positive integer, in _cents (or local equivalent)_, representing how much of this fee to refund. Can refund only up to the remaining unrefunded amount of the fee.
    int amount?;
    # Specifies which fields in the response should be expanded.
    id_refunds_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

# 
public type Issuing_dispute_fraudulent_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingPersonalizationDesignsQueriesExpandItemsString string;

public type customer_sources_body record {|
    # A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.
    @constraint:String {maxLength: 5000}
    string alipay_account?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Specifies which fields in the response should be expanded.
    customer_sources_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

# 
public type Setup_intent_payment_method_options_amazon_pay record {
};

@constraint:String {maxLength: 5000}
public type Invoices_resource_line_items_credited_itemsInvoicelineitemsItemsString string;

# 
public type TaxProductResourceTaxCodeList record {
    Tax_code[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Invoice_setting_custom_field record {
    # The name of the custom field.
    @constraint:String {maxLength: 5000}
    string name;
    # The value of the custom field.
    @constraint:String {maxLength: 5000}
    string value;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCashBalanceQueriesExpandItemsString string;

public type subscription_schedules_schedule_body record {|
    default_settings_params default_settings?;
    # Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running. `cancel` will end the subscription schedule and cancel the underlying subscription.
    "cancel"|"none"|"release"|"renew" end_behavior?;
    # Specifies which fields in the response should be expanded.
    subscription_schedules_schedule_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase. Note that past phases can be omitted.
    phase_configuration_params_2[] phases?;
    # If the update changes the current phase, indicates whether the changes should be prorated. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
|};

@constraint:String {maxLength: 5000}
public type GetReportingReportTypesReportTypeQueriesExpandItemsString string;

# 
public type Payment_method_details_amazon_pay record {
};

# 
public type Checkout_revolut_pay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingDisputesQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_link record {
};

public type features record {
    @constraint:String {maxLength: 5000}
    string name;
};

# Represents the Queries record for the operation: GetBalanceHistory
public type GetBalanceHistoryQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBalanceHistoryQueriesExpandItemsString[] expand?;
    # Only return transactions that were created during the given date interval.
    created_2 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only returns the original transaction.
    @constraint:String {maxLength: 5000}
    string 'source?;
    # Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
    @constraint:String {maxLength: 5000}
    string 'type?;
};

# 
public type Payment_pages_checkout_session_phone_number_collection record {
    # Indicates whether phone number collection is enabled for the session
    boolean enabled;
};

# Revise an existing invoice. The new invoice will be created in `status=draft`. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.
public type from_invoice record {
    "revision" action;
    @constraint:String {maxLength: 5000}
    string invoice;
};

# 
public type FinancialReportingFinanceReportRunList record {
    Reporting\.report_run[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/reporting/report_runs`}
    string url;
};

# Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`.
public type payment_method_data record {
    billing_details_inner_params billing_details?;
    string financial_account?;
    record {|string...;|} metadata?;
    "financial_account"|"us_bank_account" 'type;
    payment_method_param_1 us_bank_account?;
};

# 
public type Outbound_transfers_payment_method_details record {
    Treasury_shared_resource_billing_details billing_details;
    # The type of the payment method used in the OutboundTransfer.
    "us_bank_account" 'type;
    Outbound_transfers_payment_method_details_us_bank_account us_bank_account?;
};

# 
public type Payment_pages_checkout_session_custom_fields_dropdown record {
    # The value that will pre-fill on the payment page.
    string? default_value?;
    # The options available for the customer to select. Up to 200 options allowed.
    Payment_pages_checkout_session_custom_fields_option[] options;
    # The option selected by the customer. This will be the `value` for the option.
    string? value?;
};

public type order_item_specs record {
    int amount?;
    string currency?;
    @constraint:String {maxLength: 1000}
    string description?;
    @constraint:String {maxLength: 5000}
    string parent?;
    int quantity?;
    "discount"|"shipping"|"sku"|"tax" 'type?;
};

# Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.
public type automatic_tax_config record {
    boolean enabled;
    param liability?;
};

@constraint:String {maxLength: 5000}
public type GetBillingMetersQueriesExpandItemsString string;

public type financial_addresses record {
    aba_access aba?;
};

# 
public type Issuing_cardholder_id_document record {
    # The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? back?;
    # The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? front?;
};

public type shipping_ship_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_ship_bodyExpandItemsString[] expand?;
|};

# 
public type Three_d_secure_details record {
    # For authenticated transactions: how the customer was authenticated by
    # the issuing bank.
    "challenge"|"frictionless"? authentication_flow?;
    # The Electronic Commerce Indicator (ECI). A protocol-level field
    # indicating what degree of authentication was performed.
    "01"|"02"|"05"|"06"|"07"? electronic_commerce_indicator?;
    # Indicates the outcome of 3D Secure authentication.
    "attempt_acknowledged"|"authenticated"|"exempted"|"failed"|"not_supported"|"processing_error"? result?;
    # Additional information about why 3D Secure succeeded or failed based
    # on the `result`.
    "abandoned"|"bypassed"|"canceled"|"card_not_enrolled"|"network_not_supported"|"protocol_error"|"rejected"? result_reason?;
    # The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
    # (dsTransId) for this payment.
    string? transaction_id?;
    # The version of 3D Secure that was used.
    "1.0.2"|"2.1.0"|"2.2.0"? version?;
};

public type custom_field_dropdown_param_1 record {
    custom_field_option_param[] options;
};

# 
public type Coupon_currency_option record {
    # Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
    int amount_off;
};

# Represents the Queries record for the operation: GetChargesSearch
public type GetChargesSearchQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesSearchQueriesExpandItemsString[] expand?;
    # The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for charges](https://stripe.com/docs/search#query-fields-for-charges).
    @constraint:String {maxLength: 5000}
    string query;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.
    @constraint:String {maxLength: 5000}
    string page?;
};

# A paginated list of owners for this account.
public type BankConnectionsResourceOwnerList_1 record {
    # Details about each object.
    Financial_connections\.account_owner[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Settings related to Financial Addresses features on a Financial Account
public type Treasury_financial_accounts_resource_financial_addresses_features record {
    Treasury_financial_accounts_resource_aba_toggle_settings aba?;
};

public type files_body record {|
    # Specifies which fields in the response should be expanded.
    files_bodyExpandItemsString[] expand?;
    # A file to upload. Make sure that the specifications follow RFC 2388, which defines file transfers for the `multipart/form-data` protocol.
    record {byte[] fileContent; string fileName;} file;
    file_link_creation_params file_link_data?;
    # The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.
    "account_requirement"|"additional_verification"|"business_icon"|"business_logo"|"customer_signature"|"dispute_evidence"|"identity_document"|"pci_document"|"tax_document_user_upload"|"terminal_reader_splashscreen" purpose;
|};

# 
public type Invoice_payment_method_options_us_bank_account record {
    Invoice_payment_method_options_us_bank_account_linked_account_options financial_connections?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type Terminal\.configuration record {
    Terminal_configuration_configuration_resource_device_type_specific_config bbpos_wisepos_e?;
    string id;
    boolean? is_account_default?;
    boolean livemode;
    string? name?;
    "terminal.configuration" 'object;
    Terminal_configuration_configuration_resource_offline_config offline?;
    Terminal_configuration_configuration_resource_reboot_window reboot_window?;
    Terminal_configuration_configuration_resource_device_type_specific_config stripe_s700?;
    Terminal_configuration_configuration_resource_tipping tipping?;
    Terminal_configuration_configuration_resource_device_type_specific_config verifone_p400?;
};

public type product_features_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryFinancialAccountsFinancialAccount
public type GetTreasuryFinancialAccountsFinancialAccountQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryFinancialAccountsFinancialAccountQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTerminalConfigurations
public type GetTerminalConfigurationsQueries record {
    # if present, only return the account default or non-default configurations.
    boolean is_account_default?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTerminalConfigurationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type climate_orders_body record {|
    # Requested amount of carbon removal units. Either this or `metric_tons` must be specified.
    int amount?;
    beneficiary_params beneficiary?;
    # Request currency for the order as a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a supported [settlement currency for your account](https://stripe.com/docs/currencies). If omitted, the account's default currency will be used.
    @constraint:String {maxLength: 5000}
    string currency?;
    # Specifies which fields in the response should be expanded.
    climate_orders_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Requested number of tons for the order. Either this or `amount` must be specified.
    string metric_tons?;
    # Unique identifier of the Climate product.
    @constraint:String {maxLength: 5000}
    string product;
|};

# 
public type Payment_method_options_cashapp record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Payment_intent_payment_method_options_swish record {
    # The order ID displayed in the Swish app after the payment is authorized.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type Source_type_sepa_debit record {
    string? bank_code?;
    string? branch_code?;
    string? country?;
    string? fingerprint?;
    string? last4?;
    string? mandate_reference?;
    string? mandate_url?;
};

# Represents the Queries record for the operation: GetClimateSuppliersSupplier
public type GetClimateSuppliersSupplierQueries record {
    # Specifies which fields in the response should be expanded.
    GetClimateSuppliersSupplierQueriesExpandItemsString[] expand?;
};

public type payout_reverse_body record {|
    # Specifies which fields in the response should be expanded.
    payout_reverse_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type treasury_debit_reversals_body record {|
    # Specifies which fields in the response should be expanded.
    treasury_debit_reversals_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The ReceivedDebit to reverse.
    @constraint:String {maxLength: 5000}
    string received_debit;
|};

public type delivery_estimate_bound record {
    "business_day"|"day"|"hour"|"month"|"week" unit;
    int value;
};

public type authorization_capture_body record {|
    # The amount to capture from the authorization. If not provided, the full amount of the authorization will be captured. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int capture_amount?;
    # Whether to close the authorization after capture. Defaults to true. Set to false to enable multi-capture flows.
    boolean close_authorization?;
    # Specifies which fields in the response should be expanded.
    authorization_capture_bodyExpandItemsString[] expand?;
    purchase_details_specs purchase_details?;
|};

# Represents the Queries record for the operation: GetProductsId
public type GetProductsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetProductsIdQueriesExpandItemsString[] expand?;
};

# 
public type Customer_tax_location record {
    # The customer's country as identified by Stripe Tax.
    @constraint:String {maxLength: 5000}
    string country;
    # The data source used to infer the customer's location.
    "billing_address"|"ip_address"|"payment_method"|"shipping_destination" 'source;
    # The customer's state, county, province, or region as identified by Stripe Tax.
    string? state?;
};

public type financial_connectionsPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

# Represents the Queries record for the operation: GetCustomersCustomer
public type GetCustomersCustomerQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_options_customer_balance record {
    Payment_method_options_customer_balance_bank_transfer bank_transfer?;
    # The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    "bank_transfer"? funding_type?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type invoice_finalize_bodyExpandItemsString string;

public type verification_specs record {
    verification_document_specs document?;
};

# 
public type Balance_net_available record {
    # Net balance amount, subtracting fees from platform-set pricing.
    int amount;
    # ID of the external account for this net balance (not expandable).
    @constraint:String {maxLength: 5000}
    string destination;
    Balance_amount_by_source_type source_types?;
};

# `Application Fee Refund` objects allow you to refund an application fee that
# has previously been created but not yet refunded. Funds will be refunded to
# the Stripe account from which the fee was originally collected.
# 
# Related guide: [Refunding application fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee)
public type Fee_refund record {
    # Amount, in cents (or local equivalent).
    int amount;
    # Balance transaction that describes the impact on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the application fee that was refunded.
    string|Application_fee fee;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "fee_refund" 'object;
};

public type prices_price_bodyExpandItemsString string;

# 
public type Issuing_authorization_fleet_fuel_price_data record {
    # Gross fuel amount that should equal Fuel Quantity multiplied by Fuel Unit Cost, inclusive of taxes.
    string? gross_amount_decimal?;
};

public type invoice_settings_params_1 record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    record {string name; string value;}[]|"" custom_fields?;
    @constraint:String {maxLength: 1500}
    string description?;
    @constraint:String {maxLength: 5000}
    string footer?;
    param_3 issuer?;
    record {|string...;|}|"" metadata?;
    record {""|"exclude_tax"|"include_inclusive_tax" amount_tax_display?;}|"" rendering_options?;
};

# Represents the Queries record for the operation: GetCustomersCustomerSubscriptions
public type GetCustomersCustomerSubscriptionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSubscriptionsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Portal_features record {
    Portal_customer_update customer_update;
    Portal_invoice_list invoice_history;
    Portal_payment_method_update payment_method_update;
    Portal_subscription_cancel subscription_cancel;
    Portal_subscription_update subscription_update;
};

# 
public type Funding_instructions_bank_transfer record {
    # The country of the bank account to fund
    @constraint:String {maxLength: 5000}
    string country;
    # A list of financial addresses that can be used to fund a particular balance
    Funding_instructions_bank_transfer_financial_address[] financial_addresses;
    # The bank_transfer type
    "eu_bank_transfer"|"jp_bank_transfer" 'type;
};

public type link_account_sessions_body record {|
    accountholder_params_1 account_holder;
    # Specifies which fields in the response should be expanded.
    link_account_sessions_bodyExpandItemsString[] expand?;
    filters_params filters?;
    # List of data features that you would like to request access to.
    # 
    # Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.
    (link_account_sessions_bodyPermissionsItemsString)[] permissions;
    # List of data features that you would like to retrieve upon account creation.
    ("balances"|"ownership"|"transactions")[] prefetch?;
    # For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    @constraint:String {maxLength: 5000}
    string return_url?;
|};

public type united_states record {
    local_amusement_tax local_amusement_tax?;
    local_lease_tax local_lease_tax?;
    @constraint:String {maxLength: 5000}
    string state;
    "local_amusement_tax"|"local_lease_tax"|"state_communications_tax"|"state_sales_tax" 'type;
};

# 
public type Account_card_issuing_settings record {
    Card_issuing_account_terms_of_service tos_acceptance?;
};

public type currency_option_2 record {
    custom_unit_amount custom_unit_amount?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    tier[] tiers?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type currency_option_3 record {
    int minimum_amount?;
};

# Fields that specify how to map a meter event to a customer.
public type customer_mapping_param record {
    @constraint:String {maxLength: 100}
    string event_payload_key;
    "by_id" 'type;
};

public type tipping_config record {
    int amount_eligible?;
};

public type currency_option_1 record {
    int amount_off;
};

public type tokens_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetIssuingCardholders
public type GetIssuingCardholdersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingCardholdersQueriesExpandItemsString[] expand?;
    # Only return cardholders that were created during the given date interval.
    created_18 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return cardholders that have the given phone number.
    string phone_number?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return cardholders that have the given type. One of `individual` or `company`.
    "company"|"individual" 'type?;
    # Only return cardholders that have the given email address.
    string email?;
    # Only return cardholders that have the given status. One of `active`, `inactive`, or `blocked`.
    "active"|"blocked"|"inactive" status?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerPaymentMethodsPaymentMethodQueriesExpandItemsString string;

# A Mandate is a record of the permission that your customer gives you to debit their payment method.
public type Mandate record {
    Customer_acceptance customer_acceptance;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    Mandate_multi_use multi_use?;
    # String representing the object's type. Objects of the same type share the same value.
    "mandate" 'object;
    # The account (if any) that the mandate is intended for.
    @constraint:String {maxLength: 5000}
    string on_behalf_of?;
    # ID of the payment method associated with this mandate.
    string|Payment_method payment_method;
    Mandate_payment_method_details payment_method_details;
    Mandate_single_use single_use?;
    # The mandate status indicates whether or not you can use it to initiate a payment.
    "active"|"inactive"|"pending" status;
    # The type of the mandate.
    "multi_use"|"single_use" 'type;
};

public type session_cancel_bodyExpandItemsString string;

# If you have [scheduled a Sigma query](https://stripe.com/docs/sigma/scheduled-queries), you'll
# receive a `sigma.scheduled_query_run.created` webhook each time the query
# runs. The webhook contains a `ScheduledQueryRun` object, which you can use to
# retrieve the query results.
public type Scheduled_query_run record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # When the query was run, Sigma contained a snapshot of your Stripe data at this time.
    int data_load_time;
    Sigma_scheduled_query_run_error 'error?;
    # The file object representing the results of the query.
    File? file?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "scheduled_query_run" 'object;
    # Time at which the result expires and is no longer available for download.
    int result_available_until;
    # SQL for the query.
    @constraint:String {maxLength: 100000}
    string sql;
    # The query's execution status, which will be `completed` for successful runs, and `canceled`, `failed`, or `timed_out` otherwise.
    @constraint:String {maxLength: 5000}
    string status;
    # Title of the query.
    @constraint:String {maxLength: 5000}
    string title;
};

# End user details.
public type end_user_details_params record {
    string ip_address?;
    boolean present;
};

# A Quote is a way to model prices that you'd like to provide to a customer.
# Once accepted, it will automatically create an invoice, subscription or subscription schedule.
public type Quote record {
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total after discounts and taxes are applied.
    int amount_total;
    # ID of the Connect Application that created the quote.
    string|Application|Deleted_application? application?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.
    int? application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.
    decimal? application_fee_percent?;
    Quotes_resource_automatic_tax automatic_tax;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method;
    Quotes_resource_computed computed;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string? currency?;
    # The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
    string|Customer|Deleted_customer? customer?;
    # The tax rates applied to this quote.
    (string|Tax_rate)[] default_tax_rates?;
    # A description that will be displayed on the quote PDF.
    string? description?;
    # The discounts applied to this quote.
    (string|Discount)[] discounts;
    # The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.
    int expires_at;
    # A footer that will be displayed on the quote PDF.
    string? footer?;
    # Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.
    Quotes_resource_from_quote? from_quote?;
    # A header that will be displayed on the quote PDF.
    string? header?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice that was created from this quote.
    string|Invoice|Deleted_invoice? invoice?;
    Invoice_setting_quote_setting invoice_settings;
    QuotesResourceListLineItems_1 line_items?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).
    string? number?;
    # String representing the object's type. Objects of the same type share the same value.
    "quote" 'object;
    # The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.
    string|Account? on_behalf_of?;
    # The status of the quote.
    "accepted"|"canceled"|"draft"|"open" status;
    Quotes_resource_status_transitions status_transitions;
    # The subscription that was created or updated from this quote.
    string|Subscription? subscription?;
    Quotes_resource_subscription_data_subscription_data subscription_data;
    # The subscription schedule that was created or updated from this quote.
    string|Subscription_schedule? subscription_schedule?;
    # ID of the test clock this quote belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    Quotes_resource_total_details total_details;
    # The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.
    Quotes_resource_transfer_data? transfer_data?;
};

# 
public type Setup_attempt_payment_method_details_paypal record {
};

@constraint:String {maxLength: 5000}
public type GetChargesChargeDisputeQueriesExpandItemsString string;

public type shipping_rates_body record {|
    delivery_estimate_1 delivery_estimate?;
    # The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.
    @constraint:String {maxLength: 100}
    string display_name;
    # Specifies which fields in the response should be expanded.
    shipping_rates_bodyExpandItemsString[] expand?;
    fixed_amount_1 fixed_amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.
    string tax_code?;
    # The type of calculation to use on the shipping rate.
    "fixed_amount" 'type?;
|};

# 
public type ExternalAccountList record {
    # The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
    (Bank_account|Card)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetInvoiceitemsInvoiceitemQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTestHelpersTestClocksTestClockQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetSubscriptionItemsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetCreditNotesPreviewLines
public type GetCreditNotesPreviewLinesQueries record {
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory" reason?;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    int amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.
    "credit_note"|"none" email_type?;
    # When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
    credit_note_shipping_cost_2 shipping_cost?;
    # The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int credit_amount?;
    # The credit note's memo appears on the credit note PDF.
    @constraint:String {maxLength: 5000}
    string memo?;
    # The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    int out_of_band_amount?;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int effective_at?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesPreviewLinesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int refund_amount?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # ID of the invoice.
    @constraint:String {maxLength: 5000}
    string invoice;
    # Line items that make up the credit note.
    credit_note_line_item_params[] lines?;
    # ID of an existing refund to link this credit note to.
    string refund?;
};

# Represents the Queries record for the operation: GetCustomersCustomerBalanceTransactionsTransaction
public type GetCustomersCustomerBalanceTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerBalanceTransactionsTransactionQueriesExpandItemsString[] expand?;
};

# 
public type Portal_flows_subscription_update_confirm_discount record {
    # The ID of the coupon to apply to this subscription update.
    string? coupon?;
    # The ID of a promotion code to apply to this subscription update.
    string? promotion_code?;
};

# 
public type Three_d_secure_details_charge record {
    # For authenticated transactions: how the customer was authenticated by
    # the issuing bank.
    "challenge"|"frictionless"? authentication_flow?;
    # The Electronic Commerce Indicator (ECI). A protocol-level field
    # indicating what degree of authentication was performed.
    "01"|"02"|"05"|"06"|"07"? electronic_commerce_indicator?;
    # The exemption requested via 3DS and accepted by the issuer at authentication time.
    "low_risk"|"none"? exemption_indicator?;
    # Whether Stripe requested the value of `exemption_indicator` in the transaction. This will depend on
    # the outcome of Stripe's internal risk assessment.
    boolean exemption_indicator_applied?;
    # Indicates the outcome of 3D Secure authentication.
    "attempt_acknowledged"|"authenticated"|"exempted"|"failed"|"not_supported"|"processing_error"? result?;
    # Additional information about why 3D Secure succeeded or failed based
    # on the `result`.
    "abandoned"|"bypassed"|"canceled"|"card_not_enrolled"|"network_not_supported"|"protocol_error"|"rejected"? result_reason?;
    # The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
    # (dsTransId) for this payment.
    string? transaction_id?;
    # The version of 3D Secure that was used.
    "1.0.2"|"2.1.0"|"2.2.0"? version?;
};

@constraint:String {maxLength: 5000}
public type GetClimateOrdersOrderQueriesExpandItemsString string;

# 
public type Payment_method_swish record {
};

# 
public type Setup_intent_payment_method_options_acss_debit record {
    # Currency supported by the bank account
    "cad"|"usd"? currency?;
    Setup_intent_payment_method_options_mandate_options_acss_debit mandate_options?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Checkout_fpx_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetChargesChargeRefunds
public type GetChargesChargeRefundsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetChargesChargeRefundsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type canceled_at record {int gt?; int gte?; int lt?; int lte?;}|int;

public type charge_refunds_body record {|
    int amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Customer whose customer balance to refund from.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    charge_refunds_bodyExpandItemsString[] expand?;
    # For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Origin of the refund
    "customer_balance" origin?;
    # The identifier of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.
    "duplicate"|"fraudulent"|"requested_by_customer" reason?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

public type cards_id_body_1 record {|
    # Specifies which fields in the response should be expanded.
    cards_id_body_1ExpandItemsString[] expand?;
|};

# 
public type Person_additional_tos_acceptance record {
    # The Unix timestamp marking when the legal guardian accepted the service agreement.
    int? date?;
    # The IP address from which the legal guardian accepted the service agreement.
    string? ip?;
    # The user agent of the browser from which the legal guardian accepted the service agreement.
    string? user_agent?;
};

# 
public type BillingMeterResourceBillingMeterList record {
    Billing\.meter[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/billing/meters`}
    string url;
};

public type order_shipping record {
    address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

public type customer_cards_bodyExpandItemsString string;

# Specific options for a registration in the specified `country`.
public type country_options record {
    default ae?;
    europe at?;
    default au?;
    europe be?;
    europe bg?;
    default bh?;
    canada ca?;
    default ch?;
    simplified cl?;
    simplified co?;
    europe cy?;
    europe cz?;
    europe de?;
    europe dk?;
    europe ee?;
    simplified eg?;
    europe es?;
    europe fi?;
    europe fr?;
    default gb?;
    simplified ge?;
    europe gr?;
    europe hr?;
    europe hu?;
    simplified id?;
    europe ie?;
    default 'is?;
    europe it?;
    default jp?;
    simplified ke?;
    simplified kr?;
    simplified kz?;
    europe lt?;
    europe lu?;
    europe lv?;
    europe mt?;
    simplified mx?;
    simplified my?;
    simplified ng?;
    europe nl?;
    default no?;
    default nz?;
    default om?;
    europe pl?;
    europe pt?;
    europe ro?;
    simplified sa?;
    europe se?;
    default sg?;
    europe si?;
    europe sk?;
    simplified th?;
    simplified tr?;
    united_states us?;
    simplified vn?;
    default za?;
};

# 
public type Issuing_dispute_not_received_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Date when the cardholder expected to receive the product.
    int? expected_at?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Description of the merchandise or service that was purchased.
    string? product_description?;
    # Whether the product was a merchandise or service.
    "merchandise"|"service"? product_type?;
};

public type inbound_transfer_cancel_bodyExpandItemsString string;

public type id_verify_body_1ExpandItemsString string;

# Cart
public type cart record {
    string currency;
    line_item[] line_items;
    int tax?;
    int total;
};

public type customers_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_invoice_creation record {
    # Indicates whether invoice creation is enabled for the Checkout Session.
    boolean enabled;
    Payment_pages_checkout_session_invoice_settings invoice_data;
};

# 
public type Subscription_item_billing_thresholds record {
    # Usage threshold that triggers the subscription to create an invoice
    int? usage_gte?;
};

# 
public type Payment_method_details_card_wallet_samsung_pay record {
};

# 
public type Payment_method_card_wallet_masterpass record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

# 
public type Checkout_card_payment_method_options record {
    Checkout_card_installments_options installments?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. If not provided, this value defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge" request_three_d_secure;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kana?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.
    @constraint:String {maxLength: 5000}
    string statement_descriptor_suffix_kanji?;
};

# Represents the Queries record for the operation: GetTestHelpersTestClocksTestClock
public type GetTestHelpersTestClocksTestClockQueries record {
    # Specifies which fields in the response should be expanded.
    GetTestHelpersTestClocksTestClockQueriesExpandItemsString[] expand?;
};

# 
public type Connect_embedded_account_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_account_features_claim features;
};

# Result from a email check
public type Gelato_email_report record {
    # Email to be verified.
    string? email?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_email_report_error? 'error?;
    # Status of this `email` check.
    "unverified"|"verified" status;
};

# 
public type Payment_method_p24 record {
    # The customer's bank, if provided.
    "alior_bank"|"bank_millennium"|"bank_nowy_bfg_sa"|"bank_pekao_sa"|"banki_spbdzielcze"|"blik"|"bnp_paribas"|"boz"|"citi_handlowy"|"credit_agricole"|"envelobank"|"etransfer_pocztowy24"|"getin_bank"|"ideabank"|"ing"|"inteligo"|"mbank_mtransfer"|"nest_przelew"|"noble_pay"|"pbac_z_ipko"|"plus_bank"|"santander_przelew24"|"tmobile_usbugi_bankowe"|"toyota_bank"|"velobank"|"volkswagen_bank"? bank?;
};
