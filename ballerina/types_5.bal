// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;

# 
public type Terminal_configuration_configuration_resource_tipping record {
    Terminal_configuration_configuration_resource_currency_specific_config aud?;
    Terminal_configuration_configuration_resource_currency_specific_config cad?;
    Terminal_configuration_configuration_resource_currency_specific_config chf?;
    Terminal_configuration_configuration_resource_currency_specific_config czk?;
    Terminal_configuration_configuration_resource_currency_specific_config dkk?;
    Terminal_configuration_configuration_resource_currency_specific_config eur?;
    Terminal_configuration_configuration_resource_currency_specific_config gbp?;
    Terminal_configuration_configuration_resource_currency_specific_config hkd?;
    Terminal_configuration_configuration_resource_currency_specific_config myr?;
    Terminal_configuration_configuration_resource_currency_specific_config nok?;
    Terminal_configuration_configuration_resource_currency_specific_config nzd?;
    Terminal_configuration_configuration_resource_currency_specific_config sek?;
    Terminal_configuration_configuration_resource_currency_specific_config sgd?;
    Terminal_configuration_configuration_resource_currency_specific_config usd?;
};

public type account_reject_bodyExpandItemsString string;

public type all_people_relationship_specs_1 record {
    boolean director?;
    boolean executive?;
    boolean legal_guardian?;
    boolean owner?;
    boolean representative?;
};

public type link_account_sessions_bodyPermissionsItemsString "balances"|"ownership"|"payment_method"|"transactions";

# 
public type Payment_method_options_card_mandate_options record {
    # Amount to be charged for future payments.
    int amount;
    # One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.
    "fixed"|"maximum" amount_type;
    # A description of the mandate or subscription that is meant to be displayed to the customer.
    string? description?;
    # End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.
    int? end_date?;
    # Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.
    "day"|"month"|"sporadic"|"week"|"year" interval;
    # The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.
    int? interval_count?;
    # Unique identifier for the mandate or subscription.
    @constraint:String {maxLength: 80}
    string reference;
    # Start date of the mandate or subscription. Start date should not be lesser than yesterday.
    int start_date;
    # Specifies the type of mandates supported. Possible values are `india`.
    ("india")[]? supported_types?;
};

# 
public type Payment_method_card_wallet_link record {
};

@constraint:String {maxLength: 5000}
public type GetWebhookEndpointsWebhookEndpointQueriesExpandItemsString string;

# Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
public type amount_details_specs record {
    int atm_fee?;
    int cashback_amount?;
};

public type customer_cash_balance_body record {|
    # Specifies which fields in the response should be expanded.
    customer_cash_balance_bodyExpandItemsString[] expand?;
    balance_settings_param_1 settings?;
|};

public type credit_note_line_item_params record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string description?;
    @constraint:String {maxLength: 5000}
    string invoice_line_item?;
    int quantity?;
    record {int amount; string tax_rate; int taxable_amount;}[]|"" tax_amounts?;
    TaxratesItemsString[]|"" tax_rates?;
    "custom_line_item"|"invoice_line_item" 'type;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type quote_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    quote_cancel_bodyExpandItemsString[] expand?;
|};

public type authorization_increment_bodyExpandItemsString string;

# 
public type Account_terms_of_service record {
    # The Unix timestamp marking when the account representative accepted the service agreement.
    int? date?;
    # The IP address from which the account representative accepted the service agreement.
    string? ip?;
    # The user agent of the browser from which the account representative accepted the service agreement.
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

# 
public type Rule record {
    # The action taken on the payment.
    @constraint:String {maxLength: 5000}
    string action;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The predicate to evaluate the payment against.
    @constraint:String {maxLength: 5000}
    string predicate;
};

# 
public type Payment_method_sepa_debit record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Branch code of bank associated with the bank account.
    string? branch_code?;
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Information about the object that generated this PaymentMethod.
    Sepa_debit_generated_from? generated_from?;
    # Last four characters of the IBAN.
    string? last4?;
};

# 
public type Payment_method_details_multibanco record {
    # Entity number associated with this Multibanco payment.
    string? entity?;
    # Reference number associated with this Multibanco payment.
    string? reference?;
};

# Represents the Queries record for the operation: GetCountrySpecs
public type GetCountrySpecsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCountrySpecsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Customers with certain payments enabled have a cash balance, representing funds that were paid
# by the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions
# represent when funds are moved into or out of this balance. This includes funding by the customer, allocation
# to payments, and refunds to the customer.
public type CustomerCashBalanceTransactionList record {
    # Details about each object.
    Customer_cash_balance_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type file_links_body record {|
    # Specifies which fields in the response should be expanded.
    file_links_bodyExpandItemsString[] expand?;
    # The link isn't usable after this future timestamp.
    int expires_at?;
    # The ID of the file. The file's `purpose` must be one of the following: `business_icon`, `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`, `identity_document_downloadable`, `pci_document`, `selfie`, `sigma_scheduled_query`, `tax_document_user_upload`, or `terminal_reader_splashscreen`.
    @constraint:String {maxLength: 5000}
    string file;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetRefundsRefundQueriesExpandItemsString string;

public type subscription_cancel_updating_param record {
    subscription_cancellation_reason_updating_param cancellation_reason?;
    boolean enabled?;
    "at_period_end"|"immediately" mode?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# OutboundTransfers contains outbound transfers features for a FinancialAccount.
public type Treasury_financial_accounts_resource_outbound_transfers record {
    Treasury_financial_accounts_resource_ach_toggle_settings ach?;
    Treasury_financial_accounts_resource_toggle_settings us_domestic_wire?;
};

# 
public type Payment_intent_next_action_wechat_pay_redirect_to_android_app record {
    # app_id is the APP ID registered on WeChat open platform
    @constraint:String {maxLength: 5000}
    string app_id;
    # nonce_str is a random string
    @constraint:String {maxLength: 5000}
    string nonce_str;
    # package is static value
    @constraint:String {maxLength: 5000}
    string package;
    # an unique merchant ID assigned by WeChat Pay
    @constraint:String {maxLength: 5000}
    string partner_id;
    # an unique trading ID assigned by WeChat Pay
    @constraint:String {maxLength: 5000}
    string prepay_id;
    # A signature
    @constraint:String {maxLength: 5000}
    string sign;
    # Specifies the current time in epoch format
    @constraint:String {maxLength: 5000}
    string timestamp;
};

# Represents the Queries record for the operation: GetCreditNotesPreview
public type GetCreditNotesPreviewQueries record {
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory" reason?;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    int amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.
    "credit_note"|"none" email_type?;
    # When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
    credit_note_shipping_cost_1 shipping_cost?;
    # The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int credit_amount?;
    # The credit note's memo appears on the credit note PDF.
    @constraint:String {maxLength: 5000}
    string memo?;
    # The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    int out_of_band_amount?;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int effective_at?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesPreviewQueriesExpandItemsString[] expand?;
    # The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int refund_amount?;
    # ID of the invoice.
    @constraint:String {maxLength: 5000}
    string invoice;
    # Line items that make up the credit note.
    credit_note_line_item_params[] lines?;
    # ID of an existing refund to link this credit note to.
    string refund?;
};

@constraint:String {maxLength: 5000}
public type GetCheckoutSessionsSessionLineItemsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Person_future_requirementsCurrentlydueItemsString string;

public type customer_subscriptions_bodyExpandItemsString string;

# 
public type Payment_intent_next_action_konbini_familymart record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# 
public type RadarEarlyFraudWarningList record {
    Radar\.early_fraud_warning[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/radar/early_fraud_warnings`}
    string url;
};

# 
public type Payment_method_options_giropay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type webhook_endpoints_body record {|
    # Events sent to this endpoint will be generated with this Stripe Version instead of your account's default Stripe Version.
    "2011-01-01"|"2011-06-21"|"2011-06-28"|"2011-08-01"|"2011-09-15"|"2011-11-17"|"2012-02-23"|"2012-03-25"|"2012-06-18"|"2012-06-28"|"2012-07-09"|"2012-09-24"|"2012-10-26"|"2012-11-07"|"2013-02-11"|"2013-02-13"|"2013-07-05"|"2013-08-12"|"2013-08-13"|"2013-10-29"|"2013-12-03"|"2014-01-31"|"2014-03-13"|"2014-03-28"|"2014-05-19"|"2014-06-13"|"2014-06-17"|"2014-07-22"|"2014-07-26"|"2014-08-04"|"2014-08-20"|"2014-09-08"|"2014-10-07"|"2014-11-05"|"2014-11-20"|"2014-12-08"|"2014-12-17"|"2014-12-22"|"2015-01-11"|"2015-01-26"|"2015-02-10"|"2015-02-16"|"2015-02-18"|"2015-03-24"|"2015-04-07"|"2015-06-15"|"2015-07-07"|"2015-07-13"|"2015-07-28"|"2015-08-07"|"2015-08-19"|"2015-09-03"|"2015-09-08"|"2015-09-23"|"2015-10-01"|"2015-10-12"|"2015-10-16"|"2016-02-03"|"2016-02-19"|"2016-02-22"|"2016-02-23"|"2016-02-29"|"2016-03-07"|"2016-06-15"|"2016-07-06"|"2016-10-19"|"2017-01-27"|"2017-02-14"|"2017-04-06"|"2017-05-25"|"2017-06-05"|"2017-08-15"|"2017-12-14"|"2018-01-23"|"2018-02-05"|"2018-02-06"|"2018-02-28"|"2018-05-21"|"2018-07-27"|"2018-08-23"|"2018-09-06"|"2018-09-24"|"2018-10-31"|"2018-11-08"|"2019-02-11"|"2019-02-19"|"2019-03-14"|"2019-05-16"|"2019-08-14"|"2019-09-09"|"2019-10-08"|"2019-10-17"|"2019-11-05"|"2019-12-03"|"2020-03-02"|"2020-08-27"|"2022-08-01"|"2022-11-15"|"2023-08-16"|"2023-10-16"|"2024-04-10"|"2024-06-20" api_version?;
    # Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.
    boolean connect?;
    # An optional description of what the webhook is used for.
    string|"" description?;
    # The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.
    ("*"|"account.application.authorized"|"account.application.deauthorized"|"account.external_account.created"|"account.external_account.deleted"|"account.external_account.updated"|"account.updated"|"application_fee.created"|"application_fee.refund.updated"|"application_fee.refunded"|"balance.available"|"billing_portal.configuration.created"|"billing_portal.configuration.updated"|"billing_portal.session.created"|"capability.updated"|"cash_balance.funds_available"|"charge.captured"|"charge.dispute.closed"|"charge.dispute.created"|"charge.dispute.funds_reinstated"|"charge.dispute.funds_withdrawn"|"charge.dispute.updated"|"charge.expired"|"charge.failed"|"charge.pending"|"charge.refund.updated"|"charge.refunded"|"charge.succeeded"|"charge.updated"|"checkout.session.async_payment_failed"|"checkout.session.async_payment_succeeded"|"checkout.session.completed"|"checkout.session.expired"|"climate.order.canceled"|"climate.order.created"|"climate.order.delayed"|"climate.order.delivered"|"climate.order.product_substituted"|"climate.product.created"|"climate.product.pricing_updated"|"coupon.created"|"coupon.deleted"|"coupon.updated"|"credit_note.created"|"credit_note.updated"|"credit_note.voided"|"customer.created"|"customer.deleted"|"customer.discount.created"|"customer.discount.deleted"|"customer.discount.updated"|"customer.source.created"|"customer.source.deleted"|"customer.source.expiring"|"customer.source.updated"|"customer.subscription.created"|"customer.subscription.deleted"|"customer.subscription.paused"|"customer.subscription.pending_update_applied"|"customer.subscription.pending_update_expired"|"customer.subscription.resumed"|"customer.subscription.trial_will_end"|"customer.subscription.updated"|"customer.tax_id.created"|"customer.tax_id.deleted"|"customer.tax_id.updated"|"customer.updated"|"customer_cash_balance_transaction.created"|"entitlements.active_entitlement_summary.updated"|"file.created"|"financial_connections.account.created"|"financial_connections.account.deactivated"|"financial_connections.account.disconnected"|"financial_connections.account.reactivated"|"financial_connections.account.refreshed_balance"|"financial_connections.account.refreshed_ownership"|"financial_connections.account.refreshed_transactions"|"identity.verification_session.canceled"|"identity.verification_session.created"|"identity.verification_session.processing"|"identity.verification_session.redacted"|"identity.verification_session.requires_input"|"identity.verification_session.verified"|"invoice.created"|"invoice.deleted"|"invoice.finalization_failed"|"invoice.finalized"|"invoice.marked_uncollectible"|"invoice.paid"|"invoice.payment_action_required"|"invoice.payment_failed"|"invoice.payment_succeeded"|"invoice.sent"|"invoice.upcoming"|"invoice.updated"|"invoice.voided"|"invoiceitem.created"|"invoiceitem.deleted"|"issuing_authorization.created"|"issuing_authorization.request"|"issuing_authorization.updated"|"issuing_card.created"|"issuing_card.updated"|"issuing_cardholder.created"|"issuing_cardholder.updated"|"issuing_dispute.closed"|"issuing_dispute.created"|"issuing_dispute.funds_reinstated"|"issuing_dispute.submitted"|"issuing_dispute.updated"|"issuing_personalization_design.activated"|"issuing_personalization_design.deactivated"|"issuing_personalization_design.rejected"|"issuing_personalization_design.updated"|"issuing_token.created"|"issuing_token.updated"|"issuing_transaction.created"|"issuing_transaction.updated"|"mandate.updated"|"payment_intent.amount_capturable_updated"|"payment_intent.canceled"|"payment_intent.created"|"payment_intent.partially_funded"|"payment_intent.payment_failed"|"payment_intent.processing"|"payment_intent.requires_action"|"payment_intent.succeeded"|"payment_link.created"|"payment_link.updated"|"payment_method.attached"|"payment_method.automatically_updated"|"payment_method.detached"|"payment_method.updated"|"payout.canceled"|"payout.created"|"payout.failed"|"payout.paid"|"payout.reconciliation_completed"|"payout.updated"|"person.created"|"person.deleted"|"person.updated"|"plan.created"|"plan.deleted"|"plan.updated"|"price.created"|"price.deleted"|"price.updated"|"product.created"|"product.deleted"|"product.updated"|"promotion_code.created"|"promotion_code.updated"|"quote.accepted"|"quote.canceled"|"quote.created"|"quote.finalized"|"radar.early_fraud_warning.created"|"radar.early_fraud_warning.updated"|"refund.created"|"refund.updated"|"reporting.report_run.failed"|"reporting.report_run.succeeded"|"reporting.report_type.updated"|"review.closed"|"review.opened"|"setup_intent.canceled"|"setup_intent.created"|"setup_intent.requires_action"|"setup_intent.setup_failed"|"setup_intent.succeeded"|"sigma.scheduled_query_run.created"|"source.canceled"|"source.chargeable"|"source.failed"|"source.mandate_notification"|"source.refund_attributes_required"|"source.transaction.created"|"source.transaction.updated"|"subscription_schedule.aborted"|"subscription_schedule.canceled"|"subscription_schedule.completed"|"subscription_schedule.created"|"subscription_schedule.expiring"|"subscription_schedule.released"|"subscription_schedule.updated"|"tax.settings.updated"|"tax_rate.created"|"tax_rate.updated"|"terminal.reader.action_failed"|"terminal.reader.action_succeeded"|"test_helpers.test_clock.advancing"|"test_helpers.test_clock.created"|"test_helpers.test_clock.deleted"|"test_helpers.test_clock.internal_failure"|"test_helpers.test_clock.ready"|"topup.canceled"|"topup.created"|"topup.failed"|"topup.reversed"|"topup.succeeded"|"transfer.created"|"transfer.reversed"|"transfer.updated"|"treasury.credit_reversal.created"|"treasury.credit_reversal.posted"|"treasury.debit_reversal.completed"|"treasury.debit_reversal.created"|"treasury.debit_reversal.initial_credit_granted"|"treasury.financial_account.closed"|"treasury.financial_account.created"|"treasury.financial_account.features_status_updated"|"treasury.inbound_transfer.canceled"|"treasury.inbound_transfer.created"|"treasury.inbound_transfer.failed"|"treasury.inbound_transfer.succeeded"|"treasury.outbound_payment.canceled"|"treasury.outbound_payment.created"|"treasury.outbound_payment.expected_arrival_date_updated"|"treasury.outbound_payment.failed"|"treasury.outbound_payment.posted"|"treasury.outbound_payment.returned"|"treasury.outbound_payment.tracking_details_updated"|"treasury.outbound_transfer.canceled"|"treasury.outbound_transfer.created"|"treasury.outbound_transfer.expected_arrival_date_updated"|"treasury.outbound_transfer.failed"|"treasury.outbound_transfer.posted"|"treasury.outbound_transfer.returned"|"treasury.outbound_transfer.tracking_details_updated"|"treasury.received_credit.created"|"treasury.received_credit.failed"|"treasury.received_credit.succeeded"|"treasury.received_debit.created")[] enabled_events;
    # Specifies which fields in the response should be expanded.
    webhook_endpoints_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The URL of the webhook endpoint.
    string url;
|};

# Options for customizing how the account functions within Stripe.
public type settings_specs record {
    bacs_debit_payments_specs bacs_debit_payments?;
    branding_settings_specs branding?;
    card_issuing_settings_specs card_issuing?;
    card_payments_settings_specs card_payments?;
    payments_settings_specs payments?;
    payout_settings_specs payouts?;
    treasury_settings_specs treasury?;
};

# 
public type Checkout_session_payment_method_options record {
    Checkout_acss_debit_payment_method_options acss_debit?;
    Checkout_affirm_payment_method_options affirm?;
    Checkout_afterpay_clearpay_payment_method_options afterpay_clearpay?;
    Checkout_alipay_payment_method_options alipay?;
    Checkout_amazon_pay_payment_method_options amazon_pay?;
    Checkout_au_becs_debit_payment_method_options au_becs_debit?;
    Checkout_bacs_debit_payment_method_options bacs_debit?;
    Checkout_bancontact_payment_method_options bancontact?;
    Checkout_boleto_payment_method_options boleto?;
    Checkout_card_payment_method_options card?;
    Checkout_cashapp_payment_method_options cashapp?;
    Checkout_customer_balance_payment_method_options customer_balance?;
    Checkout_eps_payment_method_options eps?;
    Checkout_fpx_payment_method_options fpx?;
    Checkout_giropay_payment_method_options giropay?;
    Checkout_grab_pay_payment_method_options grabpay?;
    Checkout_ideal_payment_method_options ideal?;
    Checkout_klarna_payment_method_options klarna?;
    Checkout_konbini_payment_method_options konbini?;
    Checkout_link_payment_method_options link?;
    Checkout_mobilepay_payment_method_options mobilepay?;
    Checkout_multibanco_payment_method_options multibanco?;
    Checkout_oxxo_payment_method_options oxxo?;
    Checkout_p24_payment_method_options p24?;
    Checkout_paynow_payment_method_options paynow?;
    Checkout_paypal_payment_method_options paypal?;
    Checkout_pix_payment_method_options pix?;
    Checkout_revolut_pay_payment_method_options revolut_pay?;
    Checkout_sepa_debit_payment_method_options sepa_debit?;
    Checkout_sofort_payment_method_options sofort?;
    Checkout_swish_payment_method_options swish?;
    Checkout_us_bank_account_payment_method_options us_bank_account?;
};

public type filters_paramsCountriesItemsString string;

public type schedule_release_bodyExpandItemsString string;

public type payout_reverse_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetApplePayDomainsDomain
public type GetApplePayDomainsDomainQueries record {
    # Specifies which fields in the response should be expanded.
    GetApplePayDomainsDomainQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetConfirmationTokensConfirmationTokenQueriesExpandItemsString string;

public type customers_body record {|
    # The customer's address.
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    # An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.
    int balance?;
    cash_balance_param cash_balance?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    # An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
    @constraint:String {maxLength: 5000}
    string description?;
    # Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.
    @constraint:String {maxLength: 512}
    string email?;
    # Specifies which fields in the response should be expanded.
    customers_bodyExpandItemsString[] expand?;
    # The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.
    @constraint:String {maxLength: 5000}
    string invoice_prefix?;
    customer_param invoice_settings?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The customer's full name or business name.
    @constraint:String {maxLength: 256}
    string name?;
    # The sequence to be used on the customer's next invoice. Defaults to 1.
    int next_invoice_sequence?;
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The customer's phone number.
    @constraint:String {maxLength: 20}
    string phone?;
    # Customer's preferred languages, ordered by preference.
    customers_bodyPreferredlocalesItemsString[] preferred_locales?;
    # The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # The customer's shipping information. Appears on invoices emailed to this customer.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    @constraint:String {maxLength: 5000}
    string 'source?;
    tax_param tax?;
    # The customer's tax exemption. One of `none`, `exempt`, or `reverse`.
    ""|"exempt"|"none"|"reverse" tax_exempt?;
    # The customer's tax IDs.
    data_params[] tax_id_data?;
    # ID of the test clock to attach to the customer.
    @constraint:String {maxLength: 5000}
    string test_clock?;
|};

public type treasury_outbound_transfers_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetClimateSuppliersQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTransfersIdReversalsQueriesExpandItemsString string;

# 
public type Source_order record {
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # The email address of the customer placing the order.
    @constraint:String {maxLength: 5000}
    string email?;
    # List of items constituting the order.
    Source_order_item[]? items?;
    Shipping shipping?;
};

public type account_login_links_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetSourcesSourceSourceTransactionsSourceTransaction
public type GetSourcesSourceSourceTransactionsSourceTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceSourceTransactionsSourceTransactionQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetRadarEarlyFraudWarningsQueriesExpandItemsString string;

# Evidence provided for the dispute.
public type evidence_param record {
    record {string|"" additional_documentation?; int|"" canceled_at?; boolean|"" cancellation_policy_provided?; string|"" cancellation_reason?; int|"" expected_at?; string|"" explanation?; string|"" product_description?; ""|"merchandise"|"service" product_type?; ""|"merchant_rejected"|"successful" return_status?; int|"" returned_at?;}|"" canceled?;
    record {string|"" additional_documentation?; string|"" card_statement?; string|"" cash_receipt?; string|"" check_image?; string|"" explanation?; string original_transaction?;}|"" duplicate?;
    record {string|"" additional_documentation?; string|"" explanation?;}|"" fraudulent?;
    record {string|"" additional_documentation?; string|"" explanation?; int|"" received_at?; string|"" return_description?; ""|"merchant_rejected"|"successful" return_status?; int|"" returned_at?;}|"" merchandise_not_as_described?;
    record {string|"" additional_documentation?; string|"" explanation?;}|"" no_valid_authorization?;
    record {string|"" additional_documentation?; int|"" expected_at?; string|"" explanation?; string|"" product_description?; ""|"merchandise"|"service" product_type?;}|"" not_received?;
    record {string|"" additional_documentation?; string|"" explanation?; string|"" product_description?; ""|"merchandise"|"service" product_type?;}|"" other?;
    "canceled"|"duplicate"|"fraudulent"|"merchandise_not_as_described"|"no_valid_authorization"|"not_received"|"other"|"service_not_as_described" reason?;
    record {string|"" additional_documentation?; int|"" canceled_at?; string|"" cancellation_reason?; string|"" explanation?; int|"" received_at?;}|"" service_not_as_described?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryFinancialAccountsFinancialAccountFeaturesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPayoutsPayoutQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetCouponsCoupon
public type GetCouponsCouponQueries record {
    # Specifies which fields in the response should be expanded.
    GetCouponsCouponQueriesExpandItemsString[] expand?;
};

public type treasury_received_credits_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    treasury_received_credits_bodyExpandItemsString[] expand?;
    # The FinancialAccount to send funds to.
    string financial_account;
    source_params initiating_payment_method_details?;
    # Specifies the network rails to be used. If not set, will default to the PaymentMethod's preferred network. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach"|"us_domestic_wire" network;
|};

@constraint:String {maxLength: 5000}
public type GetPaymentLinksPaymentLinkLineItemsQueriesExpandItemsString string;

public type intent_cancel_body record {|
    # Reason for canceling this PaymentIntent. Possible values are: `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`
    "abandoned"|"duplicate"|"fraudulent"|"requested_by_customer" cancellation_reason?;
    # Specifies which fields in the response should be expanded.
    intent_cancel_bodyExpandItemsString[] expand?;
|};

# Settings that restrict the redemption of the promotion code.
public type restrictions_params_1 record {
    record {|currency_option_3...;|} currency_options?;
    boolean first_time_transaction?;
    int minimum_amount?;
    string minimum_amount_currency?;
};

# Settings that restrict the redemption of the promotion code.
public type restrictions_params_2 record {
    record {|currency_option_3...;|} currency_options?;
};

# A PaymentIntent guides you through the process of collecting a payment from your customer.
# We recommend that you create exactly one PaymentIntent for each order or
# customer session in your system. You can reference the PaymentIntent later to
# see the history of payment attempts for a particular session.
# 
# A PaymentIntent transitions through
# [multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)
# throughout its lifetime as it interfaces with Stripe.js to perform
# authentication flows and ultimately creates at most one successful charge.
# 
# Related guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents)
public type Payment_intent record {
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount;
    # Amount that can be captured from this PaymentIntent.
    int amount_capturable?;
    Payment_flows_amount_details amount_details?;
    # Amount that this PaymentIntent collects.
    int amount_received?;
    # ID of the Connect application that created the PaymentIntent.
    string|Application? application?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int? application_fee_amount?;
    # Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)
    Payment_flows_automatic_payment_methods_payment_intent? automatic_payment_methods?;
    # Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.
    int? canceled_at?;
    # Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).
    "abandoned"|"automatic"|"duplicate"|"failed_invoice"|"fraudulent"|"requested_by_customer"|"void_invoice"? cancellation_reason?;
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method;
    # The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. 
    # 
    # The client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
    # 
    # Refer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.
    string? client_secret?;
    # Describes whether we can confirm this PaymentIntent automatically, or if it requires customer action to confirm the payment.
    "automatic"|"manual" confirmation_method;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the Customer this PaymentIntent belongs to, if one exists.
    # 
    # Payment methods attached to other Customers cannot be used with this PaymentIntent.
    # 
    # If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.
    string|Customer|Deleted_customer? customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice that created this PaymentIntent, if it exists.
    string|Invoice? invoice?;
    # The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.
    Api_errors? last_payment_error?;
    # The latest charge created by this PaymentIntent.
    string|Charge? latest_charge?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Learn more about [storing information in metadata](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
    record {|string...;|} metadata?;
    # If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.
    Payment_intent_next_action? next_action?;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_intent" 'object;
    # The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
    string|Account? on_behalf_of?;
    # ID of the payment method used in this PaymentIntent.
    string|Payment_method? payment_method?;
    # Information about the payment method configuration used for this PaymentIntent.
    Payment_method_config_biz_payment_method_configuration_details? payment_method_configuration_details?;
    # Payment-method-specific configuration for this PaymentIntent.
    Payment_intent_payment_method_options? payment_method_options?;
    # The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.
    Payment_intentPaymentmethodtypesItemsString[] payment_method_types;
    # If present, this property tells you about the processing state of the payment.
    Payment_intent_processing? processing?;
    # Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string? receipt_email?;
    # ID of the review associated with this PaymentIntent, if any.
    string|Review? review?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "off_session"|"on_session"? setup_future_usage?;
    # Shipping information for this PaymentIntent.
    Shipping? shipping?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    string? statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    string? statement_descriptor_suffix?;
    # Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).
    "canceled"|"processing"|"requires_action"|"requires_capture"|"requires_confirmation"|"requires_payment_method"|"succeeded" status;
    # The data that automatically creates a Transfer after the payment finalizes. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    Transfer_data? transfer_data?;
    # A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).
    string? transfer_group?;
};

# 
public type Payment_method_details_card_wallet_masterpass record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

# The place where your business is located.
public type head_office_param record {
    validated_country_address address;
};

# 
public type Invoice_rendering_pdf record {
    # Page size of invoice pdf. Options include a4, letter, and auto. If set to auto, page size will be switched to a4 or letter based on customer locale.
    "a4"|"auto"|"letter"? page_size?;
};

# 
public type SubscriptionSchedulesResourceScheduleList record {
    Subscription_schedule[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/subscription_schedules`}
    string url;
};

# 
public type Setup_attempt_payment_method_details_bancontact record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    # Can be one of `en`, `de`, `fr`, or `nl`
    "de"|"en"|"fr"|"nl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by Bancontact directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

# 
public type Quotes_resource_upfront record {
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total after discounts and taxes are applied.
    int amount_total;
    QuotesResourceListLineItems_2 line_items?;
    Quotes_resource_total_details total_details;
};

# A hash of settings for this cash balance.
public type balance_settings_param_1 record {
    "automatic"|"manual"|"merchant_default" reconciliation_mode?;
};

# Documents that may be submitted to satisfy various informational requests.
public type person_documents_specs record {
    documents_param_1 company_authorization?;
    documents_param_1 passport?;
    documents_param_1 visa?;
};

public type required_address record {
    @constraint:String {maxLength: 5000}
    string city;
    @constraint:String {maxLength: 5000}
    string country;
    @constraint:String {maxLength: 5000}
    string line1;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Payment_method_wechat_pay record {
};

@constraint:String {maxLength: 5000}
public type GetTaxIdsIdQueriesExpandItemsString string;

public type treasury_credit_reversals_bodyExpandItemsString string;

# 
public type Checkout_bacs_debit_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Payment_method_config_resource_display_preference record {
    # For child configs, whether or not the account's preference will be observed. If `false`, the parent configuration's default is used.
    boolean? overridable?;
    # The account's display preference.
    "none"|"off"|"on" preference;
    # The effective display preference value.
    "off"|"on" value;
};

public type Treasury\.financial_account record {
    ("card_issuing"|"deposit_insurance"|"financial_addresses.aba"|"inbound_transfers.ach"|"intra_stripe_flows"|"outbound_payments.ach"|"outbound_payments.us_domestic_wire"|"outbound_transfers.ach"|"outbound_transfers.us_domestic_wire"|"remote_deposit_capture")[] active_features?;
    Treasury_financial_accounts_resource_balance balance;
    string country;
    int created;
    Treasury\.financial_account_features features?;
    Treasury_financial_accounts_resource_financial_address[] financial_addresses;
    string id;
    boolean livemode;
    record {|string...;|}? metadata?;
    "treasury.financial_account" 'object;
    ("card_issuing"|"deposit_insurance"|"financial_addresses.aba"|"inbound_transfers.ach"|"intra_stripe_flows"|"outbound_payments.ach"|"outbound_payments.us_domestic_wire"|"outbound_transfers.ach"|"outbound_transfers.us_domestic_wire"|"remote_deposit_capture")[] pending_features?;
    Treasury_financial_accounts_resource_platform_restrictions? platform_restrictions?;
    ("card_issuing"|"deposit_insurance"|"financial_addresses.aba"|"inbound_transfers.ach"|"intra_stripe_flows"|"outbound_payments.ach"|"outbound_payments.us_domestic_wire"|"outbound_transfers.ach"|"outbound_transfers.us_domestic_wire"|"remote_deposit_capture")[] restricted_features?;
    "closed"|"open" status;
    Treasury_financial_accounts_resource_status_details status_details;
    string[] supported_currencies;
};

public type discounts record {string coupon?; string discount?; string promotion_code?;}[]|"";

# 
public type Invoice_item_threshold_reason record {
    # The IDs of the line items that triggered the threshold invoice.
    Invoice_item_threshold_reasonLineitemidsItemsString[] line_item_ids;
    # The quantity threshold boundary that applied to the given line item.
    int usage_gte;
};

public type pricing_table_param record {
    boolean enabled;
};

public type customer_funding_instructions_body record {|
    bank_transfer_params bank_transfer;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Specifies which fields in the response should be expanded.
    customer_funding_instructions_bodyExpandItemsString[] expand?;
    # The `funding_type` to get the instructions for.
    "bank_transfer" funding_type;
|};

public type installments_param record {
    boolean enabled?;
};

public type header_param record {
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string value;
};

public type payment_method_configurations_configuration_bodyExpandItemsString string;

public type custom_field_numeric_param_1 record {
    int maximum_length?;
    int minimum_length?;
};

@constraint:String {maxLength: 5000}
public type GetProductsIdQueriesExpandItemsString string;

# 
public type Payment_pages_checkout_session_customer_details record {
    # The customer's address after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    Address? address?;
    # The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry.
    # Otherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.
    string? email?;
    # The customer's name after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    string? name?;
    # The customer's phone number after a completed Checkout Session.
    string? phone?;
    # The customer’s tax exempt status after a completed Checkout Session.
    "exempt"|"none"|"reverse"? tax_exempt?;
    # The customer’s tax IDs after a completed Checkout Session.
    Payment_pages_checkout_session_tax_id[]? tax_ids?;
};

public type transactions_create_from_calculation_bodyExpandItemsString string;

public type charges_charge_body record {|
    # The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.
    @constraint:String {maxLength: 40000}
    string description?;
    # Specifies which fields in the response should be expanded.
    charges_charge_bodyExpandItemsString[] expand?;
    fraud_details fraud_details?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.
    @constraint:String {maxLength: 5000}
    string receipt_email?;
    optional_fields_shipping shipping?;
    # A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string transfer_group?;
|};

# The recurring components of a price such as `interval` and `usage_type`.
public type recurring record {
    "last_during_period"|"last_ever"|"max"|"sum" aggregate_usage?;
    "day"|"month"|"week"|"year" interval;
    int interval_count?;
    @constraint:String {maxLength: 5000}
    string meter?;
    "licensed"|"metered" usage_type?;
};

# 
public type Payment_method_card_checks record {
    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_postal_code_check?;
    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? cvc_check?;
};

# 
public type Invoice_payment_method_options_acss_debit record {
    Invoice_payment_method_options_acss_debit_mandate_options mandate_options?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListItemsItemQueriesExpandItemsString string;

# The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).
public type login_page_update_param record {
    boolean enabled;
};

# The desired PIN for this card.
public type encrypted_pin_param record {
    @constraint:String {maxLength: 5000}
    string encrypted_number?;
};

# Represents the Queries record for the operation: GetTransfersTransferReversalsId
public type GetTransfersTransferReversalsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTransfersTransferReversalsIdQueriesExpandItemsString[] expand?;
};

public type Treasury\.transaction record {
    int amount;
    Treasury_transactions_resource_balance_impact balance_impact;
    int created;
    string currency;
    string description;
    TreasuryTransactionsResourceTransactionEntryList_1? entries?;
    string financial_account;
    string? flow?;
    Treasury_transactions_resource_flow_details? flow_details?;
    "credit_reversal"|"debit_reversal"|"inbound_transfer"|"issuing_authorization"|"other"|"outbound_payment"|"outbound_transfer"|"received_credit"|"received_debit" flow_type;
    string id;
    boolean livemode;
    "treasury.transaction" 'object;
    "open"|"posted"|"void" status;
    Treasury_transactions_resource_abstract_transaction_resource_status_transitions status_transitions;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object. This Price will be set as the default price for this product.
public type price_data_without_product record {
    string currency;
    record {|currency_option_2...;|} currency_options?;
    recurring_adhoc recurring?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type payouts_config_param record {
    boolean enabled;
    payouts_features_param features?;
};

# 
public type Deleted_subscription_item record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription_item" 'object;
};

# The customer's payment sources, if any.
public type ApmsSourcesSourceList_1 record {
    # Details about each object.
    (Bank_account|Card|Source)[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type promotion_codes_promotion_code_body record {|
    # Whether the promotion code is currently active. A promotion code can only be reactivated when the coupon is still valid and the promotion code is otherwise redeemable.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    promotion_codes_promotion_code_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    restrictions_params_2 restrictions?;
|};

# 
public type TreasuryReceivedDebitsResourceDebitReversalList record {
    # Details about each object.
    Treasury\.debit_reversal[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Issuing_authorization_request record {
    # The `pending_request.amount` at the time of the request, presented in your card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Stripe held this amount from your account to fund the authorization if the request was approved.
    int amount;
    # Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    Issuing_authorization_amount_details? amount_details?;
    # Whether this request was approved.
    boolean approved;
    # A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter "S", followed by a six-digit number. For example, "S498162". Please note that the code is not guaranteed to be unique across authorizations.
    string? authorization_code?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # The `pending_request.merchant_amount` at the time of the request, presented in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int merchant_amount;
    # The currency that was collected by the merchant and presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string merchant_currency;
    # The card network's estimate of the likelihood that an authorization is fraudulent. Takes on values between 1 and 99.
    int? network_risk_score?;
    # When an authorization is approved or declined by you or by Stripe, this field provides additional detail on the reason for the outcome.
    "account_disabled"|"card_active"|"card_canceled"|"card_expired"|"card_inactive"|"cardholder_blocked"|"cardholder_inactive"|"cardholder_verification_required"|"insecure_authorization_method"|"insufficient_funds"|"not_allowed"|"pin_blocked"|"spending_controls"|"suspected_fraud"|"verification_failed"|"webhook_approved"|"webhook_declined"|"webhook_error"|"webhook_timeout" reason;
    # If the `request_history.reason` is `webhook_error` because the direct webhook response is invalid (for example, parsing errors or missing parameters), we surface a more detailed error message via this field.
    string? reason_message?;
    # Time when the card network received an authorization request from the acquirer in UTC. Referred to by networks as transmission time.
    int? requested_at?;
};

public type line_items_create_params record {
    adjustable_quantity_params adjustable_quantity?;
    @constraint:String {maxLength: 5000}
    string price;
    int quantity;
};

# Represents the Queries record for the operation: GetFinancialConnectionsSessionsSession
public type GetFinancialConnectionsSessionsSessionQueries record {
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsSessionsSessionQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBankAccountsIdQueriesExpandItemsString string;

public type id_return_bodyExpandItemsString string;

public type payment_method_param record {
    @constraint:String {maxLength: 5000}
    string account_number;
    @constraint:String {maxLength: 5000}
    string institution_number;
    @constraint:String {maxLength: 5000}
    string transit_number;
};

# Represents the Queries record for the operation: GetBillingPortalConfigurationsConfiguration
public type GetBillingPortalConfigurationsConfigurationQueries record {
    # Specifies which fields in the response should be expanded.
    GetBillingPortalConfigurationsConfigurationQueriesExpandItemsString[] expand?;
};

# 
public type Secret_service_resource_scope record {
    # The secret scope type.
    "account"|"user" 'type;
    # The user ID, if type is set to "user"
    @constraint:String {maxLength: 5000}
    string user?;
};

# The person's verification status.
public type person_verification_specs_1 record {
    person_verification_document_specs additional_document?;
    person_verification_document_specs document?;
};

public type issuing_disputes_bodyExpandItemsString string;

public type inline_response_200 Customer|Deleted_customer;

# 
public type Card_issuing_account_terms_of_service record {
    # The Unix timestamp marking when the account representative accepted the service agreement.
    int? date?;
    # The IP address from which the account representative accepted the service agreement.
    string? ip?;
    # The user agent of the browser from which the account representative accepted the service agreement.
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

# 
public type Subscription_schedules_resource_default_settings_automatic_tax record {
    # Whether Stripe automatically computes tax on invoices created during this phase.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

public type amount record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_links_resource_subscription_data record {
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    Payment_links_resource_subscription_data_invoice_settings invoice_settings;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will set metadata on [Subscriptions](https://stripe.com/docs/api/subscriptions) generated from this payment link.
    record {|string...;|} metadata;
    # Integer representing the number of trial period days before the customer is charged for the first time.
    int? trial_period_days?;
    # Settings related to subscription trials.
    Subscriptions_trials_resource_trial_settings? trial_settings?;
};

# 
public type Checkout_paypal_payment_method_options record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred locale of the PayPal checkout page that the customer is redirected to.
    string? preferred_locale?;
    # A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# The line items purchased by the customer.
public type PaymentPagesCheckoutSessionListLineItems_1 record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type charge_dispute_body record {|
    dispute_evidence_params evidence?;
    # Specifies which fields in the response should be expanded.
    charge_dispute_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default).
    boolean submit?;
|};

# 
public type Account_sepa_debit_payments_settings record {
    # SEPA creditor identifier that identifies the company making the payment.
    @constraint:String {maxLength: 5000}
    string creditor_id?;
};

public type id_fail_body_1ExpandItemsString string;

# Simulated data for the card_present payment method.
public type card_present record {
    @constraint:String {maxLength: 5000}
    string number?;
};

# A SetupAttempt describes one attempted confirmation of a SetupIntent,
# whether that confirmation is successful or unsuccessful. You can use
# SetupAttempts to inspect details of a specific attempt at setting up a
# payment method using a SetupIntent.
public type Setup_attempt record {
    # The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application) on the SetupIntent at the time of this confirmation.
    string|Application? application?;
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer) on the SetupIntent at the time of this confirmation.
    string|Customer|Deleted_customer? customer?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[]? flow_directions?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "setup_attempt" 'object;
    # The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of) on the SetupIntent at the time of this confirmation.
    string|Account? on_behalf_of?;
    # ID of the payment method used with this SetupAttempt.
    string|Payment_method payment_method;
    Setup_attempt_payment_method_details payment_method_details;
    # The error encountered during this attempt to confirm the SetupIntent, if any.
    Api_errors? setup_error?;
    # ID of the SetupIntent that this attempt belongs to.
    string|Setup_intent setup_intent;
    # Status of this SetupAttempt, one of `requires_confirmation`, `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.
    @constraint:String {maxLength: 5000}
    string status;
    # The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage) on the SetupIntent at the time of this confirmation, one of `off_session` or `on_session`.
    @constraint:String {maxLength: 5000}
    string usage;
};

# 
public type Quotes_resource_recurring record {
    # Total before any discounts or taxes are applied.
    int amount_subtotal;
    # Total after discounts and taxes are applied.
    int amount_total;
    # The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.
    int interval_count;
    Quotes_resource_total_details total_details;
};

# 
public type Payment_pages_checkout_session_total_details record {
    # This is the sum of all the discounts.
    int amount_discount;
    # This is the sum of all the shipping amounts.
    int? amount_shipping?;
    # This is the sum of all the tax amounts.
    int amount_tax;
    Payment_pages_checkout_session_total_details_resource_breakdown breakdown?;
};

@constraint:String {maxLength: 5000}
public type GetFilesQueriesExpandItemsString string;

public type products_bodyExpandItemsString string;

public type reader_refund_payment_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetIssuingPhysicalBundlesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentLinksPaymentLinkQueriesExpandItemsString string;

# The bank account this token will represent.
public type token_create_bank_account record {
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    "company"|"individual" account_holder_type?;
    @constraint:String {maxLength: 5000}
    string account_number;
    "checking"|"futsu"|"savings"|"toza" account_type?;
    @constraint:String {maxLength: 5000}
    string country;
    string currency?;
    @constraint:String {maxLength: 5000}
    string payment_method?;
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

public type customer_sessions_body record {|
    components components;
    # The ID of an existing customer for which to create the Customer Session.
    @constraint:String {maxLength: 5000}
    string customer;
    # Specifies which fields in the response should be expanded.
    customer_sessions_bodyExpandItemsString[] expand?;
|};

public type products_body record {|
    # Whether the product is currently available for purchase. Defaults to `true`.
    boolean active?;
    price_data_without_product default_price_data?;
    # The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
    @constraint:String {maxLength: 40000}
    string description?;
    # Specifies which fields in the response should be expanded.
    products_bodyExpandItemsString[] expand?;
    # An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account.
    @constraint:String {maxLength: 5000}
    string id?;
    # A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
    string[] images?;
    # A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
    features[] marketing_features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The product's name, meant to be displayable to the customer.
    @constraint:String {maxLength: 5000}
    string name;
    package_dimensions_specs package_dimensions?;
    # Whether this product is shipped (i.e., physical goods).
    boolean shippable?;
    # An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.
    # 
    # This may be up to 22 characters. The statement description may not include `<`, `>`, `\`, `"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.
    #  It must contain at least one letter. Only used for subscription payments.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string tax_code?;
    # A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.
    @constraint:String {maxLength: 12}
    string unit_label?;
    # A URL of a publicly-accessible webpage for this product.
    @constraint:String {maxLength: 5000}
    string url?;
|};

# 
public type Payment_method_details_paypal record {
    # Owner's email. Values are provided by PayPal directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? payer_email?;
    # PayPal account PayerID. This identifier uniquely identifies the PayPal customer.
    string? payer_id?;
    # Owner's full name. Values provided by PayPal directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? payer_name?;
    # The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.
    Paypal_seller_protection? seller_protection?;
    # A unique ID generated by PayPal for this transaction.
    string? transaction_id?;
};

# 
public type Discounts_resource_stackable_discount record {
    # ID of the coupon to create a new discount for.
    string|Coupon? coupon?;
    # ID of an existing discount on the object (or one of its ancestors) to reuse.
    string|Discount? discount?;
    # ID of the promotion code to create a new discount for.
    string|Promotion_code? promotion_code?;
};

public type Identity\.verification_session record {
    string? client_reference_id?;
    string? client_secret?;
    int created;
    string id;
    Gelato_session_last_error? last_error?;
    string|Identity\.verification_report? last_verification_report?;
    boolean livemode;
    record {|string...;|} metadata;
    "identity.verification_session" 'object;
    Gelato_verification_session_options? options?;
    Gelato_provided_details? provided_details?;
    Verification_session_redaction? redaction?;
    "canceled"|"processing"|"requires_input"|"verified" status;
    "document"|"id_number"|"verification_flow" 'type;
    string? url?;
    string verification_flow?;
    Gelato_verified_outputs? verified_outputs?;
};

# Generate a post-purchase Invoice for one-time payments.
public type invoice_creation_create_params record {
    boolean enabled;
    invoice_settings_params_1 invoice_data?;
};

# 
public type Invoice_mandate_options_card record {
    # Amount to be charged for future payments.
    int? amount?;
    # One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.
    "fixed"|"maximum"? amount_type?;
    # A description of the mandate or subscription that is meant to be displayed to the customer.
    string? description?;
};

public type invoice_pay_bodyExpandItemsString string;

public type scope_param_2 record {
    "account"|"user" 'type;
    @constraint:String {maxLength: 5000}
    string user?;
};

# Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
public type scope_param_1 record {
    "account"|"user" 'type;
    @constraint:String {maxLength: 5000}
    string user?;
};

public type intent_confirm_body_1ExpandItemsString string;

# 
public type Payment_method_details_card_network_token record {
    # Indicates if Stripe used a network token, either user provided or Stripe managed when processing the transaction.
    boolean used;
};

@constraint:String {maxLength: 5000}
public type GetBalanceHistoryQueriesExpandItemsString string;

public type payment_method_options_param_8 record {
    "none" setup_future_usage?;
    boolean tos_shown_and_accepted?;
};

public type payment_method_options_param_9 record {
    ""|"manual" capture_method?;
    "cs-CZ"|"da-DK"|"de-AT"|"de-DE"|"de-LU"|"el-GR"|"en-GB"|"en-US"|"es-ES"|"fi-FI"|"fr-BE"|"fr-FR"|"fr-LU"|"hu-HU"|"it-IT"|"nl-BE"|"nl-NL"|"pl-PL"|"pt-PT"|"sk-SK"|"sv-SE" preferred_locale?;
    @constraint:String {maxLength: 127}
    string reference?;
    @constraint:String {maxLength: 32}
    string risk_correlation_id?;
    ""|"none"|"off_session" setup_future_usage?;
};

# Represents the Queries record for the operation: GetInvoiceitemsInvoiceitem
public type GetInvoiceitemsInvoiceitemQueries record {
    # Specifies which fields in the response should be expanded.
    GetInvoiceitemsInvoiceitemQueriesExpandItemsString[] expand?;
};

# 
public type Payment_links_resource_completion_behavior_redirect record {
    # The URL the customer will be redirected to after the purchase is complete.
    @constraint:String {maxLength: 5000}
    string url;
};

public type payout_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    payout_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_links_resource_shipping_address_collection record {
    # An array of two-letter ISO country codes representing which countries Checkout should provide as options for shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# 
public type Payment_method_acss_debit record {
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Institution number of the bank account.
    string? institution_number?;
    # Last four digits of the bank account number.
    string? last4?;
    # Transit number of the bank account.
    string? transit_number?;
};

# Controls saved payment method settings for the session. Only available in `payment` and `subscription` mode.
public type saved_payment_method_options_param record {
    ("always"|"limited"|"unspecified")[] allow_redisplay_filters?;
    "disabled"|"enabled" payment_method_save?;
};

public type transaction_line_item_reversal record {
    int amount;
    int amount_tax;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string original_line_item;
    int quantity?;
    @constraint:String {maxLength: 500}
    string reference;
};

# 
public type Payment_method_details_interac_present record {
    # Card brand. Can be `interac`, `mastercard` or `visa`.
    string? brand?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Authorization response cryptogram.
    string? emv_auth_data?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.
    string? generated_card?;
    # The last four digits of the card.
    string? last4?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_details_interac_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
    # A collection of fields required to be displayed on receipts. Only required for EMV transactions.
    Payment_method_details_interac_present_receipt? receipt?;
};

public type people_person_bodyExpandItemsString string;

# 
public type Tax_product_resource_tax_transaction_shipping_cost record {
    # The shipping amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.
    int amount;
    # The amount of tax calculated for shipping, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount_tax;
    # The ID of an existing [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    # Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.
    "exclusive"|"inclusive" tax_behavior;
    # The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for shipping.
    @constraint:String {maxLength: 5000}
    string tax_code;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQuoteLineItemsQueriesExpandItemsString string;

public type payment_method_options_param_1 record {
    "none" setup_future_usage?;
};

public type payment_links_body record {|
    after_completion_params after_completion?;
    # Enables user redeemable promotion codes.
    boolean allow_promotion_codes?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Can only be applied when there are no line items with recurring prices.
    int application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.
    decimal application_fee_percent?;
    automatic_tax_params_1 automatic_tax?;
    # Configuration for collecting the customer's billing address. Defaults to `auto`.
    "auto"|"required" billing_address_collection?;
    consent_collection_params_1 consent_collection?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies) and supported by each line item's price.
    string currency?;
    # Collect additional information from your customer using custom fields. Up to 3 fields are supported.
    custom_field_param_1[] custom_fields?;
    custom_text_param custom_text?;
    # Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers).
    "always"|"if_required" customer_creation?;
    # Specifies which fields in the response should be expanded.
    payment_links_bodyExpandItemsString[] expand?;
    # The custom message to be displayed to a customer when a payment link is no longer active.
    @constraint:String {maxLength: 500}
    string inactive_message?;
    invoice_creation_create_params invoice_creation?;
    # The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported.
    line_items_create_params[] line_items;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.
    record {|string...;|} metadata?;
    # The account on behalf of which to charge.
    string on_behalf_of?;
    payment_intent_data_params_1 payment_intent_data?;
    # Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.
    # 
    # Can only be set in `subscription` mode. Defaults to `always`.
    # 
    # If you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).
    "always"|"if_required" payment_method_collection?;
    # The list of payment method types that customers can use. If no value is passed, Stripe will dynamically show relevant payment methods from your [payment method settings](https://dashboard.stripe.com/settings/payment_methods) (20+ payment methods [supported](https://stripe.com/docs/payments/payment-methods/integration-options#payment-method-product-support)).
    ("affirm"|"afterpay_clearpay"|"alipay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip")[] payment_method_types?;
    phone_number_collection_params_1 phone_number_collection?;
    restrictions_params restrictions?;
    shipping_address_collection_params_1 shipping_address_collection?;
    # The shipping rate options to apply to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link.
    shipping_option_params_1[] shipping_options?;
    # Describes the type of transaction being performed in order to customize relevant text on the page, such as the submit button. Changing this value will also affect the hostname in the [url](https://stripe.com/docs/api/payment_links/payment_links/object#url) property (example: `donate.stripe.com`).
    "auto"|"book"|"donate"|"pay" submit_type?;
    subscription_data_params_1 subscription_data?;
    tax_id_collection_params tax_id_collection?;
    transfer_data_params_1 transfer_data?;
|};

public type payment_method_options_param_2 record {
    "none"|"off_session" setup_future_usage?;
};

public type test_helpers_confirmation_tokens_bodyExpandItemsString string;

# 
public type Setup_intent_payment_method_options_card_mandate_options record {
    # Amount to be charged for future payments.
    int amount;
    # One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.
    "fixed"|"maximum" amount_type;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # A description of the mandate or subscription that is meant to be displayed to the customer.
    string? description?;
    # End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.
    int? end_date?;
    # Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.
    "day"|"month"|"sporadic"|"week"|"year" interval;
    # The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.
    int? interval_count?;
    # Unique identifier for the mandate or subscription.
    @constraint:String {maxLength: 80}
    string reference;
    # Start date of the mandate or subscription. Start date should not be lesser than yesterday.
    int start_date;
    # Specifies the type of mandates supported. Possible values are `india`.
    ("india")[]? supported_types?;
};

public type payment_method_options_param_3 record {
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# 
public type Offline_acceptance record {
};

public type payment_method_options_param_4 record {
    int expires_after_days?;
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# A product_feature represents an attachment between a feature and a product.
# When a product is purchased that has a feature attached, Stripe will create an entitlement to the feature for the purchasing customer.
public type Product_feature record {
    Entitlements\.feature entitlement_feature;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "product_feature" 'object;
};

public type payment_method_options_param_5 record {
    installments_param installments?;
    "any"|"automatic"|"challenge" request_three_d_secure?;
    "off_session"|"on_session" setup_future_usage?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix_kana?;
    @constraint:String {maxLength: 17}
    string statement_descriptor_suffix_kanji?;
};

# Result from a document check
public type Gelato_document_report record {
    # Address as it appears in the document.
    Address? address?;
    # Date of birth as it appears in the document.
    Gelato_data_document_report_date_of_birth? dob?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_document_report_error? 'error?;
    # Expiration date of the document.
    Gelato_data_document_report_expiration_date? expiration_date?;
    # Array of [File](https://stripe.com/docs/api/files) ids containing images for this document.
    Gelato_document_reportFilesItemsString[]? files?;
    # First name as it appears in the document.
    string? first_name?;
    # Issued date of the document.
    Gelato_data_document_report_issued_date? issued_date?;
    # Issuing country of the document.
    string? issuing_country?;
    # Last name as it appears in the document.
    string? last_name?;
    # Document ID number.
    string? number?;
    # Status of this `document` check.
    "unverified"|"verified" status;
    # Type of the document.
    "driving_license"|"id_card"|"passport"? 'type?;
};

public type invoice_item_preview_params record {
    int amount?;
    string currency?;
    @constraint:String {maxLength: 5000}
    string description?;
    boolean discountable?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string invoiceitem?;
    record {|string...;|}|"" metadata?;
    period_1 period?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_1 price_data?;
    int quantity?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    string|"" tax_code?;
    TaxratesItemsString[]|"" tax_rates?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type payment_method_options_param_6 record {
    bank_transfer_param bank_transfer?;
    "bank_transfer" funding_type?;
    "none" setup_future_usage?;
};

public type payment_method_options_param_7 record {
    int expires_after_days?;
    "none" setup_future_usage?;
};

# Represents a cart to be displayed on the reader
public type Terminal_reader_reader_resource_cart record {
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # List of line items in the cart.
    Terminal_reader_reader_resource_line_item[] line_items;
    # Tax amount for the entire cart. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int? tax?;
    # Total amount for the entire cart, including tax. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int total;
};

# 
public type Balance_amount_net record {
    # Balance amount.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Breakdown of balance by destination.
    Balance_net_available[] net_available?;
    Balance_amount_by_source_type source_types?;
};

# A `Transfer` object is created when you move funds between Stripe accounts as
# part of Connect.
# 
# Before April 6, 2017, transfers also represented movement of funds from a
# Stripe account to a card or bank account. This behavior has since been split
# out into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more
# information, read about the
# [transfer/payout split](https://stripe.com/docs/transfer-payout-split).
# 
# Related guide: [Creating separate charges and transfers](https://stripe.com/docs/connect/separate-charges-and-transfers)
public type Transfer record {
    # Amount in cents (or local equivalent) to be transferred.
    int amount;
    # Amount in cents (or local equivalent) reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).
    int amount_reversed;
    # Balance transaction that describes the impact of this transfer on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time that this record of the transfer was first created.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # ID of the Stripe account the transfer was sent to.
    string|Account? destination?;
    # If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.
    string|Charge destination_payment?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "transfer" 'object;
    TransferReversalList_1 reversals;
    # Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.
    boolean reversed;
    # ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.
    string|Charge? source_transaction?;
    # The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.
    @constraint:String {maxLength: 5000}
    string source_type?;
    # A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string? transfer_group?;
};

# 
public type EntitlementsResourceProductFeatureList record {
    Product_feature[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Account Links are the means by which a Connect platform grants a connected account permission to access
# Stripe-hosted applications, such as Connect Onboarding.
# 
# Related guide: [Connect Onboarding](https://stripe.com/docs/connect/custom/hosted-onboarding)
public type Account_link record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The timestamp at which this account link will expire.
    int expires_at;
    # String representing the object's type. Objects of the same type share the same value.
    "account_link" 'object;
    # The URL for the account link.
    @constraint:String {maxLength: 5000}
    string url;
};

# ABA Records contain U.S. bank account details per the ABA format.
public type Funding_instructions_bank_transfer_aba_record record {
    # The ABA account number
    @constraint:String {maxLength: 5000}
    string account_number;
    # The bank name
    @constraint:String {maxLength: 5000}
    string bank_name;
    # The ABA routing number
    @constraint:String {maxLength: 5000}
    string routing_number;
};

public type account_disconnect_body record {|
    # Specifies which fields in the response should be expanded.
    account_disconnect_bodyExpandItemsString[] expand?;
|};

# When you enable this parameter, this SetupIntent accepts payment methods that you enable in the Dashboard and that are compatible with its other parameters.
public type automatic_payment_methods_param_1 record {
    "always"|"never" allow_redirects?;
    boolean enabled;
};

public type features_id_bodyExpandItemsString string;

public type authorization_controls_param_v2BlockedmerchantcountriesItemsString string;

# An AccountSession allows a Connect platform to grant access to a connected account in Connect embedded components.
# 
# We recommend that you create an AccountSession each time you need to display an embedded component
# to your user. Do not save AccountSessions to your database as they expire relatively
# quickly, and cannot be used more than once.
# 
# Related guide: [Connect embedded components](https://stripe.com/docs/connect/get-started-connect-embedded-components)
public type Account_session record {
    # The ID of the account the AccountSession was created for
    @constraint:String {maxLength: 5000}
    string account;
    # The client secret of this AccountSession. Used on the client to set up secure access to the given `account`.
    # 
    # The client secret can be used to provide access to `account` from your frontend. It should not be stored, logged, or exposed to anyone other than the connected account. Make sure that you have TLS enabled on any page that includes the client secret.
    # 
    # Refer to our docs to [setup Connect embedded components](https://stripe.com/docs/connect/get-started-connect-embedded-components) and learn about how `client_secret` should be handled.
    @constraint:String {maxLength: 5000}
    string client_secret;
    Connect_embedded_account_session_create_components components;
    # The timestamp at which this AccountSession will expire.
    int expires_at;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "account_session" 'object;
};

# Represents the Queries record for the operation: GetMandatesMandate
public type GetMandatesMandateQueries record {
    # Specifies which fields in the response should be expanded.
    GetMandatesMandateQueriesExpandItemsString[] expand?;
};

public type trial_settings_config record {
    end_behavior end_behavior;
};

# 
public type Issuing_network_token_visa record {
    # A unique reference ID from Visa to represent the card account number.
    @constraint:String {maxLength: 5000}
    string card_reference_id;
    # The network-unique identifier for the token.
    @constraint:String {maxLength: 5000}
    string token_reference_id;
    # The ID of the entity requesting tokenization, specific to Visa.
    @constraint:String {maxLength: 5000}
    string token_requestor_id;
    # Degree of risk associated with the token between `01` and `99`, with higher number indicating higher risk. A `00` value indicates the token was not scored by Visa.
    @constraint:String {maxLength: 5000}
    string token_risk_score?;
};

# 
public type Payment_links_resource_payment_method_reuse_agreement record {
    # Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.
    # 
    # When set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.
    "auto"|"hidden" position;
};

public type us_bank_account_source_params record {
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    @constraint:String {maxLength: 5000}
    string account_number?;
    @constraint:String {maxLength: 5000}
    string routing_number?;
};

# Represents the Queries record for the operation: GetFileLinks
public type GetFileLinksQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFileLinksQueriesExpandItemsString[] expand?;
    # Filter links by their expiration status. By default, Stripe returns all links.
    boolean expired?;
    # Only return links for the given file.
    @constraint:String {maxLength: 5000}
    string file?;
    # Only return links that were created during the given date interval.
    created_11 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

# 
public type Deleted_bank_account record {
    # Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.
    string? currency?;
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "bank_account" 'object;
};

# 
public type Tax_product_registrations_resource_country_options record {
    Tax_product_registrations_resource_country_options_default ae?;
    Tax_product_registrations_resource_country_options_europe at?;
    Tax_product_registrations_resource_country_options_default au?;
    Tax_product_registrations_resource_country_options_europe be?;
    Tax_product_registrations_resource_country_options_europe bg?;
    Tax_product_registrations_resource_country_options_default bh?;
    Tax_product_registrations_resource_country_options_canada ca?;
    Tax_product_registrations_resource_country_options_default ch?;
    Tax_product_registrations_resource_country_options_simplified cl?;
    Tax_product_registrations_resource_country_options_simplified co?;
    Tax_product_registrations_resource_country_options_europe cy?;
    Tax_product_registrations_resource_country_options_europe cz?;
    Tax_product_registrations_resource_country_options_europe de?;
    Tax_product_registrations_resource_country_options_europe dk?;
    Tax_product_registrations_resource_country_options_europe ee?;
    Tax_product_registrations_resource_country_options_simplified eg?;
    Tax_product_registrations_resource_country_options_europe es?;
    Tax_product_registrations_resource_country_options_europe fi?;
    Tax_product_registrations_resource_country_options_europe fr?;
    Tax_product_registrations_resource_country_options_default gb?;
    Tax_product_registrations_resource_country_options_simplified ge?;
    Tax_product_registrations_resource_country_options_europe gr?;
    Tax_product_registrations_resource_country_options_europe hr?;
    Tax_product_registrations_resource_country_options_europe hu?;
    Tax_product_registrations_resource_country_options_simplified id?;
    Tax_product_registrations_resource_country_options_europe ie?;
    Tax_product_registrations_resource_country_options_default 'is?;
    Tax_product_registrations_resource_country_options_europe it?;
    Tax_product_registrations_resource_country_options_default jp?;
    Tax_product_registrations_resource_country_options_simplified ke?;
    Tax_product_registrations_resource_country_options_simplified kr?;
    Tax_product_registrations_resource_country_options_simplified kz?;
    Tax_product_registrations_resource_country_options_europe lt?;
    Tax_product_registrations_resource_country_options_europe lu?;
    Tax_product_registrations_resource_country_options_europe lv?;
    Tax_product_registrations_resource_country_options_europe mt?;
    Tax_product_registrations_resource_country_options_simplified mx?;
    Tax_product_registrations_resource_country_options_simplified my?;
    Tax_product_registrations_resource_country_options_simplified ng?;
    Tax_product_registrations_resource_country_options_europe nl?;
    Tax_product_registrations_resource_country_options_default no?;
    Tax_product_registrations_resource_country_options_default nz?;
    Tax_product_registrations_resource_country_options_default om?;
    Tax_product_registrations_resource_country_options_europe pl?;
    Tax_product_registrations_resource_country_options_europe pt?;
    Tax_product_registrations_resource_country_options_europe ro?;
    Tax_product_registrations_resource_country_options_simplified sa?;
    Tax_product_registrations_resource_country_options_europe se?;
    Tax_product_registrations_resource_country_options_default sg?;
    Tax_product_registrations_resource_country_options_europe si?;
    Tax_product_registrations_resource_country_options_europe sk?;
    Tax_product_registrations_resource_country_options_simplified th?;
    Tax_product_registrations_resource_country_options_simplified tr?;
    Tax_product_registrations_resource_country_options_united_states us?;
    Tax_product_registrations_resource_country_options_simplified vn?;
    Tax_product_registrations_resource_country_options_default za?;
};

public type line_item_create_params record {
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string price?;
    price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type subscription_data_invoice_settings_params record {
    param_3 issuer?;
};

public type account_config_param record {
    boolean enabled;
    account_features_param features?;
};

public type Financial_connections\.account_ownership record {
    int created;
    string id;
    "financial_connections.account_ownership" 'object;
    BankConnectionsResourceOwnerList_1 owners;
};

# 
public type Portal_flows_flow_subscription_update record {
    # The ID of the subscription to be updated.
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Payment_method_options_promptpay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type payment_method_configurations_body record {|
    payment_method_param_2 acss_debit?;
    payment_method_param_3 affirm?;
    payment_method_param_4 afterpay_clearpay?;
    payment_method_param_5 alipay?;
    payment_method_param_6 amazon_pay?;
    payment_method_param_7 apple_pay?;
    payment_method_param_8 apple_pay_later?;
    payment_method_param_9 au_becs_debit?;
    payment_method_param_10 bacs_debit?;
    payment_method_param_11 bancontact?;
    payment_method_param_12 blik?;
    payment_method_param_13 boleto?;
    payment_method_param_14 card?;
    payment_method_param_15 cartes_bancaires?;
    payment_method_param_16 cashapp?;
    payment_method_param_17 customer_balance?;
    payment_method_param_18 eps?;
    # Specifies which fields in the response should be expanded.
    payment_method_configurations_bodyExpandItemsString[] expand?;
    payment_method_param_19 fpx?;
    payment_method_param_20 giropay?;
    payment_method_param_21 google_pay?;
    payment_method_param_22 grabpay?;
    payment_method_param_23 ideal?;
    payment_method_param_24 jcb?;
    payment_method_param_25 klarna?;
    payment_method_param_26 konbini?;
    payment_method_param_27 link?;
    payment_method_param_28 mobilepay?;
    payment_method_param_29 multibanco?;
    # Configuration name.
    @constraint:String {maxLength: 100}
    string name?;
    payment_method_param_30 oxxo?;
    payment_method_param_31 p24?;
    # Configuration's parent configuration. Specify to create a child configuration.
    @constraint:String {maxLength: 100}
    string parent?;
    payment_method_param_32 paynow?;
    payment_method_param_33 paypal?;
    payment_method_param_34 promptpay?;
    payment_method_param_35 revolut_pay?;
    payment_method_param_36 sepa_debit?;
    payment_method_param_37 sofort?;
    payment_method_param_38 swish?;
    payment_method_param_39 us_bank_account?;
    payment_method_param_40 wechat_pay?;
    payment_method_param_41 zip?;
|};

public type phase_configuration_params record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_1 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int|"now" end_date?;
    invoice_settings invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int|"now" start_date?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int|"now" trial_end?;
};

# 
public type Payment_flows_amount_details_resource_tip record {
    # Portion of the amount that corresponds to a tip.
    int amount?;
};

# Point in Time
public type Gelato_data_verified_outputs_date record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

public type readers_reader_bodyExpandItemsString string;

public type payment_methods_body record {|
    payment_method_param_42 acss_debit?;
    # If this is an `affirm` PaymentMethod, this hash contains details about the Affirm payment method.
    record {} affirm?;
    # If this is an `AfterpayClearpay` PaymentMethod, this hash contains details about the AfterpayClearpay payment method.
    record {} afterpay_clearpay?;
    # If this is an `Alipay` PaymentMethod, this hash contains details about the Alipay payment method.
    record {} alipay?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.
    "always"|"limited"|"unspecified" allow_redisplay?;
    # If this is a AmazonPay PaymentMethod, this hash contains details about the AmazonPay payment method.
    record {} amazon_pay?;
    param_14 au_becs_debit?;
    param_15 bacs_debit?;
    # If this is a `bancontact` PaymentMethod, this hash contains details about the Bancontact payment method.
    record {} bancontact?;
    billing_details_inner_params_1 billing_details?;
    # If this is a `blik` PaymentMethod, this hash contains details about the BLIK payment method.
    record {} blik?;
    param_16 boleto?;
    # If this is a `card` PaymentMethod, this hash contains the user's card details. For backwards compatibility, you can alternatively provide a Stripe token (e.g., for Apple Pay, Amex Express Checkout, or legacy Checkout) into the card hash with format `card: {token: "tok_visa"}`. When providing a card number, you must meet the requirements for [PCI compliance](https://stripe.com/docs/security#validating-pci-compliance). We strongly recommend using Stripe.js instead of interacting with this API directly.
    record {string cvc?; int exp_month; int exp_year; record {"cartes_bancaires"|"mastercard"|"visa" preferred?;} networks?; string number;}|record {string token;} card?;
    # If this is a `cashapp` PaymentMethod, this hash contains details about the Cash App Pay payment method.
    record {} cashapp?;
    # The `Customer` to whom the original PaymentMethod is attached.
    @constraint:String {maxLength: 5000}
    string customer?;
    # If this is a `customer_balance` PaymentMethod, this hash contains details about the CustomerBalance payment method.
    record {} customer_balance?;
    param_17 eps?;
    # Specifies which fields in the response should be expanded.
    payment_methods_bodyExpandItemsString[] expand?;
    param_18 fpx?;
    # If this is a `giropay` PaymentMethod, this hash contains details about the Giropay payment method.
    record {} giropay?;
    # If this is a `grabpay` PaymentMethod, this hash contains details about the GrabPay payment method.
    record {} grabpay?;
    param_19 ideal?;
    # If this is an `interac_present` PaymentMethod, this hash contains details about the Interac Present payment method.
    record {} interac_present?;
    param_20 klarna?;
    # If this is a `konbini` PaymentMethod, this hash contains details about the Konbini payment method.
    record {} konbini?;
    # If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.
    record {} link?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # If this is a `mobilepay` PaymentMethod, this hash contains details about the MobilePay payment method.
    record {} mobilepay?;
    # If this is a `multibanco` PaymentMethod, this hash contains details about the Multibanco payment method.
    record {} multibanco?;
    # If this is an `oxxo` PaymentMethod, this hash contains details about the OXXO payment method.
    record {} oxxo?;
    param_21 p24?;
    # The PaymentMethod to share.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # If this is a `paynow` PaymentMethod, this hash contains details about the PayNow payment method.
    record {} paynow?;
    # If this is a `paypal` PaymentMethod, this hash contains details about the PayPal payment method.
    record {} paypal?;
    # If this is a `pix` PaymentMethod, this hash contains details about the Pix payment method.
    record {} pix?;
    # If this is a `promptpay` PaymentMethod, this hash contains details about the PromptPay payment method.
    record {} promptpay?;
    radar_options_with_hidden_options radar_options?;
    # If this is a `Revolut Pay` PaymentMethod, this hash contains details about the Revolut Pay payment method.
    record {} revolut_pay?;
    param_22 sepa_debit?;
    param_23 sofort?;
    # If this is a `swish` PaymentMethod, this hash contains details about the Swish payment method.
    record {} swish?;
    # If this is a TWINT PaymentMethod, this hash contains details about the TWINT payment method.
    record {} twint?;
    # The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type?;
    payment_method_param_43 us_bank_account?;
    # If this is an `wechat_pay` PaymentMethod, this hash contains details about the wechat_pay payment method.
    record {} wechat_pay?;
    # If this is a `zip` PaymentMethod, this hash contains details about the Zip payment method.
    record {} zip?;
|};

# 
public type Issuing_authorization_fleet_data record {
    # Answers to prompts presented to the cardholder at the point of sale. Prompted fields vary depending on the configuration of your physical fleet cards. Typical points of sale support only numeric entry.
    Issuing_authorization_fleet_cardholder_prompt_data? cardholder_prompt_data?;
    # The type of purchase.
    "fuel_and_non_fuel_purchase"|"fuel_purchase"|"non_fuel_purchase"? purchase_type?;
    # More information about the total amount. Typically this information is received from the merchant after the authorization has been approved and the fuel dispensed. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
    Issuing_authorization_fleet_reported_breakdown? reported_breakdown?;
    # The type of fuel service.
    "full_service"|"non_fuel_transaction"|"self_service"? service_type?;
};

# 
public type Payment_intent_type_specific_payment_method_options_client record {
    # Controls when the funds will be captured from the customer's account.
    "manual"|"manual_preferred" capture_method?;
    Payment_flows_installment_options installments?;
    # When enabled, using a card that is attached to a customer will require the CVC to be provided again (i.e. using the cvc_token parameter).
    boolean require_cvc_recollection?;
    Payment_method_options_card_present_routing routing?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Payment_intent_next_action_swish_handle_redirect_or_display_qr_code record {
    # The URL to the hosted Swish instructions page, which allows customers to view the QR code.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url;
    Payment_intent_next_action_swish_qr_code qr_code;
};

# Represents the Queries record for the operation: GetIssuingSettlementsSettlement
public type GetIssuingSettlementsSettlementQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingSettlementsSettlementQueriesExpandItemsString[] expand?;
};

# Settings for automatic tax lookup for this invoice.
public type automatic_tax_param record {
    boolean enabled;
    param liability?;
};

public type apps_secrets_body record {|
    # Specifies which fields in the response should be expanded.
    apps_secrets_bodyExpandItemsString[] expand?;
    # The Unix timestamp for the expiry time of the secret, after which the secret deletes.
    int expires_at?;
    # A name for the secret that's unique within the scope.
    @constraint:String {maxLength: 5000}
    string name;
    # The plaintext secret value to be stored.
    @constraint:String {maxLength: 5000}
    string payload;
    scope_param_1 scope;
|};

# 
public type IssuingPhysicalBundleList record {
    Issuing\.physical_bundle[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/physical_bundles`}
    string url;
};

public type account_persons_bodyExpandItemsString string;

# 
public type Payment_method_options_twint record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type line_item_paramsDynamictaxratesItemsString string;

public type shipping_return_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_return_bodyExpandItemsString[] expand?;
|};

# 
public type BalanceTransactionsList record {
    Balance_transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/balance_transactions`}
    string url;
};

# Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.
public type order_params record {
    order_item_specs[] items?;
    order_shipping shipping?;
};

public type after_completion_confirmation_page_params record {
    @constraint:String {maxLength: 500}
    string custom_message?;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesIdQueriesExpandItemsString string;

# Each customer has a [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance) that is
# automatically applied to future invoices and payments using the `customer_balance` payment method.
# Customers can fund this balance by initiating a bank transfer to any account in the
# `financial_addresses` field.
# Related guide: [Customer balance funding instructions](https://stripe.com/docs/payments/customer-balance/funding-instructions)
public type Funding_instructions record {
    Funding_instructions_bank_transfer bank_transfer;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # The `funding_type` of the returned instructions
    "bank_transfer" funding_type;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "funding_instructions" 'object;
};

# 
public type Payment_method_affirm record {
};

# A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.
public type payment_intent_data_params record {
    int application_fee_amount?;
    "automatic"|"automatic_async"|"manual" capture_method?;
    @constraint:String {maxLength: 1000}
    string description?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    string receipt_email?;
    "off_session"|"on_session" setup_future_usage?;
    shipping shipping?;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_params transfer_data?;
    string transfer_group?;
};

# 
public type Tax_product_resource_line_item_tax_rate_details record {
    # A localized display name for tax type, intended to be human-readable. For example, "Local Sales and Use Tax", "Value-added tax (VAT)", or "Umsatzsteuer (USt.)".
    @constraint:String {maxLength: 5000}
    string display_name;
    # The tax rate percentage as a string. For example, 8.5% is represented as "8.5".
    @constraint:String {maxLength: 5000}
    string percentage_decimal;
    # The tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type;
};

# Information about the owner of the payment instrument that may be used or required by particular source types.
public type owner_1 record {
    source_address address?;
    string email?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string phone?;
};

# 
public type Source_owner record {
    # Owner's address.
    Address? address?;
    # Owner's email address.
    string? email?;
    # Owner's full name.
    string? name?;
    # Owner's phone number (including extension).
    string? phone?;
    # Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? verified_address?;
    # Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_email?;
    # Verified owner's full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
    # Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_phone?;
};

# 
public type Issuing_authorization_verification_data record {
    # Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.
    "match"|"mismatch"|"not_provided" address_line1_check;
    # Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.
    "match"|"mismatch"|"not_provided" address_postal_code_check;
    # The exemption applied to this authorization.
    Issuing_authorization_authentication_exemption? authentication_exemption?;
    # Whether the cardholder provided a CVC and if it matched Stripe’s record.
    "match"|"mismatch"|"not_provided" cvc_check;
    # Whether the cardholder provided an expiry date and if it matched Stripe’s record.
    "match"|"mismatch"|"not_provided" expiry_check;
    # The postal code submitted as part of the authorization used for postal code verification.
    string? postal_code?;
    # 3D Secure details.
    Issuing_authorization_three_d_secure? three_d_secure?;
};

# Represents the Queries record for the operation: GetAppsSecretsFind
public type GetAppsSecretsFindQueries record {
    # Specifies which fields in the response should be expanded.
    GetAppsSecretsFindQueriesExpandItemsString[] expand?;
    # Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
    scope_param_2 scope;
    # A name for the secret that's unique within the scope.
    @constraint:String {maxLength: 5000}
    string name;
};

# All invoices will be billed using the specified settings.
public type quote_param record {
    int days_until_due?;
    param_3 issuer?;
};

# Details on the legal guardian's acceptance of the required Stripe agreements.
public type person_additional_tos_acceptances_specs record {
    settings_terms_of_service_specs account?;
};

# 
public type Ephemeral_key record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Time at which the key will expire. Measured in seconds since the Unix epoch.
    int expires;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "ephemeral_key" 'object;
    # The key's secret. You can use this value to make authorized requests to the Stripe API.
    @constraint:String {maxLength: 5000}
    string secret?;
};

# When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.
public type subscription_data_update_params_1 record {
    string|"" description?;
    "current_period_end"|int|"" effective_date?;
    record {|string...;|} metadata?;
    int|"" trial_period_days?;
};

# 
public type Customer_tax record {
    # Surfaces if automatic tax computation is possible given the current customer location information.
    "failed"|"not_collecting"|"supported"|"unrecognized_location" automatic_tax;
    # A recent IP address of the customer used for tax reporting and tax location inference.
    string? ip_address?;
    # The customer's location as identified by Stripe Tax.
    Customer_tax_location? location?;
};

public type Billing\.meter_event record {
    int created;
    string event_name;
    string identifier;
    boolean livemode;
    "billing.meter_event" 'object;
    record {|string...;|} payload;
    int timestamp;
};

# 
public type Connect_collection_transfer record {
    # Amount transferred, in cents (or local equivalent).
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the account that funds are being collected for.
    string|Account destination;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "connect_collection_transfer" 'object;
};

# 
public type Payment_method_options_oxxo record {
    # The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.
    int expires_after_days;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type shipping record {
    address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

# 
public type Platform_earning_fee_source record {
    # Charge ID that created this application fee.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Payout ID that created this application fee.
    @constraint:String {maxLength: 5000}
    string payout?;
    # Type of object that created the application fee, either `charge` or `payout`.
    "charge"|"payout" 'type;
};

@constraint:String {maxLength: 5000}
public type GetTerminalReadersReaderQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Person_future_requirementsPendingverificationItemsString string;

# Configuration for collecting the customer's shipping address.
public type shipping_address_collection_params_1 record {
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# 
public type Payment_method_amazon_pay record {
};

# Represents an action performed by the reader
public type Terminal_reader_reader_resource_reader_action record {
    # Failure code, only set if status is `failed`.
    string? failure_code?;
    # Detailed failure message, only set if status is `failed`.
    string? failure_message?;
    Terminal_reader_reader_resource_process_payment_intent_action process_payment_intent?;
    Terminal_reader_reader_resource_process_setup_intent_action process_setup_intent?;
    Terminal_reader_reader_resource_refund_payment_action refund_payment?;
    Terminal_reader_reader_resource_set_reader_display_action set_reader_display?;
    # Status of the action performed by the reader.
    "failed"|"in_progress"|"succeeded" status;
    # Type of action performed by the reader.
    "process_payment_intent"|"process_setup_intent"|"refund_payment"|"set_reader_display" 'type;
};

public type customers_customer_body record {|
    # The customer's address.
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    # An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice.
    int balance?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    cash_balance_param cash_balance?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    # ID of Alipay account to make the customer's new default for invoice payments.
    @constraint:String {maxLength: 500}
    string default_alipay_account?;
    # ID of bank account to make the customer's new default for invoice payments.
    @constraint:String {maxLength: 500}
    string default_bank_account?;
    # ID of card to make the customer's new default for invoice payments.
    @constraint:String {maxLength: 500}
    string default_card?;
    # If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method) parameter.
    # 
    # Provide the ID of a payment source already attached to this customer to make it this customer's default payment source.
    # 
    # If you want to add a new payment source and make it the default, see the [source](https://stripe.com/docs/api/customers/update#update_customer-source) property.
    @constraint:String {maxLength: 500}
    string default_source?;
    # An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
    @constraint:String {maxLength: 5000}
    string description?;
    # Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.
    @constraint:String {maxLength: 512}
    string email?;
    # Specifies which fields in the response should be expanded.
    customers_customer_bodyExpandItemsString[] expand?;
    # The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.
    @constraint:String {maxLength: 5000}
    string invoice_prefix?;
    customer_param invoice_settings?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The customer's full name or business name.
    @constraint:String {maxLength: 256}
    string name?;
    # The sequence to be used on the customer's next invoice. Defaults to 1.
    int next_invoice_sequence?;
    # The customer's phone number.
    @constraint:String {maxLength: 20}
    string phone?;
    # Customer's preferred languages, ordered by preference.
    customers_customer_bodyPreferredlocalesItemsString[] preferred_locales?;
    # The ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # The customer's shipping information. Appears on invoices emailed to this customer.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string name; string phone?;}|"" shipping?;
    @constraint:String {maxLength: 5000}
    string 'source?;
    tax_param tax?;
    # The customer's tax exemption. One of `none`, `exempt`, or `reverse`.
    ""|"exempt"|"none"|"reverse" tax_exempt?;
|};

# 
public type Issuing_cardholder_individual record {
    # Information related to the card_issuing program for this cardholder.
    Issuing_cardholder_card_issuing? card_issuing?;
    # The date of birth of this cardholder.
    Issuing_cardholder_individual_dob? dob?;
    # The first name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.
    string? first_name?;
    # The last name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.
    string? last_name?;
    # Government-issued ID document for this cardholder.
    Issuing_cardholder_verification? verification?;
};

# Details about the seller (grocery store, e-commerce website, etc.) where the card authorization happened.
public type merchant_data_specs record {
    "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards" category?;
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string network_id?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string terminal_id?;
    @constraint:String {maxLength: 5000}
    string url?;
};

public type Source_type_ideal record {
    string? bank?;
    string? bic?;
    string? iban_last4?;
    string? statement_descriptor?;
};

public type invoice_settings record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    int days_until_due?;
    param issuer?;
};

public type issuing_personalization_designs_bodyExpandItemsString string;

# 
public type Payment_method_details_card_wallet_visa_checkout record {
    # Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? billing_address?;
    # Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? email?;
    # Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? name?;
    # Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    Address? shipping_address?;
};

public type account_people_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    account_people_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

@constraint:String {maxLength: 5000}
public type GetIssuingTokensQueriesExpandItemsString string;

# 
public type Payment_method_details_card_wallet record {
    Payment_method_details_card_wallet_amex_express_checkout amex_express_checkout?;
    Payment_method_details_card_wallet_apple_pay apple_pay?;
    # (For tokenized numbers only.) The last four digits of the device account number.
    string? dynamic_last4?;
    Payment_method_details_card_wallet_google_pay google_pay?;
    Payment_method_details_card_wallet_link link?;
    Payment_method_details_card_wallet_masterpass masterpass?;
    Payment_method_details_card_wallet_samsung_pay samsung_pay?;
    # The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
    "amex_express_checkout"|"apple_pay"|"google_pay"|"link"|"masterpass"|"samsung_pay"|"visa_checkout" 'type;
    Payment_method_details_card_wallet_visa_checkout visa_checkout?;
};

public type invoices_body record {|
    # The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    # A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).
    int application_fee_amount?;
    # Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.
    boolean auto_advance?;
    automatic_tax_param automatic_tax?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The currency to create this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # A list of up to 4 custom fields to be displayed on the invoice.
    record {string name; string value;}[]|"" custom_fields?;
    # The ID of the customer who will be billed.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The number of days from when the invoice is created until it is due. Valid only for invoices where `collection_method=send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.
    @constraint:String {maxLength: 5000}
    string default_source?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set.
    invoices_bodyDefaulttaxratesItemsString[] default_tax_rates?;
    # An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.
    @constraint:String {maxLength: 1500}
    string description?;
    # The coupons and promotion codes to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice's customer. Pass an empty string to avoid inheriting any discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # The date on which payment for this invoice is due. Valid only for invoices where `collection_method=send_invoice`.
    int due_date?;
    # The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.
    int effective_at?;
    # Specifies which fields in the response should be expanded.
    invoices_bodyExpandItemsString[] expand?;
    # Footer to be displayed on the invoice.
    @constraint:String {maxLength: 5000}
    string footer?;
    from_invoice from_invoice?;
    param_1 issuer?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Set the number for this invoice. If no number is present then a number will be assigned automatically when the invoice is finalized. In many markets, regulations require invoices to be unique, sequential and / or gapless. You are responsible for ensuring this is true across all your different invoicing systems in the event that you edit the invoice number using our API. If you use only Stripe for your invoices and do not change invoice numbers, Stripe handles this aspect of compliance for you automatically.
    @constraint:String {maxLength: 26}
    string number?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string on_behalf_of?;
    payment_settings_1 payment_settings?;
    # How to handle pending invoice items on invoice creation. Defaults to `exclude` if the parameter is omitted.
    "exclude"|"include" pending_invoice_items_behavior?;
    rendering_param rendering?;
    shipping_cost shipping_cost?;
    recipient_shipping_with_optional_fields_address shipping_details?;
    # Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # The ID of the subscription to invoice, if any. If set, the created invoice will only include pending invoice items for that subscription. The subscription's billing cycle and regular subscription events won't be affected.
    @constraint:String {maxLength: 5000}
    string subscription?;
    transfer_data_specs_4 transfer_data?;
|};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction record {
    # The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were applied to.
    string|Payment_intent payment_intent;
};

# Represents the Queries record for the operation: GetCoupons
public type GetCouponsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCouponsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_6 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type issuing_cardholders_body record {|
    billing_specs billing;
    company_param company?;
    # The cardholder's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    issuing_cardholders_bodyExpandItemsString[] expand?;
    individual_param individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The cardholder's name. This will be printed on cards issued to them. The maximum length of this field is 24 characters. This field cannot contain any special characters or numbers.
    string name;
    # The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.
    string phone_number?;
    # The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.
    #  This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.
    ("de"|"en"|"es"|"fr"|"it")[] preferred_locales?;
    authorization_controls_param_v2 spending_controls?;
    # Specifies whether to permit authorizations on this cardholder's cards. Defaults to `active`.
    "active"|"inactive" status?;
    # One of `individual` or `company`. See [Choose a cardholder type](https://stripe.com/docs/issuing/other/choose-cardholder) for more details.
    "company"|"individual" 'type?;
|};

# Represents the Queries record for the operation: GetCreditNotesId
public type GetCreditNotesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCreditNotesIdQueriesExpandItemsString[] expand?;
};

public type file_links_link_body record {|
    # Specifies which fields in the response should be expanded.
    file_links_link_bodyExpandItemsString[] expand?;
    # A future timestamp after which the link will no longer be usable, or `now` to expire the link immediately.
    "now"|int|"" expires_at?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Gelato_session_email_options record {
    # Request one time password verification of `provided_details.email`.
    boolean require_verification?;
};

# 
public type Portal_customer_update record {
    # The types of customer updates that are supported. When empty, customers are not updateable.
    ("address"|"email"|"name"|"phone"|"shipping"|"tax_id")[] allowed_updates;
    # Whether the feature is enabled.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQuoteQueriesExpandItemsString string;

# 
public type Tax_product_resource_ship_from_details record {
    Tax_product_resource_postal_address address;
};

# Represents a reader action to process a payment intent
public type Terminal_reader_reader_resource_process_payment_intent_action record {
    # Most recent PaymentIntent processed by the reader.
    string|Payment_intent payment_intent;
    Terminal_reader_reader_resource_process_config process_config?;
};

# 
public type Tax_product_resource_tax_transaction_resource_reversal record {
    # The `id` of the reversed `Transaction` object.
    string? original_transaction?;
};

# Represents the Queries record for the operation: GetAppsSecrets
public type GetAppsSecretsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAppsSecretsQueriesExpandItemsString[] expand?;
    # Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.
    scope_param scope;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type transactions_create_unlinked_refund_body record {|
    # The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Card associated with this unlinked refund transaction.
    @constraint:String {maxLength: 5000}
    string card;
    # The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    transactions_create_unlinked_refund_bodyExpandItemsString[] expand?;
    merchant_data_specs merchant_data?;
    purchase_details_specs purchase_details?;
|};

# 
public type Payment_intent_processing_customer_notification record {
    # Whether customer approval has been requested for this payment. For payments greater than INR 15000 or mandate amount, the customer must provide explicit approval of the payment with their bank.
    boolean? approval_requested?;
    # If customer approval is required, they need to provide approval before this time.
    int? completes_at?;
};

public type account_refresh_body_1ExpandItemsString string;

# 
public type Payment_method_details_blik record {
};

# Represents the Queries record for the operation: GetClimateProducts
public type GetClimateProductsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetClimateProductsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_intent_payment_method_options_acss_debit record {
    Payment_intent_payment_method_options_mandate_options_acss_debit mandate_options?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Portal_flows_flow_subscription_update_confirm record {
    # The coupon or promotion code to apply to this subscription update. Currently, only up to one may be specified.
    Portal_flows_subscription_update_confirm_discount[]? discounts?;
    # The [subscription item](https://stripe.com/docs/api/subscription_items) to be updated through this flow. Currently, only up to one may be specified and subscriptions with multiple items are not updatable.
    Portal_flows_subscription_update_confirm_item[] items;
    # The ID of the subscription to be updated.
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Account_unification_account_controller_losses record {
    # A value indicating who is liable when this account can't pay back negative balances from payments.
    "application"|"stripe" payments;
};

# Represents the Queries record for the operation: GetPricesPrice
public type GetPricesPriceQueries record {
    # Specifies which fields in the response should be expanded.
    GetPricesPriceQueriesExpandItemsString[] expand?;
};

# 
public type Transfer_data record {
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount?;
    # The account (if any) that the payment is attributed to for tax
    # reporting, and where funds from the payment are transferred to after
    # payment success.
    string|Account destination;
};

public type flight_specs record {
    int departure_at?;
    @constraint:String {maxLength: 5000}
    string passenger_name?;
    boolean refundable?;
    flight_segment_specs[] segments?;
    @constraint:String {maxLength: 5000}
    string travel_agency?;
};

public type source_address record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# 
public type Issuing_network_token_wallet_provider record {
    # The wallet provider-given account ID of the digital wallet the token belongs to.
    @constraint:String {maxLength: 5000}
    string account_id?;
    # An evaluation on the trustworthiness of the wallet account between 1 and 5. A higher score indicates more trustworthy.
    int account_trust_score?;
    # The method used for tokenizing a card.
    "app"|"manual"|"on_file"|"other" card_number_source?;
    Issuing_network_token_address cardholder_address?;
    # The name of the cardholder tokenizing the card.
    @constraint:String {maxLength: 5000}
    string cardholder_name?;
    # An evaluation on the trustworthiness of the device. A higher score indicates more trustworthy.
    int device_trust_score?;
    # The hashed email address of the cardholder's account with the wallet provider.
    @constraint:String {maxLength: 5000}
    string hashed_account_email_address?;
    # The reasons for suggested tokenization given by the card network.
    ("account_card_too_new"|"account_recently_changed"|"account_too_new"|"account_too_new_since_launch"|"additional_device"|"data_expired"|"defer_id_v_decision"|"device_recently_lost"|"good_activity_history"|"has_suspended_tokens"|"high_risk"|"inactive_account"|"long_account_tenure"|"low_account_score"|"low_device_score"|"low_phone_number_score"|"network_service_error"|"outside_home_territory"|"provisioning_cardholder_mismatch"|"provisioning_device_and_cardholder_mismatch"|"provisioning_device_mismatch"|"same_device_no_prior_authentication"|"same_device_successful_prior_authentication"|"software_update"|"suspicious_activity"|"too_many_different_cardholders"|"too_many_recent_attempts"|"too_many_recent_tokens")[] reason_codes?;
    # The recommendation on responding to the tokenization request.
    "approve"|"decline"|"require_auth" suggested_decision?;
    # The version of the standard for mapping reason codes followed by the wallet provider.
    @constraint:String {maxLength: 5000}
    string suggested_decision_version?;
};

# 
public type Payment_method_details_eps record {
    # The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau"? bank?;
    # Owner's verified full name. Values are verified or provided by EPS directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    # EPS rarely provides this information so the attribute is usually empty.
    string? verified_name?;
};

@constraint:String {maxLength: 5000}
public type GetProductsQueriesIdsItemsString string;

# 
public type Issuing_authorization_authentication_exemption record {
    # The entity that requested the exemption, either the acquiring merchant or the Issuing user.
    "acquirer"|"issuer" claimed_by;
    # The specific exemption claimed for this authorization.
    "low_value_transaction"|"transaction_risk_analysis"|"unknown" 'type;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQuoteComputedUpfrontLineItemsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetBillingPortalConfigurationsConfigurationQueriesExpandItemsString string;

public type registrations_id_body record {|
    # Time at which the registration becomes active. It can be either `now` to indicate the current time, or a timestamp measured in seconds since the Unix epoch.
    "now"|int active_from?;
    # Specifies which fields in the response should be expanded.
    registrations_id_bodyExpandItemsString[] expand?;
    # If set, the registration stops being active at this time. If not set, the registration will be active indefinitely. It can be either `now` to indicate the current time, or a timestamp measured in seconds since the Unix epoch.
    "now"|int|"" expires_at?;
|};

# 
public type BillingClocksResourceBillingClockList record {
    Test_helpers\.test_clock[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/test_helpers/test_clocks`}
    string url;
};

# Represents the Queries record for the operation: GetPaymentMethodConfigurationsConfiguration
public type GetPaymentMethodConfigurationsConfigurationQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodConfigurationsConfigurationQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTreasuryCreditReversalsCreditReversal
public type GetTreasuryCreditReversalsCreditReversalQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryCreditReversalsCreditReversalQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsEventuallydueItemsString string;

# A coupon contains information about a percent-off or amount-off discount you
# might want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),
# [checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).
public type Coupon record {
    # Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.
    int? amount_off?;
    Coupon_applies_to applies_to?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.
    string? currency?;
    # Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Coupon_currency_option...;|} currency_options?;
    # One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.
    "forever"|"once"|"repeating" duration;
    # If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.
    int? duration_in_months?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.
    int? max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # Name of the coupon displayed to customers on for instance invoices or receipts.
    string? name?;
    # String representing the object's type. Objects of the same type share the same value.
    "coupon" 'object;
    # Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a $ (or local equivalent)100 invoice $ (or local equivalent)50 instead.
    decimal? percent_off?;
    # Date after which the coupon can no longer be redeemed.
    int? redeem_by?;
    # Number of times this coupon has been applied to a customer.
    int times_redeemed;
    # Taking account of the above properties, whether this coupon can still be applied to a customer.
    boolean valid;
};

# 
public type Invoice_payment_method_options_customer_balance_bank_transfer record {
    Invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer eu_bank_transfer?;
    # The bank transfer type that can be used for funding. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    string? 'type?;
};

# 
public type Radar_review_resource_session record {
    # The browser used in this browser session (e.g., `Chrome`).
    string? browser?;
    # Information about the device used for the browser session (e.g., `Samsung SM-G930T`).
    string? device?;
    # The platform for the browser session (e.g., `Macintosh`).
    string? platform?;
    # The version for the browser session (e.g., `61.0.3163.100`).
    string? version?;
};

public type invoices_create_preview_bodyExpandItemsString string;

public type subscriptions_subscription_exposed_id_body record {|
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    add_invoice_item_entry[] add_invoice_items?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).
    decimal|"" application_fee_percent?;
    automatic_tax_config automatic_tax?;
    # Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "now"|"unchanged" billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.
    int|"" cancel_at?;
    # Boolean indicating whether this subscription should cancel at the end of the current period.
    boolean cancel_at_period_end?;
    cancellation_details_param cancellation_details?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`.
    int days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|"" default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # The coupons to redeem into discounts for the subscription. If not specified or empty, inherits the discount from the subscription's customer.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    subscriptions_subscription_exposed_id_bodyExpandItemsString[] expand?;
    invoice_settings_param invoice_settings?;
    # A list of up to 20 subscription items, each with an attached price.
    subscription_item_update_params[] items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted.
    boolean off_session?;
    # If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).
    record {"keep_as_draft"|"mark_uncollectible"|"void" behavior; int resumes_at?;}|"" pause_collection?;
    # Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    # 
    # Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.
    # 
    # Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).
    # 
    # Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.
    "allow_incomplete"|"default_incomplete"|"error_if_incomplete"|"pending_if_incomplete" payment_behavior?;
    payment_settings payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    record {"day"|"month"|"week"|"year" interval; int interval_count?;}|"" pending_invoice_item_interval?;
    # The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.
    @constraint:String {maxLength: 5000}
    string promotion_code?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#upcoming_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.
    int proration_date?;
    # If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value.
    record {decimal amount_percent?; string destination;}|"" transfer_data?;
    # Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`.
    "now"|int trial_end?;
    # Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.
    boolean trial_from_plan?;
    trial_settings_config_1 trial_settings?;
|};

public type charge_refunds_bodyExpandItemsString string;

public type outbound_transfers record {
    access_with_ach_details ach?;
    access us_domestic_wire?;
};

@constraint:String {maxLength: 5000}
public type GetReportingReportRunsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryCreditReversalsQueriesExpandItemsString string;

public type outbound_transfer_cancel_bodyExpandItemsString string;

public type payment_element_param record {
    boolean enabled;
    features_param features?;
};

# A hash of configuration describing the account controller's attributes.
public type controller_specs record {
    controller_fees_specs fees?;
    controller_losses_specs losses?;
    "application"|"stripe" requirement_collection?;
    controller_dashboard_specs stripe_dashboard?;
};

public type period_1 record {
    int end;
    int 'start;
};

# Line items that make up the credit note
public type CreditNoteLinesList_1 record {
    # Details about each object.
    Credit_note_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type custom_field_text_param_1 record {
    int maximum_length?;
    int minimum_length?;
};

# 
public type Tax_product_registrations_resource_country_options_eu_standard record {
    # Place of supply scheme used in an EU standard registration.
    "small_seller"|"standard" place_of_supply_scheme;
};

# 
public type Treasury_received_credits_resource_status_transitions record {
    # Timestamp describing when the CreditReversal changed status to `posted`
    int? posted_at?;
};

# This parameter allows you to set some attributes on the payment method created during a Checkout session.
public type payment_method_data_param record {
    "always"|"limited"|"unspecified" allow_redisplay?;
};

# 
public type Checkout_us_bank_account_payment_method_options record {
    Linked_account_options_us_bank_account financial_connections?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant" verification_method?;
};

public type invoiceitems_invoiceitem_bodyExpandItemsString string;

# Result from a selfie check
public type Gelato_selfie_report record {
    # ID of the [File](https://stripe.com/docs/api/files) holding the image of the identity document used in this check.
    string? document?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_selfie_report_error? 'error?;
    # ID of the [File](https://stripe.com/docs/api/files) holding the image of the selfie used in this check.
    string? selfie?;
    # Status of this `selfie` check.
    "unverified"|"verified" status;
};

public type billing_portal_configurations_body record {|
    business_profile_create_param business_profile;
    # The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.
    string|"" default_return_url?;
    # Specifies which fields in the response should be expanded.
    billing_portal_configurations_bodyExpandItemsString[] expand?;
    features_creation_param features;
    login_page_create_param login_page?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type customer_tax_ids_body record {|
    # Specifies which fields in the response should be expanded.
    customer_tax_ids_bodyExpandItemsString[] expand?;
    # Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # Value of the tax ID.
    string value;
|};

# 
public type ClimateRemovalsOrdersList record {
    Climate\.order[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/climate/orders`}
    string url;
};

public type cards_card_bodyExpandItemsString string;

public type Financial_connections\.account_owner record {
    string? email?;
    string id;
    string name;
    "financial_connections.account_owner" 'object;
    string ownership;
    string? phone?;
    string? raw_address?;
    int? refreshed_at?;
};

# Represents the Queries record for the operation: GetCustomersCustomerPaymentMethods
public type GetCustomersCustomerPaymentMethodsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerPaymentMethodsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.
    "always"|"limited"|"unspecified" allow_redisplay?;
};

# 
public type Subscriptions_resource_payment_method_options record {
    # This sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_acss_debit? acss_debit?;
    # This sub-hash contains details about the Bancontact payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_bancontact? bancontact?;
    # This sub-hash contains details about the Card payment method options to pass to invoices created by the subscription.
    Subscription_payment_method_options_card? card?;
    # This sub-hash contains details about the Bank transfer payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_customer_balance? customer_balance?;
    # This sub-hash contains details about the Konbini payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_konbini? konbini?;
    # This sub-hash contains details about the SEPA Direct Debit payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_sepa_debit? sepa_debit?;
    # This sub-hash contains details about the ACH direct debit payment method options to pass to invoices created by the subscription.
    Invoice_payment_method_options_us_bank_account? us_bank_account?;
};

# 
public type Address record {
    # City, district, suburb, town, or village.
    string? city?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # Address line 1 (e.g., street, PO Box, or company name).
    string? line1?;
    # Address line 2 (e.g., apartment, suite, unit, or building).
    string? line2?;
    # ZIP or postal code.
    string? postal_code?;
    # State, county, province, or region.
    string? state?;
};

public type shipping_fail_bodyExpandItemsString string;

public type id_succeed_body record {|
    # Specifies which fields in the response should be expanded.
    id_succeed_bodyExpandItemsString[] expand?;
|};

# Tokenization is the process Stripe uses to collect sensitive card or bank
# account details, or personally identifiable information (PII), directly from
# your customers in a secure manner. A token representing this information is
# returned to your server to use. Use our
# [recommended payments integrations](https://stripe.com/docs/payments) to perform this process
# on the client-side. This guarantees that no sensitive card data touches your server,
# and allows your integration to operate in a PCI-compliant way.
# 
# If you can't use client-side tokenization, you can also create tokens using
# the API with either your publishable or secret API key. If
# your integration uses this method, you're responsible for any PCI compliance
# that it might require, and you must keep your secret API key safe. Unlike with
# client-side tokenization, your customer's information isn't sent directly to
# Stripe, so we can't determine how it's handled or stored.
# 
# You can't store or use tokens more than once. To store card or bank account
# information for later use, create [Customer](https://stripe.com/docs/api#customers)
# objects or [External accounts](/api#external_accounts).
# [Radar](https://stripe.com/docs/radar), our integrated solution for automatic fraud protection,
# performs best with integrations that use client-side tokenization.
public type Token record {
    Bank_account bank_account?;
    Card card?;
    # IP address of the client that generates the token.
    string? client_ip?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "token" 'object;
    # Type of the token: `account`, `bank_account`, `card`, or `pii`.
    @constraint:String {maxLength: 5000}
    string 'type;
    # Determines if you have already used this token (you can only use tokens once).
    boolean used;
};

# 
public type Legal_entity_company_verification_document record {
    # The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.
    string|File? back?;
    # A user-displayable string describing the verification state of this document.
    string? details?;
    # One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document.
    string? details_code?;
    # The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.
    string|File? front?;
};

# 
public type Payment_intent_next_action_redirect_to_url record {
    # If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
    string? return_url?;
    # The URL you must redirect your customer to in order to authenticate the payment.
    string? url?;
};

# If provided, this hash will be used to create a PaymentMethod.
public type payment_method_data_params_2 record {
    payment_method_param acss_debit?;
    record {} affirm?;
    record {} afterpay_clearpay?;
    record {} alipay?;
    "always"|"limited"|"unspecified" allow_redisplay?;
    record {} amazon_pay?;
    param_4 au_becs_debit?;
    param_5 bacs_debit?;
    record {} bancontact?;
    billing_details_inner_params billing_details?;
    record {} blik?;
    param_6 boleto?;
    record {} cashapp?;
    record {} customer_balance?;
    param_7 eps?;
    param_8 fpx?;
    record {} giropay?;
    record {} grabpay?;
    param_9 ideal?;
    record {} interac_present?;
    param_10 klarna?;
    record {} konbini?;
    record {} link?;
    record {|string...;|} metadata?;
    record {} mobilepay?;
    record {} multibanco?;
    record {} oxxo?;
    param_11 p24?;
    record {} paynow?;
    record {} paypal?;
    record {} pix?;
    record {} promptpay?;
    radar_options_with_hidden_options_1 radar_options?;
    record {} revolut_pay?;
    param_12 sepa_debit?;
    param_13 sofort?;
    record {} swish?;
    record {} twint?;
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    payment_method_param_1 us_bank_account?;
    record {} wechat_pay?;
    record {} zip?;
};

# When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)
# value in the SetupIntent.
public type payment_method_data_params_1 record {
    payment_method_param acss_debit?;
    record {} affirm?;
    record {} afterpay_clearpay?;
    record {} alipay?;
    "always"|"limited"|"unspecified" allow_redisplay?;
    record {} amazon_pay?;
    param_4 au_becs_debit?;
    param_5 bacs_debit?;
    record {} bancontact?;
    billing_details_inner_params billing_details?;
    record {} blik?;
    param_6 boleto?;
    record {} cashapp?;
    record {} customer_balance?;
    param_7 eps?;
    param_8 fpx?;
    record {} giropay?;
    record {} grabpay?;
    param_9 ideal?;
    record {} interac_present?;
    param_10 klarna?;
    record {} konbini?;
    record {} link?;
    record {|string...;|} metadata?;
    record {} mobilepay?;
    record {} multibanco?;
    record {} oxxo?;
    param_11 p24?;
    record {} paynow?;
    record {} paypal?;
    record {} pix?;
    record {} promptpay?;
    radar_options_with_hidden_options_1 radar_options?;
    record {} revolut_pay?;
    param_12 sepa_debit?;
    param_13 sofort?;
    record {} swish?;
    record {} twint?;
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    payment_method_param_1 us_bank_account?;
    record {} wechat_pay?;
    record {} zip?;
};

public type transfer_data_specs_2 record {
    decimal amount_percent?;
    string destination;
};

# If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.
public type transfer_data_specs_3 record {
    decimal amount_percent?;
    string destination;
};

# An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
public type transfer_data_specs_1 record {
    int amount?;
};

# 
public type Connect_embedded_base_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_base_features features;
};

public type session_expire_body record {|
    # Specifies which fields in the response should be expanded.
    session_expire_bodyExpandItemsString[] expand?;
|};

# If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge.
public type transfer_data_specs_4 record {
    int amount?;
    string destination;
};

# 
public type Dispute_evidence_details record {
    # Date by which evidence must be submitted in order to successfully challenge dispute. Will be 0 if the customer's bank or credit card company doesn't allow a response for this particular dispute.
    int? due_by?;
    # Whether evidence has been staged for this dispute.
    boolean has_evidence;
    # Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.
    boolean past_due;
    # The number of times evidence has been submitted. Typically, you may only submit evidence once.
    int submission_count;
};

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsAccountsAccountOwnersQueriesExpandItemsString string;

# 
public type Payment_pages_checkout_session_tax_id_collection record {
    # Indicates whether tax ID collection is enabled for the session
    boolean enabled;
};

public type TiersItemsObject record {
    int flat_amount?;
    string flat_amount_decimal?;
    int unit_amount?;
    string unit_amount_decimal?;
    "inf"|int up_to;
};

# Represents the Queries record for the operation: GetBillingMetersIdEventSummaries
public type GetBillingMetersIdEventSummariesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The timestamp from when to start aggregating meter events (inclusive). Must be aligned with minute boundaries.
    int start_time;
    # Specifies which fields in the response should be expanded.
    GetBillingMetersIdEventSummariesQueriesExpandItemsString[] expand?;
    # Specifies what granularity to use when generating event summaries. If not specified, a single event summary would be returned for the specified time range. For hourly granularity, start and end times must align with hour boundaries (e.g., 00:00, 01:00, ..., 23:00). For daily granularity, start and end times must align with UTC day boundaries (00:00 UTC).
    "day"|"hour" value_grouping_window?;
    # The timestamp from when to stop aggregating meter events (exclusive). Must be aligned with minute boundaries.
    int end_time;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The customer for which to fetch event summaries.
    @constraint:String {maxLength: 5000}
    string customer;
};

# 
public type Payment_intent_next_action_cashapp_qr_code record {
    # The date (unix timestamp) when the QR code expires.
    int expires_at;
    # The image_url_png string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_png;
    # The image_url_svg string used to render QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg;
};

public type Payment_source Account|Bank_account|Card|Source;

public type entitlements_features_bodyExpandItemsString string;

public type subscription_details_params_1 record {
    "now"|"unchanged"|int billing_cycle_anchor?;
    int|"" cancel_at?;
    boolean cancel_at_period_end?;
    boolean cancel_now?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    subscription_item_update_params[] items?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int proration_date?;
    "now" resume_at?;
    int start_date?;
    "now"|int trial_end?;
};

# 
public type Issuing_transaction_fuel_data record {
    # [Conexxus Payment System Product Code](https://www.conexxus.org/conexxus-payment-system-product-codes) identifying the primary fuel product purchased.
    string? industry_product_code?;
    # The quantity of `unit`s of fuel that was dispensed, represented as a decimal string with at most 12 decimal places.
    string? quantity_decimal?;
    # The type of fuel that was purchased. One of `diesel`, `unleaded_plus`, `unleaded_regular`, `unleaded_super`, or `other`.
    @constraint:String {maxLength: 5000}
    string 'type;
    # The units for `quantity_decimal`. One of `charging_minute`, `imperial_gallon`, `kilogram`, `kilowatt_hour`, `liter`, `pound`, `us_gallon`, or `other`.
    @constraint:String {maxLength: 5000}
    string unit;
    # The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.
    string unit_cost_decimal;
};

public type linked_flows_param record {
    "credit_reversal"|"other"|"outbound_payment"|"payout" source_flow_type;
};

# The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription
# should be paused.
public type Subscriptions_resource_pause_collection record {
    # The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.
    "keep_as_draft"|"mark_uncollectible"|"void" behavior;
    # The time after which the subscription will resume collecting payments.
    int? resumes_at?;
};

# 
public type Dispute_evidence record {
    # Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
    string? access_activity_log?;
    # The billing address provided by the customer.
    string? billing_address?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.
    string|File? cancellation_policy?;
    # An explanation of how and when the customer was shown your refund policy prior to purchase.
    string? cancellation_policy_disclosure?;
    # A justification for why the customer's subscription was not canceled.
    string? cancellation_rebuttal?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.
    string|File? customer_communication?;
    # The email address of the customer.
    string? customer_email_address?;
    # The name of the customer.
    string? customer_name?;
    # The IP address that the customer used when making the purchase.
    string? customer_purchase_ip?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.
    string|File? customer_signature?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
    string|File? duplicate_charge_documentation?;
    # An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
    string? duplicate_charge_explanation?;
    # The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
    string? duplicate_charge_id?;
    # A description of the product or service that was sold.
    string? product_description?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.
    string|File? receipt?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.
    string|File? refund_policy?;
    # Documentation demonstrating that the customer was shown your refund policy prior to purchase.
    string? refund_policy_disclosure?;
    # A justification for why the customer is not entitled to a refund.
    string? refund_refusal_explanation?;
    # The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
    string? service_date?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.
    string|File? service_documentation?;
    # The address to which a physical product was shipped. You should try to include as complete address information as possible.
    string? shipping_address?;
    # The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.
    string? shipping_carrier?;
    # The date on which a physical product began its route to the shipping address, in a clear human-readable format.
    string? shipping_date?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.
    string|File? shipping_documentation?;
    # The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    string? shipping_tracking_number?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.
    string|File? uncategorized_file?;
    # Any additional evidence or statements.
    string? uncategorized_text?;
};

public type Deleted_payment_source Deleted_bank_account|Deleted_card;

# Represents the Queries record for the operation: GetSourcesSourceSourceTransactions
public type GetSourcesSourceSourceTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceSourceTransactionsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type subscription_details_params_2 record {
    "now"|"unchanged"|int billing_cycle_anchor?;
    int|"" cancel_at?;
    boolean cancel_at_period_end?;
    boolean cancel_now?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    subscription_item_update_params[] items?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int proration_date?;
    "now" resume_at?;
    int start_date?;
    "now"|int trial_end?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardsCardQueriesExpandItemsString string;

public type invoices_create_preview_body record {|
    automatic_tax_param_1 automatic_tax?;
    # The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # The currency to preview this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    @constraint:String {maxLength: 5000}
    string customer?;
    customer_details_param customer_details?;
    # The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    invoices_create_preview_bodyExpandItemsString[] expand?;
    # List of invoice items to add or update in the upcoming invoice preview.
    invoice_item_preview_params[] invoice_items?;
    param_1 issuer?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    string|"" on_behalf_of?;
    # Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.
    "next"|"recurring" preview_mode?;
    # The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    @constraint:String {maxLength: 5000}
    string schedule?;
    schedule_details_params schedule_details?;
    # The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    @constraint:String {maxLength: 5000}
    string subscription?;
    subscription_details_params subscription_details?;
|};

public type tax_ids_body record {|
    # Specifies which fields in the response should be expanded.
    tax_ids_bodyExpandItemsString[] expand?;
    owner_params_1 owner?;
    # Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # Value of the tax ID.
    string value;
|};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountBankAccountsIdQueriesExpandItemsString string;

public type invoice_list_param record {
    boolean enabled;
};

# 
public type Custom_unit_amount record {
    # The maximum unit amount the customer can specify for this item.
    int? maximum?;
    # The minimum unit amount the customer can specify for this item. Must be at least the minimum charge amount.
    int? minimum?;
    # The starting unit amount which can be updated by the customer.
    int? preset?;
};

# Toggle settings for enabling/disabling an ACH specific feature
public type Treasury_financial_accounts_resource_ach_toggle_settings record {
    # Whether the FinancialAccount should have the Feature.
    boolean requested;
    # Whether the Feature is operational.
    "active"|"pending"|"restricted" status;
    # Additional details; includes at least one entry when the status is not `active`.
    Treasury_financial_accounts_resource_toggles_setting_status_details[] status_details;
};

public type billing_portal_sessions_body record {|
    # The ID of an existing [configuration](https://stripe.com/docs/api/customer_portal/configuration) to use for this session, describing its functionality and features. If not specified, the session uses the default configuration.
    @constraint:String {maxLength: 5000}
    string configuration?;
    # The ID of an existing customer.
    @constraint:String {maxLength: 5000}
    string customer;
    # Specifies which fields in the response should be expanded.
    billing_portal_sessions_bodyExpandItemsString[] expand?;
    flow_data_param flow_data?;
    # The IETF language tag of the locale customer portal is displayed in. If blank or auto, the customer’s `preferred_locales` or browser’s locale is used.
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-AU"|"en-CA"|"en-GB"|"en-IE"|"en-IN"|"en-NZ"|"en-SG"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW" locale?;
    # The `on_behalf_of` account to use for this session. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays.
    string on_behalf_of?;
    # The default URL to redirect customers to when they click on the portal's link to return to your website.
    string return_url?;
|};

# 
public type Application record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The name of the application.
    string? name?;
    # String representing the object's type. Objects of the same type share the same value.
    "application" 'object;
};

# 
public type Account_capability_future_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on the capability's enablement state prior to transitioning.
    int? current_deadline?;
    # Fields that need to be collected to keep the capability enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.
    Account_capability_future_requirementsCurrentlydueItemsString[] currently_due;
    # This is typed as an enum for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is null because fields in `future_requirements` will never disable the account.
    "other"|"paused.inactivity"|"pending.onboarding"|"pending.review"|"platform_disabled"|"platform_paused"|"rejected.inactivity"|"rejected.other"|"rejected.unsupported_business"|"requirements.fields_needed"? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.
    Account_capability_future_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.
    Account_capability_future_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_capability_future_requirementsPendingverificationItemsString[] pending_verification;
};

public type ephemeral_keys_body record {|
    # The ID of the Customer you'd like to modify using the resulting ephemeral key.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    ephemeral_keys_bodyExpandItemsString[] expand?;
    # The ID of the Issuing Card you'd like to access using the resulting ephemeral key.
    @constraint:String {maxLength: 5000}
    string issuing_card?;
    # A single-use token, created by Stripe.js, used for creating ephemeral keys for Issuing Cards without exchanging sensitive information.
    @constraint:String {maxLength: 5000}
    string nonce?;
    # The ID of the Identity VerificationSession you'd like to access using the resulting ephemeral key
    @constraint:String {maxLength: 5000}
    string verification_session?;
|};

public type fleet_reported_breakdown_fuel_specs record {
    string gross_amount_decimal?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionsSearchQueriesExpandItemsString string;

# 
public type Payment_flows_installment_options record {
    boolean enabled;
    Payment_method_details_card_installments_plan plan?;
};

# A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
# It contains information about when the discount began, when it will end, and what it is applied to.
# 
# Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
public type Discount record {
    # The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
    string? checkout_session?;
    Coupon coupon;
    # The ID of the customer associated with this discount.
    string|Customer|Deleted_customer? customer?;
    # If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.
    int? end?;
    # The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.
    string? invoice?;
    # The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
    string? invoice_item?;
    # String representing the object's type. Objects of the same type share the same value.
    "discount" 'object;
    # The promotion code applied to create this discount.
    string|Promotion_code? promotion_code?;
    # Date that the coupon was applied.
    int 'start;
    # The subscription that this coupon is applied to, if it is applied to a particular subscription.
    string? subscription?;
    # The subscription item that this coupon is applied to, if it is applied to a particular subscription item.
    string? subscription_item?;
};

# 
public type Payment_links_resource_restrictions record {
    Payment_links_resource_completed_sessions completed_sessions;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBalanceTransactionsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryOutboundTransfers
public type GetTreasuryOutboundTransfersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundTransfersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`.
    "canceled"|"failed"|"posted"|"processing"|"returned" status?;
};

@constraint:String {maxLength: 5000}
public type GetSourcesSourceMandateNotificationsMandateNotificationQueriesExpandItemsString string;

# The account or customer the tax ID belongs to. Defaults to `owner[type]=self`.
public type owner_params_1 record {
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
    "account"|"application"|"customer"|"self" 'type;
};

public type Deleted_radar\.value_list_item record {
    true deleted;
    string id;
    "radar.value_list_item" 'object;
};

# 
public type Payment_method_details_p24 record {
    # The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `velobank`, `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`, `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`, `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.
    "alior_bank"|"bank_millennium"|"bank_nowy_bfg_sa"|"bank_pekao_sa"|"banki_spbdzielcze"|"blik"|"bnp_paribas"|"boz"|"citi_handlowy"|"credit_agricole"|"envelobank"|"etransfer_pocztowy24"|"getin_bank"|"ideabank"|"ing"|"inteligo"|"mbank_mtransfer"|"nest_przelew"|"noble_pay"|"pbac_z_ipko"|"plus_bank"|"santander_przelew24"|"tmobile_usbugi_bankowe"|"toyota_bank"|"velobank"|"volkswagen_bank"? bank?;
    # Unique reference for this Przelewy24 payment.
    string? reference?;
    # Owner's verified full name. Values are verified or provided by Przelewy24 directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    # Przelewy24 rarely provides this information so the attribute is usually empty.
    string? verified_name?;
};

public type refunds_body record {|
    int amount?;
    # The identifier of the charge to refund.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Customer whose customer balance to refund from.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    refunds_bodyExpandItemsString[] expand?;
    # For payment methods without native refund support (e.g., Konbini, PromptPay), use this email from the customer to receive refund instructions.
    string instructions_email?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Origin of the refund
    "customer_balance" origin?;
    # The identifier of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # String indicating the reason for the refund. If set, possible values are `duplicate`, `fraudulent`, and `requested_by_customer`. If you believe the charge to be fraudulent, specifying `fraudulent` as the reason will add the associated card and email to your [block lists](https://stripe.com/docs/radar/lists), and will also help us improve our fraud detection algorithms.
    "duplicate"|"fraudulent"|"requested_by_customer" reason?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount).<br><br>A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

@constraint:String {maxLength: 5000}
public type GetSetupAttemptsQueriesExpandItemsString string;

# [Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a
# connected account, either entirely or partially, and can also specify whether
# to refund any related application fees. Transfer reversals add to the
# platform's balance and subtract from the destination account's balance.
# 
# Reversing a transfer that was made for a [destination
# charge](/docs/connect/destination-charges) is allowed only up to the amount of
# the charge. It is possible to reverse a
# [transfer_group](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)
# transfer only if the destination account has enough balance to cover the
# reversal.
# 
# Related guide: [Reverse transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#reverse-transfers)
public type Transfer_reversal record {
    # Amount, in cents (or local equivalent).
    int amount;
    # Balance transaction that describes the impact on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Linked payment refund for the transfer reversal.
    string|Refund? destination_payment_refund?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "transfer_reversal" 'object;
    # ID of the refund responsible for the transfer reversal.
    string|Refund? source_refund?;
    # ID of the transfer that was reversed.
    string|Transfer transfer;
};

public type payment_method_reuse_agreement_params record {
    "auto"|"hidden" position;
};

@constraint:String {maxLength: 5000}
public type GetEntitlementsActiveEntitlementsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetBillingMetersId
public type GetBillingMetersIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetBillingMetersIdQueriesExpandItemsString[] expand?;
};

public type sources_body record {|
    # Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources. Not supported for `receiver` type sources, where charge amount may not be specified until funds land.
    int amount?;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready.
    string currency?;
    # The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`).
    @constraint:String {maxLength: 500}
    string customer?;
    # Specifies which fields in the response should be expanded.
    sources_bodyExpandItemsString[] expand?;
    # The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.
    "code_verification"|"none"|"receiver"|"redirect" flow?;
    mandate_params mandate?;
    record {|string...;|} metadata?;
    # The source to share.
    @constraint:String {maxLength: 5000}
    string original_source?;
    owner_1 owner?;
    receiver_params receiver?;
    redirect_params redirect?;
    shallow_order_specs source_order?;
    # An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all.
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
    # An optional token used to create the source. When passed, token properties will override source parameters.
    @constraint:String {maxLength: 5000}
    string token?;
    # The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Cloning card Sources](https://stripe.com/docs/sources/connect#cloning-card-sources) guide)
    @constraint:String {maxLength: 5000}
    string 'type?;
    "reusable"|"single_use" usage?;
|};

public type promotion_codes_body record {|
    # Whether the promotion code is currently active.
    boolean active?;
    # The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. If left blank, we will generate one automatically.
    @constraint:String {maxLength: 500}
    string code?;
    # The coupon for this promotion code.
    @constraint:String {maxLength: 5000}
    string coupon;
    # The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Specifies which fields in the response should be expanded.
    promotion_codes_bodyExpandItemsString[] expand?;
    # The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon's `redeems_by`.
    int expires_at?;
    # A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon's `max_redemptions`.
    int max_redemptions?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    restrictions_params_1 restrictions?;
|};

# 
public type Source_transaction_sepa_credit_transfer_data record {
    # Reference associated with the transfer.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Sender's bank account IBAN.
    @constraint:String {maxLength: 5000}
    string sender_iban?;
    # Sender's name.
    @constraint:String {maxLength: 5000}
    string sender_name?;
};

# Details about a returned OutboundTransfer.
public type returned_details_params_1 record {
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code?;
};

# 
public type Payment_flows_automatic_payment_methods_setup_intent record {
    # Controls whether this SetupIntent will accept redirect-based payment methods.
    # 
    # Redirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/setup_intents/confirm) this SetupIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the setup.
    "always"|"never" allow_redirects?;
    # Automatically calculates compatible payment methods
    boolean? enabled?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardholdersCardholderQueriesExpandItemsString string;

public type charges_body record {|
    # Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount?;
    int application_fee?;
    # A fee in cents (or local equivalent) that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/connect/direct-charges#collect-fees).
    int application_fee_amount?;
    # Whether to immediately capture the charge. Defaults to `true`. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](https://stripe.com/docs/api#capture_charge) later. Uncaptured charges expire after a set number of days (7 by default). For more information, see the [authorizing charges and settling later](https://stripe.com/docs/charges/placing-a-hold) documentation.
    boolean capture?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # The ID of an existing customer that will be charged in this request.
    @constraint:String {maxLength: 500}
    string customer?;
    # An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.
    @constraint:String {maxLength: 40000}
    string description?;
    record {string account; int amount?;}|string destination?;
    # Specifies which fields in the response should be expanded.
    charges_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant).
    @constraint:String {maxLength: 5000}
    string on_behalf_of?;
    radar_options_with_hidden_options radar_options?;
    # The email address to which this charge's [receipt](https://stripe.com/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a [Customer](https://stripe.com/docs/api/customers/object), the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string receipt_email?;
    optional_fields_shipping shipping?;
    # A payment source to be charged. This can be the ID of a [card](https://stripe.com/docs/api#cards) (i.e., credit or debit card), a [bank account](https://stripe.com/docs/api#bank_accounts), a [source](https://stripe.com/docs/api#sources), a [token](https://stripe.com/docs/api#tokens), or a [connected account](https://stripe.com/docs/connect/account-debits#charging-a-connected-account). For certain sources---namely, [cards](https://stripe.com/docs/api#cards), [bank accounts](https://stripe.com/docs/api#bank_accounts), and attached [sources](https://stripe.com/docs/api#sources)---you must also pass the ID of the associated customer.
    @constraint:String {maxLength: 5000}
    string 'source?;
    # For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_specs transfer_data?;
    # A string that identifies this transaction as part of a group. For details, see [Grouping transactions](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options).
    string transfer_group?;
|};

@constraint:String {maxLength: 5000}
public type GetPlansPlanQueriesExpandItemsString string;

# 
public type Person_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.
    Person_requirementsCurrentlydueItemsString[] currently_due;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[] errors;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.
    Person_requirementsEventuallydueItemsString[] eventually_due;
    # Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.
    Person_requirementsPastdueItemsString[] past_due;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    Person_requirementsPendingverificationItemsString[] pending_verification;
};

# Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https://stripe.com/docs/payments/cash-app-pay) for more details.
public type payment_method_param_16 record {
    display_preference_param display_preference?;
};

public type custom_field_numeric_param record {
    @constraint:String {maxLength: 255}
    string default_value?;
    int maximum_length?;
    int minimum_length?;
};

# Uses a customer’s [cash balance](https://stripe.com/docs/payments/customer-balance) for the payment. The cash balance can be funded via a bank transfer. Check this [page](https://stripe.com/docs/payments/bank-transfers) for more details.
public type payment_method_param_17 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetChargesChargeDispute
public type GetChargesChargeDisputeQueries record {
    # Specifies which fields in the response should be expanded.
    GetChargesChargeDisputeQueriesExpandItemsString[] expand?;
};

public type billing_meters_body record {|
    customer_mapping_param customer_mapping?;
    aggregation_settings_param default_aggregation;
    # The meter's name.
    @constraint:String {maxLength: 250}
    string display_name;
    # The name of the meter event to record usage for. Corresponds with the `event_name` field on meter events.
    @constraint:String {maxLength: 100}
    string event_name;
    # The time window to pre-aggregate meter events for, if any.
    "day"|"hour" event_time_window?;
    # Specifies which fields in the response should be expanded.
    billing_meters_bodyExpandItemsString[] expand?;
    meter_value_settings_param value_settings?;
|};

# EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https://stripe.com/docs/payments/eps) for more details.
public type payment_method_param_18 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetIssuingTokens
public type GetIssuingTokensQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingTokensQueriesExpandItemsString[] expand?;
    # Only return Issuing tokens that were created during the given date interval.
    created_21 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # The Issuing card identifier to list tokens for.
    @constraint:String {maxLength: 5000}
    string card;
    # Select Issuing tokens with the given status.
    "active"|"deleted"|"requested"|"suspended" status?;
};

# Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https://stripe.com/docs/payments/fpx) for more details.
public type payment_method_param_19 record {
    display_preference_param display_preference?;
};

# BLIK is a [single use](https://stripe.com/docs/payments/payment-methods#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https://stripe.com/docs/payments/blik) for more details.
public type payment_method_param_12 record {
    display_preference_param display_preference?;
};

public type eu_bank_account_params record {
    @constraint:String {maxLength: 5000}
    string country;
};

# Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https://stripe.com/docs/payments/boleto) for more details.
public type payment_method_param_13 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetPaymentMethodDomainsPaymentMethodDomain
public type GetPaymentMethodDomainsPaymentMethodDomainQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodDomainsPaymentMethodDomainQueriesExpandItemsString[] expand?;
};

# 
public type Subscription_details_data record {
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) defined as subscription metadata when an invoice is created. Becomes an immutable snapshot of the subscription metadata at the time of invoice finalization.
    #  *Note: This attribute is populated only for invoices created on or after June 29, 2023.*
    record {|string...;|}? metadata?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionsQueriesExpandItemsString string;

# Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.
public type payment_method_param_14 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetRadarEarlyFraudWarnings
public type GetRadarEarlyFraudWarningsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetRadarEarlyFraudWarningsQueriesExpandItemsString[] expand?;
    # Only return early fraud warnings for the charge specified by this charge ID.
    string charge?;
    # Only return early fraud warnings that were created during the given date interval.
    created_29 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return early fraud warnings for charges that were created by the PaymentIntent specified by this PaymentIntent ID.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type subscription_items_item_body_1 record {|
    # Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`.
    boolean clear_usage?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    # If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.
    int proration_date?;
|};

# Cartes Bancaires is France's local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https://stripe.com/docs/payments/cartes-bancaires) for more details.
public type payment_method_param_15 record {
    display_preference_param display_preference?;
};

# Represents the Queries record for the operation: GetInvoicesInvoice
public type GetInvoicesInvoiceQueries record {
    # Specifies which fields in the response should be expanded.
    GetInvoicesInvoiceQueriesExpandItemsString[] expand?;
};

public type setup_intent_payment_method_options_mandate_options_param record {
    string|"" custom_mandate_url?;
    ("invoice"|"subscription")[] default_for?;
    @constraint:String {maxLength: 500}
    string interval_description?;
    "combined"|"interval"|"sporadic" payment_schedule?;
    "business"|"personal" transaction_type?;
};

# 
public type Issuing_authorization_merchant_data record {
    # A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.
    @constraint:String {maxLength: 5000}
    string category;
    # The merchant category code for the seller’s business
    @constraint:String {maxLength: 5000}
    string category_code;
    # City where the seller is located
    string? city?;
    # Country where the seller is located
    string? country?;
    # Name of the seller
    string? name?;
    # Identifier assigned to the seller by the card network. Different card networks may assign different network_id fields to the same merchant.
    @constraint:String {maxLength: 5000}
    string network_id;
    # Postal code where the seller is located
    string? postal_code?;
    # State where the seller is located
    string? state?;
    # An ID assigned by the seller to the location of the sale.
    string? terminal_id?;
    # URL provided by the merchant on a 3DS request
    string? url?;
};

# Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https://stripe.com/docs/payments/payment-methods/bacs-debit) for more details.
public type payment_method_param_10 record {
    display_preference_param display_preference?;
};

# Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https://stripe.com/docs/api/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https://stripe.com/docs/payments/bancontact) for more details.
public type payment_method_param_11 record {
    display_preference_param display_preference?;
};

# 
public type Setup_intent_payment_method_options_mandate_options_sepa_debit record {
};

# A subset of parameters to be passed to subscription creation for Checkout Sessions in `subscription` mode.
public type subscription_data_params record {
    decimal application_fee_percent?;
    int billing_cycle_anchor?;
    subscription_data_paramsDefaulttaxratesItemsString[] default_tax_rates?;
    @constraint:String {maxLength: 500}
    string description?;
    invoice_settings_params invoice_settings?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "create_prorations"|"none" proration_behavior?;
    transfer_data_specs_2 transfer_data?;
    int trial_end?;
    int trial_period_days?;
    trial_settings_config trial_settings?;
};

# Represents the Queries record for the operation: GetTerminalConfigurationsConfiguration
public type GetTerminalConfigurationsConfigurationQueries record {
    # Specifies which fields in the response should be expanded.
    GetTerminalConfigurationsConfigurationQueriesExpandItemsString[] expand?;
};

public type configurations_configuration_body record {|
    # Whether the configuration is active and can be used to create portal sessions.
    boolean active?;
    business_profile_update_param business_profile?;
    # The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.
    string|"" default_return_url?;
    # Specifies which fields in the response should be expanded.
    configurations_configuration_bodyExpandItemsString[] expand?;
    features_updating_param features?;
    login_page_update_param login_page?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

public type id_verify_body record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # Specifies which fields in the response should be expanded.
    id_verify_bodyExpandItemsString[] expand?;
|};

# The individual line items that make up the invoice. `lines` is sorted as follows: (1) pending invoice items (including prorations) in reverse chronological order, (2) subscription items in reverse chronological order, and (3) invoice items added after invoice creation in chronological order.
public type InvoiceLinesList_1 record {
    # Details about each object.
    Line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# [Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and services for tax purposes.
public type Tax_code record {
    # A detailed description of which types of products the tax code represents.
    @constraint:String {maxLength: 5000}
    string description;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # A short name for the tax code.
    @constraint:String {maxLength: 5000}
    string name;
    # String representing the object's type. Objects of the same type share the same value.
    "tax_code" 'object;
};

public type cards_id_body_1ExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Setup_intentPaymentmethodtypesItemsString string;

public type financial_account_features_body record {|
    access_1 card_issuing?;
    access_2 deposit_insurance?;
    # Specifies which fields in the response should be expanded.
    financial_account_features_bodyExpandItemsString[] expand?;
    financial_addresses_1 financial_addresses?;
    inbound_transfers_1 inbound_transfers?;
    access_3 intra_stripe_flows?;
    outbound_payments_1 outbound_payments?;
    outbound_transfers_1 outbound_transfers?;
|};

public type outbound_transfers_outbound_transfer_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetRadarEarlyFraudWarningsEarlyFraudWarningQueriesExpandItemsString string;

public type authorization_controls_paramBlockedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# [Link](https://stripe.com/docs/payments/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.
public type payment_method_param_27 record {
    display_preference_param display_preference?;
};

# MobilePay is a [single-use](https://stripe.com/docs/payments/payment-methods#usage) card wallet payment method used in Denmark and Finland. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the MobilePay app. Check this [page](https://stripe.com/docs/payments/mobilepay) for more details.
public type payment_method_param_28 record {
    display_preference_param display_preference?;
};

# Stripe users in Europe and the United States can accept Multibanco payments from customers in Portugal using [Sources](https://stripe.com/docs/sources)—a single integration path for creating payments using any supported method.
public type payment_method_param_29 record {
    display_preference_param display_preference?;
};

@constraint:String {maxLength: 5000}
public type GetSubscriptionsSubscriptionExposedIdQueriesExpandItemsString string;

# iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https://stripe.com/docs/payments/ideal) for more details.
public type payment_method_param_23 record {
    display_preference_param display_preference?;
};

# JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https://support.stripe.com/questions/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.
public type payment_method_param_24 record {
    display_preference_param display_preference?;
};

# Klarna gives customers a range of [payment options](https://stripe.com/docs/payments/klarna#payment-options) during checkout. Available payment options vary depending on the customer's billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https://stripe.com/docs/payments/klarna) for more details.
public type payment_method_param_25 record {
    display_preference_param display_preference?;
};

# Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https://stripe.com/docs/payments/konbini) for more details.
public type payment_method_param_26 record {
    display_preference_param display_preference?;
};

# giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https://stripe.com/docs/payments/giropay) for more details.
public type payment_method_param_20 record {
    display_preference_param display_preference?;
};

public type phase_configuration_params_1 record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_2 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int|"now" end_date?;
    invoice_settings_1 invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int|"now" start_date?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int|"now" trial_end?;
};

public type phase_configuration_params_2 record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_3 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int|"now" end_date?;
    invoice_settings_2 invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int|"now" start_date?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int|"now" trial_end?;
};

# Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer's Google account. Check this [page](https://stripe.com/docs/google-pay) for more details.
public type payment_method_param_21 record {
    display_preference_param display_preference?;
};

public type Checkout\.sessionPaymentmethodtypesItemsString string;

public type currency_option_update record {
    int amount?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
};

public type phase_configuration_params_3 record {
    add_invoice_item_entry[] add_invoice_items?;
    decimal application_fee_percent?;
    automatic_tax_config_3 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string coupon?;
    string currency?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    string|"" description?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    int end_date?;
    invoice_settings_2 invoice_settings?;
    configuration_item_params[] items;
    int iterations?;
    record {|string...;|} metadata?;
    string on_behalf_of?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    transfer_data_specs_2 transfer_data?;
    boolean trial?;
    int trial_end?;
};

# GrabPay is a payment method developed by [Grab](https://www.grab.com/sg/consumer/finance/pay/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https://stripe.com/docs/payments/grabpay) for more details.
public type payment_method_param_22 record {
    display_preference_param display_preference?;
};

# 
public type Portal_subscription_cancel record {
    Portal_subscription_cancellation_reason cancellation_reason;
    # Whether the feature is enabled.
    boolean enabled;
    # Whether to cancel subscriptions immediately or at the end of the billing period.
    "at_period_end"|"immediately" mode;
    # Whether to create prorations when canceling subscriptions. Possible values are `none` and `create_prorations`.
    "always_invoice"|"create_prorations"|"none" proration_behavior;
};

@constraint:String {maxLength: 5000}
public type GetPaymentIntentsSearchQueriesExpandItemsString string;

public type charge_dispute_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_requirements_alternativeOriginalfieldsdueItemsString string;

# Represents the Queries record for the operation: GetTerminalReaders
public type GetTerminalReadersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTerminalReadersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Filters readers by device type
    "bbpos_chipper2x"|"bbpos_wisepad3"|"bbpos_wisepos_e"|"mobile_phone_reader"|"simulated_wisepos_e"|"stripe_m2"|"verifone_P400" device_type?;
    # A location ID to filter the response list to only readers at the specific location
    @constraint:String {maxLength: 5000}
    string location?;
    # Filters readers by serial number
    @constraint:String {maxLength: 5000}
    string serial_number?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A status filter to filter readers to only offline or online readers
    "offline"|"online" status?;
};

public type issuing_authorizations_body record {|
    # The total amount to attempt to authorize. This amount is in the provided currency, or defaults to the card's currency, and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    amount_details_specs amount_details?;
    # How the card details were provided. Defaults to online.
    "chip"|"contactless"|"keyed_in"|"online"|"swipe" authorization_method?;
    # Card associated with this authorization.
    @constraint:String {maxLength: 5000}
    string card;
    # The currency of the authorization. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    issuing_authorizations_bodyExpandItemsString[] expand?;
    fleet_specs fleet?;
    fuel_specs fuel?;
    # If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    boolean is_amount_controllable?;
    merchant_data_specs merchant_data?;
    network_data_specs network_data?;
    verification_data_specs verification_data?;
    # The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized.
    "apple_pay"|"google_pay"|"samsung_pay" wallet?;
|};

@constraint:String {maxLength: 5000}
public type GetTerminalLocationsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentMethodsQueriesExpandItemsString string;

# The customer's current subscriptions, if any.
public type SubscriptionList_1 record {
    # Details about each object.
    Subscription[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Portal_flows_after_completion_hosted_confirmation record {
    # A custom message to display to the customer after the flow is completed.
    string? custom_message?;
};

# 
public type CustomerResourceCustomerList record {
    Customer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/customers`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCouponsQueriesExpandItemsString string;

# The person's registered address.
public type address_specs_1 record {
    @constraint:String {maxLength: 100}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 200}
    string line1?;
    @constraint:String {maxLength: 200}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerBalanceTransactionsTransactionQueriesExpandItemsString string;

# Swish is a [real-time](https://stripe.com/docs/payments/real-time) payment method popular in Sweden. It allows customers to [authenticate and approve](https://stripe.com/docs/payments/payment-methods#customer-actions) payments using the Swish mobile app and the Swedish BankID mobile app. Check this [page](https://stripe.com/docs/payments/swish) for more details.
public type payment_method_param_38 record {
    display_preference_param display_preference?;
};

# 
public type Payment_method_interac_present record {
    # Card brand. Can be `interac`, `mastercard` or `visa`.
    string? brand?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # The last four digits of the card.
    string? last4?;
    # Contains information about card networks that can be used to process the payment.
    Payment_method_card_present_networks? networks?;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_interac_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
};

# Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https://stripe.com/docs/payments/ach-debit) for more details.
public type payment_method_param_39 record {
    display_preference_param display_preference?;
};

# PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https://stripe.com/docs/payments/promptpay) for more details.
public type payment_method_param_34 record {
    display_preference_param display_preference?;
};

public type inline_response_200_5 Terminal\.reader|Deleted_terminal\.reader;

# Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.
public type payment_method_param_35 record {
    display_preference_param display_preference?;
};

# The [Single Euro Payments Area (SEPA)](https://en.wikipedia.org/wiki/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https://stripe.com/docs/payments/sepa-debit) for more details.
public type payment_method_param_36 record {
    display_preference_param display_preference?;
};

public type shipping_fail_body record {|
    # Specifies which fields in the response should be expanded.
    shipping_fail_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetClimateProductsQueriesExpandItemsString string;
