// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;

public type person_documents_specs_1 record {
    documents_param_1 company_authorization?;
    documents_param_1 passport?;
    documents_param_1 visa?;
};

public type created_9 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_7 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_8 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type treasury_financial_accounts_bodySupportedcurrenciesItemsString string;

public type Deleted_radar\.value_list record {
    true deleted;
    string id;
    "radar.value_list" 'object;
};

# 
public type Issuing_transaction_lodging_data record {
    # The time of checking into the lodging.
    int? check_in_at?;
    # The number of nights stayed at the lodging.
    int? nights?;
};

public type subscription_cancel_at_1 int|"";

# Controls phone number collection settings for the session.
# 
# We recommend that you review your privacy policy and check with your legal contacts
# before using this feature. Learn more about [collecting phone numbers with Checkout](https://stripe.com/docs/payments/checkout/phone-numbers).
public type phone_number_collection_params record {
    boolean enabled;
};

public type payment_method_configurations_bodyExpandItemsString string;

public type treasury_outbound_payments_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryCreditReversalsCreditReversalQueriesExpandItemsString string;

# 
public type Gelato_provided_details record {
    # Email of user being verified
    @constraint:String {maxLength: 5000}
    string email?;
    # Phone number of user being verified
    @constraint:String {maxLength: 5000}
    string phone?;
};

# 
public type Payment_flows_private_payment_methods_card_details_api_resource_multicapture record {
    # Indicates whether or not multiple captures are supported.
    "available"|"unavailable" status;
};

# 
public type Balance_detail record {
    # Funds that are available for use.
    Balance_amount[] available;
};

# Customers with certain payments enabled have a cash balance, representing funds that were paid
# by the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions
# represent when funds are moved into or out of this balance. This includes funding by the customer, allocation
# to payments, and refunds to the customer.
public type Customer_cash_balance_transaction record {
    Customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft adjusted_for_overdraft?;
    Customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction applied_to_payment?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    @constraint:String {maxLength: 5000}
    string currency;
    # The customer whose available cash balance changed as a result of this transaction.
    string|Customer customer;
    # The total available cash balance for the specified currency after this transaction was applied. Represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int ending_balance;
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction funded?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # The amount by which the cash balance changed, represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). A positive value represents funds being added to the cash balance, a negative value represents funds being removed from the cash balance.
    int net_amount;
    # String representing the object's type. Objects of the same type share the same value.
    "customer_cash_balance_transaction" 'object;
    Customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction refunded_from_payment?;
    Customer_balance_resource_cash_balance_transaction_resource_transferred_to_balance transferred_to_balance?;
    # The type of the cash balance transaction. New types may be added in future. See [Customer Balance](https://stripe.com/docs/payments/customer-balance#types) to learn more about these types.
    "adjusted_for_overdraft"|"applied_to_payment"|"funded"|"funding_reversed"|"refunded_from_payment"|"return_canceled"|"return_initiated"|"transferred_to_balance"|"unapplied_from_payment" 'type;
    Customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction unapplied_from_payment?;
};

@constraint:String {maxLength: 5000}
public type Payment_method_card_present_networksAvailableItemsString string;

# Subscriptions allow you to charge a customer on a recurring basis.
# 
# Related guide: [Creating subscriptions](https://stripe.com/docs/billing/subscriptions/creating)
public type Subscription record {
    # ID of the Connect Application that created the subscription.
    string|Application|Deleted_application? application?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account.
    decimal? application_fee_percent?;
    Subscription_automatic_tax automatic_tax;
    # The reference point that aligns future [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle) dates. It sets the day of week for `week` intervals, the day of month for `month` and `year` intervals, and the month of year for `year` intervals. The timestamp is in UTC format.
    int billing_cycle_anchor;
    # The fixed values used to calculate the `billing_cycle_anchor`.
    Subscriptions_resource_billing_cycle_anchor_config? billing_cycle_anchor_config?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
    Subscription_billing_thresholds? billing_thresholds?;
    # A date in the future at which the subscription will automatically get canceled
    int? cancel_at?;
    # If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
    boolean cancel_at_period_end;
    # If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.
    int? canceled_at?;
    # Details about why this subscription was cancelled
    Cancellation_details? cancellation_details?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
    "charge_automatically"|"send_invoice" collection_method;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
    int current_period_end;
    # Start of the current period that the subscription has been invoiced for.
    int current_period_start;
    # ID of the customer who owns the subscription.
    string|Customer|Deleted_customer customer;
    # Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.
    int? days_until_due?;
    # ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|Payment_method? default_payment_method?;
    # ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    string|Bank_account|Card|Source? default_source?;
    # The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.
    Tax_rate[]? default_tax_rates?;
    # The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    # Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    Discount? discount?;
    # The discounts applied to the subscription. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[] discounts;
    # If the subscription has ended, the date the subscription ended.
    int? ended_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Subscriptions_resource_subscription_invoice_settings invoice_settings;
    SubscriptionItemList items;
    # The most recent invoice this subscription has generated.
    string|Invoice? latest_invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.
    int? next_pending_invoice_item_invoice?;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription" 'object;
    # The account (if any) the charge was made on behalf of for charges associated with this subscription. See the Connect documentation for details.
    string|Account? on_behalf_of?;
    # If specified, payment collection for this subscription will be paused. Note that the subscription status will be unchanged and will not be updated to `paused`. Learn more about [pausing collection](/billing/subscriptions/pause-payment).
    Subscriptions_resource_pause_collection? pause_collection?;
    # Payment settings passed on to invoices created by the subscription.
    Subscriptions_resource_payment_settings? payment_settings?;
    # Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.
    Subscription_pending_invoice_item_interval? pending_invoice_item_interval?;
    # You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
    string|Setup_intent? pending_setup_intent?;
    # If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.
    Subscriptions_resource_pending_update? pending_update?;
    # The schedule attached to the subscription
    string|Subscription_schedule? schedule?;
    # Date when the subscription was first created. The date might differ from the `created` date due to backdating.
    int start_date;
    # Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, `unpaid`, or `paused`. 
    # 
    # For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this status can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` status. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal status, the open invoice will be voided and no further invoices will be generated. 
    # 
    # A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. 
    # 
    # A subscription can only enter a `paused` status [when a trial ends without a payment method](/billing/subscriptions/trials#create-free-trials-without-payment). A `paused` subscription doesn't generate invoices and can be resumed after your customer adds their payment method. The `paused` status is different from [pausing collection](/billing/subscriptions/pause-payment), which still generates invoices and leaves the subscription's status unchanged. 
    # 
    # If subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings). 
    # 
    # If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
    "active"|"canceled"|"incomplete"|"incomplete_expired"|"past_due"|"paused"|"trialing"|"unpaid" status;
    # ID of the test clock this subscription belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    # The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.
    Subscription_transfer_data? transfer_data?;
    # If the subscription has a trial, the end of that trial.
    int? trial_end?;
    # Settings related to subscription trials.
    Subscriptions_trials_resource_trial_settings? trial_settings?;
    # If the subscription has a trial, the beginning of that trial.
    int? trial_start?;
};

# 
public type Us_bank_account_networks record {
    # The preferred network.
    string? preferred?;
    # All supported networks.
    ("ach"|"us_domestic_wire")[] supported;
};

# A phase item describes the price and quantity of a phase.
public type Subscription_schedule_configuration_item record {
    # Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period
    Subscription_item_billing_thresholds? billing_thresholds?;
    # The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    Discounts_resource_stackable_discount[] discounts;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an item. Metadata on this item will update the underlying subscription item's `metadata` when the phase is entered.
    record {|string...;|}? metadata?;
    # ID of the price to which the customer should be subscribed.
    string|Price|Deleted_price price;
    # Quantity of the plan to which the customer should be subscribed.
    int quantity?;
    # The tax rates which apply to this `phase_item`. When set, the `default_tax_rates` on the phase do not apply to this `phase_item`.
    Tax_rate[]? tax_rates?;
};

public type payment_methods_payment_method_bodyExpandItemsString string;

# 
public type IssuingDisputeList record {
    Issuing\.dispute[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/disputes`}
    string url;
};

public type line_items_update_params record {
    adjustable_quantity_params adjustable_quantity?;
    @constraint:String {maxLength: 5000}
    string id;
    int quantity?;
};

# 
public type Payment_method_boleto record {
    # Uniquely identifies the customer tax id (CNPJ or CPF)
    @constraint:String {maxLength: 5000}
    string tax_id;
};

public type value_lists_value_list_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedCreditsQueriesExpandItemsString string;

# 
public type Payment_intent_next_action_pix_display_qr_code record {
    # The raw data string used to generate QR code, it should be used together with QR code library.
    @constraint:String {maxLength: 5000}
    string data?;
    # The date (unix timestamp) when the PIX expires.
    int expires_at?;
    # The URL to the hosted pix instructions page, which allows customers to view the pix QR code.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url?;
    # The image_url_png string used to render png QR code
    @constraint:String {maxLength: 5000}
    string image_url_png?;
    # The image_url_svg string used to render svg QR code
    @constraint:String {maxLength: 5000}
    string image_url_svg?;
};

# 
public type Quotes_resource_transfer_data record {
    # The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.
    int? amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the destination account. By default, the entire amount will be transferred to the destination.
    decimal? amount_percent?;
    # The account where funds from the payment will be transferred to upon payment success.
    string|Account destination;
};

# 
public type Payment_intent_payment_method_options_mandate_options_sepa_debit record {
};

public type created_1 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_2 record {int gt?; int gte?; int lt?; int lte?;}|int;

# Represents the Queries record for the operation: GetAccountsAccountBankAccountsId
public type GetAccountsAccountBankAccountsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountBankAccountsIdQueriesExpandItemsString[] expand?;
};

public type created_5 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Line_items_discount_amount record {
    # The amount discounted.
    int amount;
    Discount discount;
};

public type created_6 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_links_resource_after_completion record {
    Payment_links_resource_completion_behavior_confirmation_page hosted_confirmation?;
    Payment_links_resource_completion_behavior_redirect redirect?;
    # The specified behavior after the purchase is complete.
    "hosted_confirmation"|"redirect" 'type;
};

public type receipt_specs record {
    @constraint:String {maxLength: 26}
    string description?;
    string quantity?;
    int total?;
    int unit_cost?;
};

# Represents the Queries record for the operation: GetCreditNotes
public type GetCreditNotesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesQueriesExpandItemsString[] expand?;
    # Only return credit notes that were created during the given date interval.
    created_7 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return credit notes for the invoice specified by this invoice ID.
    @constraint:String {maxLength: 5000}
    string invoice?;
    # Only return credit notes for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type created_3 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_4 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Account_dashboard_settings record {
    # The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.
    string? display_name?;
    # The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
    string? timezone?;
};

# The parameters that you can use to automatically create a transfer after the payment
# is captured. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_update_params_1 record {
    int amount?;
};

# 
public type Deleted_account record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "account" 'object;
};

# Represents the Queries record for the operation: GetEntitlementsFeatures
public type GetEntitlementsFeaturesQueries record {
    # If set, filter results to only include features with the given archive status.
    boolean archived?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetEntitlementsFeaturesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # If set, filter results to only include features with the given lookup_key.
    @constraint:String {maxLength: 5000}
    string lookup_key?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# The parameters used to automatically create a transfer after the payment is captured.
# Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_update_params_2 record {
    int amount?;
};

# Information for the account this token represents.
public type connect_js_account_token_specs record {
    "company"|"government_entity"|"individual"|"non_profit" business_type?;
    connect_js_account_token_company_specs company?;
    individual_specs_1 individual?;
    boolean tos_shown_and_accepted?;
};

# 
public type Issuing_authorization_fleet_tax_data record {
    # Amount of state or provincial Sales Tax included in the transaction amount. `null` if not reported by merchant or not subject to tax.
    string? local_amount_decimal?;
    # Amount of national Sales Tax or VAT included in the transaction amount. `null` if not reported by merchant or not subject to tax.
    string? national_amount_decimal?;
};

public type people_person_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    people_person_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

# 
public type Payment_method_details_ach_debit record {
    # Type of entity that holds the account. This can be either `individual` or `company`.
    "company"|"individual"? account_holder_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Two-letter ISO code representing the country the bank account is located in.
    string? country?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # Routing transit number of the bank account.
    string? routing_number?;
};

# 
public type Usage_record_summary record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice in which this usage period has been billed for.
    string? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "usage_record_summary" 'object;
    Period period;
    # The ID of the subscription item this summary is describing.
    @constraint:String {maxLength: 5000}
    string subscription_item;
    # The total usage within this usage period.
    int total_usage;
};

public type payments_settings_specs record {
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_kana?;
    @constraint:String {maxLength: 22}
    string statement_descriptor_kanji?;
};

public type documents_param_1 record {
    (string|"")[] files?;
};

public type meters_id_body record {|
    # The meter's name.
    @constraint:String {maxLength: 250}
    string display_name?;
    # Specifies which fields in the response should be expanded.
    meters_id_bodyExpandItemsString[] expand?;
|};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction record {
    # The [Refund](https://stripe.com/docs/api/refunds/object) that moved these funds into the customer's cash balance.
    string|Refund refund;
};

public type topups_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetCheckoutSessionsSessionLineItems
public type GetCheckoutSessionsSessionLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCheckoutSessionsSessionLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type outbound_transfer_return_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_return_bodyExpandItemsString[] expand?;
    returned_details_params_1 returned_details?;
|};

# Configuration overrides
public type refund_payment_config record {
    boolean enable_customer_cancellation?;
};

# 
public type TreasuryFinancialAccountsResourceFinancialAccountList record {
    Treasury\.financial_account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/treasury/financial_accounts`}
    string url;
};

# An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
public type transfer_data_specs record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string destination;
};

public type verification_document_specs record {
    @constraint:String {maxLength: 500}
    string back?;
    @constraint:String {maxLength: 500}
    string front?;
};

@constraint:String {maxLength: 5000}
public type GetProductsQueriesExpandItemsString string;

public type transacted_at record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_22 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_21 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_20 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_26 record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetEntitlementsActiveEntitlementsIdQueriesExpandItemsString string;

public type created_25 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type IssuingNetworkTokenList record {
    Issuing\.token[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type ClimateRemovalsSuppliersList record {
    Climate\.supplier[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/climate/suppliers`}
    string url;
};

public type created_24 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_23 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_method_options_customer_balance_bank_transfer record {
    Payment_method_options_customer_balance_eu_bank_account eu_bank_transfer?;
    # List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.
    # 
    # Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
    ("aba"|"iban"|"sepa"|"sort_code"|"spei"|"swift"|"zengin")[] requested_address_types?;
    # The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer"? 'type?;
};

public type created_29 record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type External_account_requirementsCurrentlydueItemsString string;

public type created_28 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_27 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_pages_checkout_session_custom_fields_numeric record {
    # The value that will pre-fill the field on the payment page.
    string? default_value?;
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
    # The value entered by the customer, containing only digits.
    string? value?;
};

@constraint:String {maxLength: 5000}
public type GetPaymentMethodConfigurationsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetChargesChargeQueriesExpandItemsString string;

# The tax collected or refunded, by line item.
public type TaxProductResourceTaxTransactionLineItemList_1 record {
    # Details about each object.
    Tax\.transaction_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/transactions/[^/]+/line_items`}
    string url;
};

# 
public type Fee record {
    # Amount of the fee, in cents.
    int amount;
    # ID of the Connect application that earned the fee.
    string? application?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Type of the fee, one of: `application_fee`, `payment_method_passthrough_fee`, `stripe_fee` or `tax`.
    @constraint:String {maxLength: 5000}
    string 'type;
};

public type Billing\.meter_event_summary record {
    decimal aggregated_value;
    int end_time;
    string id;
    boolean livemode;
    string meter;
    "billing.meter_event_summary" 'object;
    int start_time;
};

# 
public type Payment_pages_checkout_session_currency_conversion record {
    # Total of all items in source currency before discounts or taxes are applied.
    int amount_subtotal;
    # Total of all items in source currency after discounts and taxes are applied.
    int amount_total;
    # Exchange rate used to convert source currency amounts to customer currency amounts
    string fx_rate;
    # Creation currency of the CheckoutSession before localization
    @constraint:String {maxLength: 5000}
    string source_currency;
};

public type address_validation_param record {
    "disabled"|"normalization_only"|"validation_and_normalization" mode;
};

# Iban Records contain E.U. bank account details per the SEPA format.
public type Funding_instructions_bank_transfer_iban_record record {
    # The name of the person or business that owns the bank account
    @constraint:String {maxLength: 5000}
    string account_holder_name;
    # The BIC/SWIFT code of the account.
    @constraint:String {maxLength: 5000}
    string bic;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    # The IBAN of the account.
    @constraint:String {maxLength: 5000}
    string iban;
};

# Represents the Queries record for the operation: GetTopupsTopup
public type GetTopupsTopupQueries record {
    # Specifies which fields in the response should be expanded.
    GetTopupsTopupQueriesExpandItemsString[] expand?;
};

public type outbound_transfer_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_transfer_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_method_options_bancontact record {
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    "de"|"en"|"fr"|"nl" preferred_language;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# 
public type Checkout_acss_debit_payment_method_options record {
    # Currency supported by the bank account. Returned when the Session is in `setup` mode.
    "cad"|"usd" currency?;
    Checkout_acss_debit_mandate_options mandate_options?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Account_monthly_estimated_revenue record {
    # A non-negative integer representing how much to charge in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
};

public type created_11 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_10 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type test_clock_advance_bodyExpandItemsString string;

public type outbound_payments_id_body record {|
    # Specifies which fields in the response should be expanded.
    outbound_payments_id_bodyExpandItemsString[] expand?;
    tracking_details_params tracking_details;
|};

# An Add Invoice Item describes the prices and quantities that will be added as pending invoice items when entering a phase.
public type Subscription_schedule_add_invoice_item record {
    # The stackable discounts that will be applied to the item.
    Discounts_resource_stackable_discount[] discounts;
    # ID of the price used to generate the invoice item.
    string|Price|Deleted_price price;
    # The quantity of the invoice item.
    int? quantity?;
    # The tax rates which apply to the item. When set, the `default_tax_rates` do not apply to this item.
    Tax_rate[]? tax_rates?;
};

public type created_15 record {int gt?; int gte?; int lt?; int lte?;}|int;

# Represents the Queries record for the operation: GetApplicationFeesFeeRefundsId
public type GetApplicationFeesFeeRefundsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesFeeRefundsIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_transaction_fleet_tax_data record {
    # Amount of state or provincial Sales Tax included in the transaction amount. Null if not reported by merchant or not subject to tax.
    string? local_amount_decimal?;
    # Amount of national Sales Tax or VAT included in the transaction amount. Null if not reported by merchant or not subject to tax.
    string? national_amount_decimal?;
};

public type created_14 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type Source_type_multibanco record {
    string? entity?;
    string? reference?;
    string? refund_account_holder_address_city?;
    string? refund_account_holder_address_country?;
    string? refund_account_holder_address_line1?;
    string? refund_account_holder_address_line2?;
    string? refund_account_holder_address_postal_code?;
    string? refund_account_holder_address_state?;
    string? refund_account_holder_name?;
    string? refund_iban?;
};

# 
public type Setup_attempt_payment_method_details_revolut_pay record {
};

public type created_13 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_12 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_19 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_18 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_17 record {int gt?; int gte?; int lt?; int lte?;}|int;

public type created_16 record {int gt?; int gte?; int lt?; int lte?;}|int;

# 
public type Payment_method_konbini record {
};

public type charges_charge_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_boleto record {
};

public type radar_options_with_hidden_options_1 record {
    @constraint:String {maxLength: 5000}
    string session?;
};

# Options to configure Radar. Learn more about [Radar Sessions](https://stripe.com/docs/radar/radar-session).
public type radar_options_with_hidden_options_2 record {
    @constraint:String {maxLength: 5000}
    string session?;
};

# 
public type Tax_product_resource_tax_rate_details record {
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # The tax rate percentage as a string. For example, 8.5% is represented as `"8.5"`.
    @constraint:String {maxLength: 5000}
    string percentage_decimal;
    # State, county, province, or region.
    string? state?;
    # The tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat"? tax_type?;
};

# 
public type Account_requirements_error record {
    # The code for the type of error.
    "invalid_address_city_state_postal_code"|"invalid_address_highway_contract_box"|"invalid_address_private_mailbox"|"invalid_business_profile_name"|"invalid_business_profile_name_denylisted"|"invalid_company_name_denylisted"|"invalid_dob_age_over_maximum"|"invalid_dob_age_under_18"|"invalid_dob_age_under_minimum"|"invalid_product_description_length"|"invalid_product_description_url_match"|"invalid_representative_country"|"invalid_statement_descriptor_business_mismatch"|"invalid_statement_descriptor_denylisted"|"invalid_statement_descriptor_length"|"invalid_statement_descriptor_prefix_denylisted"|"invalid_statement_descriptor_prefix_mismatch"|"invalid_street_address"|"invalid_tax_id"|"invalid_tax_id_format"|"invalid_tos_acceptance"|"invalid_url_denylisted"|"invalid_url_format"|"invalid_url_web_presence_detected"|"invalid_url_website_business_information_mismatch"|"invalid_url_website_empty"|"invalid_url_website_inaccessible"|"invalid_url_website_inaccessible_geoblocked"|"invalid_url_website_inaccessible_password_protected"|"invalid_url_website_incomplete"|"invalid_url_website_incomplete_cancellation_policy"|"invalid_url_website_incomplete_customer_service_details"|"invalid_url_website_incomplete_legal_restrictions"|"invalid_url_website_incomplete_refund_policy"|"invalid_url_website_incomplete_return_policy"|"invalid_url_website_incomplete_terms_and_conditions"|"invalid_url_website_incomplete_under_construction"|"invalid_url_website_other"|"invalid_value_other"|"verification_directors_mismatch"|"verification_document_address_mismatch"|"verification_document_address_missing"|"verification_document_corrupt"|"verification_document_country_not_supported"|"verification_document_directors_mismatch"|"verification_document_dob_mismatch"|"verification_document_duplicate_type"|"verification_document_expired"|"verification_document_failed_copy"|"verification_document_failed_greyscale"|"verification_document_failed_other"|"verification_document_failed_test_mode"|"verification_document_fraudulent"|"verification_document_id_number_mismatch"|"verification_document_id_number_missing"|"verification_document_incomplete"|"verification_document_invalid"|"verification_document_issue_or_expiry_date_missing"|"verification_document_manipulated"|"verification_document_missing_back"|"verification_document_missing_front"|"verification_document_name_mismatch"|"verification_document_name_missing"|"verification_document_nationality_mismatch"|"verification_document_not_readable"|"verification_document_not_signed"|"verification_document_not_uploaded"|"verification_document_photo_mismatch"|"verification_document_too_large"|"verification_document_type_not_supported"|"verification_extraneous_directors"|"verification_failed_address_match"|"verification_failed_business_iec_number"|"verification_failed_document_match"|"verification_failed_id_number_match"|"verification_failed_keyed_identity"|"verification_failed_keyed_match"|"verification_failed_name_match"|"verification_failed_other"|"verification_failed_representative_authority"|"verification_failed_residential_address"|"verification_failed_tax_id_match"|"verification_failed_tax_id_not_issued"|"verification_missing_directors"|"verification_missing_executives"|"verification_missing_owners"|"verification_requires_additional_memorandum_of_associations"|"verification_requires_additional_proof_of_registration" code;
    # An informative message that indicates the error type and provides additional details about the error.
    @constraint:String {maxLength: 5000}
    string reason;
    # The specific user onboarding requirement field (in the requirements hash) that needs to be resolved.
    @constraint:String {maxLength: 5000}
    string requirement;
};

public type apple_pay_domains_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentMethodConfigurations
public type GetPaymentMethodConfigurationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodConfigurationsQueriesExpandItemsString[] expand?;
    # The Connect application to filter by.
    application application?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_method_options_us_bank_account_mandate_options record {
    # Mandate collection method
    "paper" collection_method?;
};

# 
public type Transform_usage record {
    # Divide usage by this number.
    int divide_by;
    # After division, either round the result `up` or `down`.
    "down"|"up" round;
};

public type network_options_param record {
    cartes_bancaires_network_options_param cartes_bancaires?;
};

# A hash containing directions for what this Coupon will apply discounts to.
public type applies_to_params record {
    applies_to_paramsProductsItemsString[] products?;
};

# 
public type DisputeList record {
    Dispute[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/disputes`}
    string url;
};

public type arrival_date record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetChargesChargeRefundsQueriesExpandItemsString string;

public type coupons_coupon_bodyExpandItemsString string;

# 
public type Payment_method_options_card_installments record {
    # Installment plans that may be selected for this PaymentIntent.
    Payment_method_details_card_installments_plan[]? available_plans?;
    # Whether Installments are enabled for this PaymentIntent.
    boolean enabled;
    # Installment plan selected for this PaymentIntent.
    Payment_method_details_card_installments_plan? plan?;
};

public type credit_notes_id_body record {|
    # Specifies which fields in the response should be expanded.
    credit_notes_id_bodyExpandItemsString[] expand?;
    # Credit note memo.
    @constraint:String {maxLength: 5000}
    string memo?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

public type created record {int gt?; int gte?; int lt?; int lte?;}|int;

@constraint:String {maxLength: 5000}
public type GetProductsProductFeaturesQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetForwardingRequestsQueriesExpandItemsString string;

# 
public type Account_future_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.
    int? current_deadline?;
    # Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.
    Account_future_requirementsCurrentlydueItemsString[]? currently_due?;
    # This is typed as a string for consistency with `requirements.disabled_reason`.
    string? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[]? errors?;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.
    Account_future_requirementsEventuallydueItemsString[]? eventually_due?;
    # Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.
    Account_future_requirementsPastdueItemsString[]? past_due?;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`. Fields might appear in `eventually_due` or `currently_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_future_requirementsPendingverificationItemsString[]? pending_verification?;
};

public type japan_address_kana_specs record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

# This hash contains whether the buy button is enabled.
public type Customer_session_resource_components_resource_buy_button record {
    # Whether the buy button is enabled.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type Issuing_cardholder_authorization_controlsAllowedmerchantcountriesItemsString string;

# Represents the Queries record for the operation: GetTestHelpersTestClocks
public type GetTestHelpersTestClocksQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTestHelpersTestClocksQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# The customer's tax IDs.
public type TaxIDsList_1 record {
    # Details about each object.
    Tax_id[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# PaymentMethod objects represent your customer's payment instruments.
# You can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to
# Customer objects to store instrument details for future payments.
# 
# Related guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).
public type Payment_method record {
    Payment_method_acss_debit acss_debit?;
    Payment_method_affirm affirm?;
    Payment_method_afterpay_clearpay afterpay_clearpay?;
    Payment_flows_private_payment_methods_alipay alipay?;
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to “unspecified”.
    "always"|"limited"|"unspecified" allow_redisplay?;
    Payment_method_amazon_pay amazon_pay?;
    Payment_method_au_becs_debit au_becs_debit?;
    Payment_method_bacs_debit bacs_debit?;
    Payment_method_bancontact bancontact?;
    Billing_details billing_details;
    Payment_method_blik blik?;
    Payment_method_boleto boleto?;
    Payment_method_card card?;
    Payment_method_card_present card_present?;
    Payment_method_cashapp cashapp?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.
    string|Customer? customer?;
    Payment_method_customer_balance customer_balance?;
    Payment_method_eps eps?;
    Payment_method_fpx fpx?;
    Payment_method_giropay giropay?;
    Payment_method_grabpay grabpay?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Payment_method_ideal ideal?;
    Payment_method_interac_present interac_present?;
    Payment_method_klarna klarna?;
    Payment_method_konbini konbini?;
    Payment_method_link link?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    Payment_method_mobilepay mobilepay?;
    Payment_method_multibanco multibanco?;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_method" 'object;
    Payment_method_oxxo oxxo?;
    Payment_method_p24 p24?;
    Payment_method_paynow paynow?;
    Payment_method_paypal paypal?;
    Payment_method_pix pix?;
    Payment_method_promptpay promptpay?;
    Radar_radar_options radar_options?;
    Payment_method_revolut_pay revolut_pay?;
    Payment_method_sepa_debit sepa_debit?;
    Payment_method_sofort sofort?;
    Payment_method_swish swish?;
    Payment_method_twint twint?;
    # The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"card_present"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"interac_present"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type;
    Payment_method_us_bank_account us_bank_account?;
    Payment_method_wechat_pay wechat_pay?;
    Payment_method_zip zip?;
};

public type meters_id_bodyExpandItemsString string;

public type fleet_reported_breakdown_non_fuel_specs record {
    string gross_amount_decimal?;
};

# Details on the account's acceptance of the [Stripe Services Agreement](/connect/updating-accounts#tos-acceptance). This property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts. This property defaults to a `full` service agreement when empty.
public type tos_acceptance_specs record {
    int date?;
    string ip?;
    @constraint:String {maxLength: 5000}
    string service_agreement?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

public type mandate_offline_acceptance_params record {
    string contact_email;
};

public type Issuing\.card record {
    string brand;
    "design_rejected"|"lost"|"stolen"? cancellation_reason?;
    Issuing\.cardholder cardholder;
    int created;
    string currency;
    string cvc?;
    int exp_month;
    int exp_year;
    string? financial_account?;
    string id;
    string last4;
    boolean livemode;
    record {|string...;|} metadata;
    string number?;
    "issuing.card" 'object;
    string|Issuing\.personalization_design? personalization_design?;
    string|Issuing\.card? replaced_by?;
    string|Issuing\.card? replacement_for?;
    "damaged"|"expired"|"lost"|"stolen"? replacement_reason?;
    Issuing_card_shipping? shipping?;
    Issuing_card_authorization_controls spending_controls;
    "active"|"canceled"|"inactive" status;
    "physical"|"virtual" 'type;
    Issuing_card_wallets? wallets?;
};

# Represents the Queries record for the operation: GetFinancialConnectionsAccounts
public type GetFinancialConnectionsAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsAccountsQueriesExpandItemsString[] expand?;
    # If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive.
    accountholder_params account_holder?;
    # If present, only return accounts that were collected as part of the given session.
    @constraint:String {maxLength: 5000}
    string session?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type tax_rates_tax_rate_body record {|
    # Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.
    boolean active?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country?;
    # An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.
    @constraint:String {maxLength: 5000}
    string description?;
    # The display name of the tax rate, which will be shown to users.
    @constraint:String {maxLength: 50}
    string display_name?;
    # Specifies which fields in the response should be expanded.
    tax_rates_tax_rate_bodyExpandItemsString[] expand?;
    # The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.
    @constraint:String {maxLength: 50}
    string jurisdiction?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, "NY" for New York, United States.
    @constraint:String {maxLength: 2}
    string state?;
    # The high-level tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;
|};

# Represents the Queries record for the operation: GetAccountsAccountExternalAccounts
public type GetAccountsAccountExternalAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountExternalAccountsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # Filter external accounts according to a particular object type.
    "bank_account"|"card" 'object?;
};

# Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.
public type billing_details_inner_params_1 record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    string|"" email?;
    string|"" name?;
    string|"" phone?;
};

# 
public type Subscription_automatic_tax record {
    # Whether Stripe automatically computes tax on this subscription.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

public type issuing_disputes_body record {|
    # The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If not set, defaults to the full transaction amount.
    int amount?;
    evidence_param evidence?;
    # Specifies which fields in the response should be expanded.
    issuing_disputes_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The ID of the issuing transaction to create a dispute for. For transaction on Treasury FinancialAccounts, use `treasury.received_debit`.
    @constraint:String {maxLength: 5000}
    string 'transaction?;
    treasury_param treasury?;
|};

# 
public type Payment_links_resource_invoice_creation record {
    # Enable creating an invoice on successful payment.
    boolean enabled;
    # Configuration for the invoice. Default invoice values will be used if unspecified.
    Payment_links_resource_invoice_settings? invoice_data?;
};

@constraint:String {maxLength: 5000}
public type GetClimateSuppliersSupplierQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Payment_method_details_card_presentPreferredlocalesItemsString string;

# A payment method domain represents a web domain that you have registered with Stripe.
# Stripe Elements use registered payment method domains to control where certain payment methods are shown.
# 
# Related guide: [Payment method domains](https://stripe.com/docs/payments/payment-methods/pmd-registration).
public type Payment_method_domain record {
    Payment_method_domain_resource_payment_method_status apple_pay;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The domain name that this payment method domain object represents.
    @constraint:String {maxLength: 5000}
    string domain_name;
    # Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.
    boolean enabled;
    Payment_method_domain_resource_payment_method_status google_pay;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Payment_method_domain_resource_payment_method_status link;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "payment_method_domain" 'object;
    Payment_method_domain_resource_payment_method_status paypal;
};

# 
public type Deleted_product_feature record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "product_feature" 'object;
};

public type billing_details_inner_params record {
    record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;}|"" address?;
    string|"" email?;
    string|"" name?;
    string|"" phone?;
};

# 
public type Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details record {
    Treasury_outbound_payments_resource_ach_tracking_details ach?;
    # The US bank account network used to send funds.
    "ach"|"us_domestic_wire" 'type;
    Treasury_outbound_payments_resource_us_domestic_wire_tracking_details us_domestic_wire?;
};

# 
public type Product_marketing_feature record {
    # The marketing feature name. Up to 80 characters long.
    @constraint:String {maxLength: 5000}
    string name?;
};

# Represents the Queries record for the operation: GetAccounts
public type GetAccountsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsQueriesExpandItemsString[] expand?;
    # Only return connected accounts that were created during the given date interval.
    created created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

public type features_param record {
    ("always"|"limited"|"unspecified")[] payment_method_allow_redisplay_filters?;
    "disabled"|"enabled" payment_method_redisplay?;
    int payment_method_redisplay_limit?;
    "disabled"|"enabled" payment_method_remove?;
    "disabled"|"enabled" payment_method_save?;
    "off_session"|"on_session" payment_method_save_usage?;
};

# 
public type Deleted_invoiceitem record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "invoiceitem" 'object;
};

public type terminal_configurations_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Payment_method_card_presentPreferredlocalesItemsString string;

public type tax_rates_tax_rate_bodyExpandItemsString string;

public type billing_meter_event_adjustments_bodyExpandItemsString string;

public type payouts_payout_bodyExpandItemsString string;

public type personalization_design_activate_body record {|
    # Specifies which fields in the response should be expanded.
    personalization_design_activate_bodyExpandItemsString[] expand?;
|};

# 
public type Quotes_resource_total_details_resource_breakdown record {
    # The aggregated discounts.
    Line_items_discount_amount[] discounts;
    # The aggregated tax amounts by rate.
    Line_items_tax_amount[] taxes;
};

public type eu_bank_transfer_params record {
    @constraint:String {maxLength: 5000}
    string country;
};

public type authorization_capture_bodyExpandItemsString string;

# Details about network-specific tracking information.
public type tracking_details_params record {
    ach_tracking_details_params ach?;
    "ach"|"us_domestic_wire" 'type;
    us_domestic_wire_tracking_details_params us_domestic_wire?;
};

public type japan_address_kanji_specs record {
    @constraint:String {maxLength: 5000}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 5000}
    string line1?;
    @constraint:String {maxLength: 5000}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
    @constraint:String {maxLength: 5000}
    string town?;
};

# 
public type Payment_method_details_card_installments_plan record {
    # For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
    int? count?;
    # For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
    # One of `month`.
    "month"? interval?;
    # Type of installment plan, one of `fixed_count`.
    "fixed_count" 'type;
};

public type Payment_links_resource_invoice_settingsAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# 
public type Setup_attempt_payment_method_details_card_present record {
    # The ID of the Card PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_card?;
    # Details about payments collected offline.
    Payment_method_details_card_present_offline? offline?;
};

# 
public type PaymentFlowsSetupIntentSetupAttemptList record {
    Setup_attempt[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/setup_attempts`}
    string url;
};

# 
public type Issuing_cardholder_company record {
    # Whether the company's business ID number was provided.
    boolean tax_id_provided;
};

public type recurring_adhoc record {
    "day"|"month"|"week"|"year" interval;
    int interval_count?;
};

public type AccounttaxidsItemsString string;

# 
public type Setup_attempt_payment_method_details_bacs_debit record {
};

public type sources_id_body_1 record {|
    # Specifies which fields in the response should be expanded.
    sources_id_body_1ExpandItemsString[] expand?;
|};

public type tokens_token_bodyExpandItemsString string;

# 
public type Deleted_customer record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "customer" 'object;
};

@constraint:String {maxLength: 5000}
public type Webhook_endpointEnabledeventsItemsString string;

@constraint:String {maxLength: 5000}
public type GetAccountsAccountPeopleQueriesExpandItemsString string;

public type treasury_inbound_transfers_bodyExpandItemsString string;

# Configuration for automatic tax collection.
public type automatic_tax_params_1 record {
    boolean enabled;
    param_3 liability?;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

@constraint:String {maxLength: 5000}
public type Person_future_requirementsPastdueItemsString string;

public type local_amusement_tax record {
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

# 
public type PaymentFlowsSetupIntentList record {
    Setup_intent[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/setup_intents`}
    string url;
};

# 
public type Payment_method_options_sofort record {
    # Preferred language of the SOFORT authorization page that the customer is redirected to.
    "de"|"en"|"es"|"fr"|"it"|"nl"|"pl"? preferred_language?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

@constraint:String {maxLength: 5000}
public type GetAppsSecretsFindQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetFilesFile
public type GetFilesFileQueries record {
    # Specifies which fields in the response should be expanded.
    GetFilesFileQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_paynow record {
};

public type QuoteDiscountsItemsnull string|Discount;

# 
public type Payment_intent_next_action_cashapp_handle_redirect_or_display_qr_code record {
    # The URL to the hosted Cash App Pay instructions page, which allows customers to view the QR code, and supports QR code refreshing on expiration.
    @constraint:String {maxLength: 5000}
    string hosted_instructions_url;
    # The url for mobile redirect based auth
    @constraint:String {maxLength: 5000}
    string mobile_auth_url;
    Payment_intent_next_action_cashapp_qr_code qr_code;
};

# 
public type Bank_connections_resource_balance_api_resource_cash_balance record {
    # The funds available to the account holder. Typically this is the current balance less any holds.
    # 
    # Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    # 
    # Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.
    record {|int...;|}? available?;
};

public type subscription_items_bodyExpandItemsString string;

# 
public type Payment_method_us_bank_account_status_details record {
    Payment_method_us_bank_account_blocked blocked?;
};

public type card_issuing_settings_specs record {
    settings_terms_of_service_specs tos_acceptance?;
};

public type products_id_body record {|
    # Whether the product is available for purchase.
    boolean active?;
    # The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.
    @constraint:String {maxLength: 5000}
    string default_price?;
    # The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
    string|"" description?;
    # Specifies which fields in the response should be expanded.
    products_id_bodyExpandItemsString[] expand?;
    # A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
    string[]|"" images?;
    # A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
    record {string name;}[]|"" marketing_features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The product's name, meant to be displayable to the customer.
    @constraint:String {maxLength: 5000}
    string name?;
    # The dimensions of this product for shipping purposes.
    record {decimal height; decimal length; decimal weight; decimal width;}|"" package_dimensions?;
    # Whether this product is shipped (i.e., physical goods).
    boolean shippable?;
    # An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.
    # 
    # This may be up to 22 characters. The statement description may not include `<`, `>`, `\`, `"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.
    #  It must contain at least one letter. May only be set if `type=service`. Only used for subscription payments.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|"" tax_code?;
    # A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal. May only be set if `type=service`.
    string|"" unit_label?;
    # A URL of a publicly-accessible webpage for this product.
    string|"" url?;
|};

public type disputes_dispute_bodyExpandItemsString string;

# 
public type Package_dimensions record {
    # Height, in inches.
    decimal height;
    # Length, in inches.
    decimal length;
    # Weight, in ounces.
    decimal weight;
    # Width, in inches.
    decimal width;
};

# 
public type Payment_method_details record {
    Payment_method_details_ach_credit_transfer ach_credit_transfer?;
    Payment_method_details_ach_debit ach_debit?;
    Payment_method_details_acss_debit acss_debit?;
    Payment_method_details_affirm affirm?;
    Payment_method_details_afterpay_clearpay afterpay_clearpay?;
    Payment_flows_private_payment_methods_alipay_details alipay?;
    Payment_method_details_amazon_pay amazon_pay?;
    Payment_method_details_au_becs_debit au_becs_debit?;
    Payment_method_details_bacs_debit bacs_debit?;
    Payment_method_details_bancontact bancontact?;
    Payment_method_details_blik blik?;
    Payment_method_details_boleto boleto?;
    Payment_method_details_card card?;
    Payment_method_details_card_present card_present?;
    Payment_method_details_cashapp cashapp?;
    Payment_method_details_customer_balance customer_balance?;
    Payment_method_details_eps eps?;
    Payment_method_details_fpx fpx?;
    Payment_method_details_giropay giropay?;
    Payment_method_details_grabpay grabpay?;
    Payment_method_details_ideal ideal?;
    Payment_method_details_interac_present interac_present?;
    Payment_method_details_klarna klarna?;
    Payment_method_details_konbini konbini?;
    Payment_method_details_link link?;
    Payment_method_details_mobilepay mobilepay?;
    Payment_method_details_multibanco multibanco?;
    Payment_method_details_oxxo oxxo?;
    Payment_method_details_p24 p24?;
    Payment_method_details_paynow paynow?;
    Payment_method_details_paypal paypal?;
    Payment_method_details_pix pix?;
    Payment_method_details_promptpay promptpay?;
    Payment_method_details_revolut_pay revolut_pay?;
    Payment_method_details_sepa_debit sepa_debit?;
    Payment_method_details_sofort sofort?;
    Payment_method_details_stripe_account stripe_account?;
    Payment_method_details_swish swish?;
    Payment_method_details_twint twint?;
    # The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.
    # An additional hash is included on `payment_method_details` with a name matching this value.
    # It contains information specific to the payment method.
    @constraint:String {maxLength: 5000}
    string 'type;
    Payment_method_details_us_bank_account us_bank_account?;
    Payment_method_details_wechat wechat?;
    Payment_method_details_wechat_pay wechat_pay?;
    Payment_method_details_zip zip?;
};

# 
public type IssuingPersonalizationDesignList record {
    Issuing\.personalization_design[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/personalization_designs`}
    string url;
};

public type customer_update_creation_param record {
    ("address"|"email"|"name"|"phone"|"shipping"|"tax_id")[]|"" allowed_updates?;
    boolean enabled;
};

# Contains additional details about the status of a payment method for a specific payment method domain.
public type Payment_method_domain_resource_payment_method_status_details record {
    # The error message associated with the status of the payment method on the domain.
    @constraint:String {maxLength: 5000}
    string error_message;
};

@constraint:String {maxLength: 5000}
public type GetIssuingAuthorizationsQueriesExpandItemsString string;

public type topups_topup_body record {|
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    topups_topup_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Represents the Queries record for the operation: GetBillingPortalConfigurations
public type GetBillingPortalConfigurationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBillingPortalConfigurationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return configurations that are active or inactive (e.g., pass `true` to only list active configurations).
    boolean active?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return the default or non-default configurations (e.g., pass `true` to only list the default configuration).
    boolean is_default?;
};

# This object represents a customer of your business. Use it to create recurring charges and track payments that belong to the same customer.
# 
# Related guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment)
public type Customer record {
    # The customer's address.
    Address? address?;
    # The current balance, if any, that's stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that's added to their next invoice. The balance only considers amounts that Stripe hasn't successfully applied to any invoice. It doesn't reflect unpaid invoices. This balance is only taken into account after invoices finalize.
    int balance?;
    # The current funds being held by Stripe on behalf of the customer. You can apply these funds towards payment intents when the source is "cash_balance". The `settings[reconciliation_mode]` field describes if these funds apply to these payment intents manually or automatically.
    Cash_balance? cash_balance?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.
    string? currency?;
    # ID of the default payment source for the customer.
    # 
    # If you use payment methods created through the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.
    string|Bank_account|Card|Source? default_source?;
    # Tracks the most recent state change on any invoice belonging to the customer. Paying an invoice or marking it uncollectible via the API will set this field to false. An automatic payment failure or passing the `invoice.due_date` will set this field to `true`.
    # 
    # If an invoice becomes uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't reset to `false`.
    # 
    # If you care whether the customer has paid their most recent subscription invoice, use `subscription.status` instead. Paying or marking uncollectible any customer invoice regardless of whether it is the latest invoice for a subscription will always set this field to `false`.
    boolean? delinquent?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Describes the current discount active on the customer, if there is one.
    Discount? discount?;
    # The customer's email address.
    string? email?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The current multi-currency balances, if any, that's stored on the customer. If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency. If negative, the customer has an amount owed that's added to their next invoice denominated in that currency. These balances don't apply to unpaid invoices. They solely track amounts that Stripe hasn't successfully applied to any invoice. Stripe only applies a balance in a specific currency to an invoice after that invoice (which is in the same currency) finalizes.
    record {|int...;|} invoice_credit_balance?;
    # The prefix for the customer used to generate unique invoice numbers.
    string? invoice_prefix?;
    Invoice_setting_customer_setting invoice_settings?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata?;
    # The customer's full name or business name.
    string? name?;
    # The suffix of the customer's next invoice number (for example, 0001). When the account uses account level sequencing, this parameter is ignored in API requests and the field omitted in API responses.
    int next_invoice_sequence?;
    # String representing the object's type. Objects of the same type share the same value.
    "customer" 'object;
    # The customer's phone number.
    string? phone?;
    # The customer's preferred locales (languages), ordered by preference.
    CustomerPreferredlocalesItemsString[]? preferred_locales?;
    # Mailing and shipping address for the customer. Appears on invoices emailed to this customer.
    Shipping? shipping?;
    ApmsSourcesSourceList_1 sources?;
    SubscriptionList_1 subscriptions?;
    Customer_tax tax?;
    # Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the following text: **"Reverse charge"**.
    "exempt"|"none"|"reverse"? tax_exempt?;
    TaxIDsList_1 tax_ids?;
    # ID of the test clock that this customer belongs to.
    string|Test_helpers\.test_clock? test_clock?;
};

# Products describe the specific goods or services you offer to your customers.
# For example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.
# They can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.
# 
# Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),
# [share a Payment Link](https://stripe.com/docs/payment-links),
# [accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),
# and more about [Products and Prices](https://stripe.com/docs/products-prices/overview)
public type Product record {
    # Whether the product is currently available for purchase.
    boolean active;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.
    string|Price? default_price?;
    # The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.
    string? description?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # A list of up to 8 URLs of images for this product, meant to be displayable to the customer.
    ProductImagesItemsString[] images;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # A list of up to 15 marketing features for this product. These are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
    Product_marketing_feature[] marketing_features;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # The product's name, meant to be displayable to the customer.
    @constraint:String {maxLength: 5000}
    string name;
    # String representing the object's type. Objects of the same type share the same value.
    "product" 'object;
    # The dimensions of this product for shipping purposes.
    Package_dimensions? package_dimensions?;
    # Whether this product is shipped (i.e., physical goods).
    boolean? shippable?;
    # Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used. Only used for subscription payments.
    string? statement_descriptor?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|Tax_code? tax_code?;
    # A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.
    string? unit_label?;
    # Time at which the object was last updated. Measured in seconds since the Unix epoch.
    int updated;
    # A URL of a publicly-accessible webpage for this product.
    string? url?;
};

public type controller_fees_specs record {
    "account"|"application" payer?;
};

# 
public type Payment_method_details_oxxo record {
    # OXXO reference number
    string? number?;
};

# 
public type Checkout_affirm_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetTaxCalculationsCalculationLineItems
public type GetTaxCalculationsCalculationLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 500}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxCalculationsCalculationLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 500}
    string starting_after?;
};

# When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.
public type subscription_data_params_1 record {
    @constraint:String {maxLength: 500}
    string description?;
    subscription_data_invoice_settings_params invoice_settings?;
    record {|string...;|} metadata?;
    int trial_period_days?;
    trial_settings_config trial_settings?;
};

# 
public type Account_requirements record {
    # Fields that are due and can be satisfied by providing the corresponding alternative fields instead.
    Account_requirements_alternative[]? alternatives?;
    # Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.
    int? current_deadline?;
    # Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.
    Account_requirementsCurrentlydueItemsString[]? currently_due?;
    # If the account is disabled, this string describes why. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification). Can be `action_required.requested_capabilities`, `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.incomplete_verification`, `rejected.listed`, `rejected.other`, `rejected.terms_of_service`, `under_review`, or `other`.
    string? disabled_reason?;
    # Fields that are `currently_due` and need to be collected again because validation or verification failed.
    Account_requirements_error[]? errors?;
    # Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.
    Account_requirementsEventuallydueItemsString[]? eventually_due?;
    # Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.
    Account_requirementsPastdueItemsString[]? past_due?;
    # Fields that might become required depending on the results of verification or review. It's an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`. Fields might appear in `eventually_due`, `currently_due`, or `past_due` and in `pending_verification` if verification fails but another verification is still pending.
    Account_requirementsPendingverificationItemsString[]? pending_verification?;
};

# 
public type Payment_intent_next_action_konbini record {
    # The timestamp at which the pending Konbini payment expires.
    int expires_at;
    # The URL for the Konbini payment instructions page, which allows customers to view and print a Konbini voucher.
    string? hosted_voucher_url?;
    Payment_intent_next_action_konbini_stores stores;
};

@constraint:String {maxLength: 5000}
public type GetLinkAccountSessionsSessionQueriesExpandItemsString string;

public type bank_accounts_id_body_2ExpandItemsString string;

# 
public type Issuing_transaction_network_data record {
    # A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter "S", followed by a six-digit number. For example, "S498162". Please note that the code is not guaranteed to be unique across authorizations.
    string? authorization_code?;
    # The date the transaction was processed by the card network. This can be different from the date the seller recorded the transaction depending on when the acquirer submits the transaction to the network.
    string? processing_date?;
    # Unique identifier for the authorization assigned by the card network used to match subsequent messages, disputes, and transactions.
    string? transaction_id?;
};

# Information about the features available in the portal.
public type features_updating_param record {
    customer_update_updating_param customer_update?;
    invoice_list_param invoice_history?;
    payment_method_update_param payment_method_update?;
    subscription_cancel_updating_param subscription_cancel?;
    subscription_update_updating_param subscription_update?;
};

public type subscription_items_item_bodyExpandItemsString string;

# 
public type Payment_method_details_pix record {
    # Unique transaction id generated by BCB
    string? bank_transaction_id?;
};

# Represents the Queries record for the operation: GetTerminalLocations
public type GetTerminalLocationsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTerminalLocationsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type price_data record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# 
public type Payment_method_details_twint record {
};

# 
public type Treasury_outbound_transfers_resource_returned_details record {
    # Reason for the return.
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"declined"|"incorrect_account_holder_name"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code;
    # The Transaction associated with this object.
    string|Treasury\.transaction 'transaction;
};

@constraint:String {maxLength: 5000}
public type GetTerminalConfigurationsConfigurationQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryOutboundPaymentsId
public type GetTreasuryOutboundPaymentsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundPaymentsIdQueriesExpandItemsString[] expand?;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction record {
    Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer bank_transfer;
};

public type local_lease_tax record {
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

public type refund_expire_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryOutboundPaymentsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetChargesQueriesExpandItemsString string;

public type capabilities_capability_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetPaymentIntentsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCardsQueriesExpandItemsString string;

# 
public type Payment_method_details_bancontact record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the Bancontact authorization page that the customer is redirected to.
    # Can be one of `en`, `de`, `fr`, or `nl`
    "de"|"en"|"fr"|"nl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by Bancontact directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

# List of items contained within this value list.
public type RadarListListItemList_1 record {
    # Details about each object.
    Radar\.value_list_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type webhook_endpoints_webhook_endpoint_body record {|
    # An optional description of what the webhook is used for.
    string|"" description?;
    # Disable the webhook endpoint if set to true.
    boolean disabled?;
    # The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.
    ("*"|"account.application.authorized"|"account.application.deauthorized"|"account.external_account.created"|"account.external_account.deleted"|"account.external_account.updated"|"account.updated"|"application_fee.created"|"application_fee.refund.updated"|"application_fee.refunded"|"balance.available"|"billing_portal.configuration.created"|"billing_portal.configuration.updated"|"billing_portal.session.created"|"capability.updated"|"cash_balance.funds_available"|"charge.captured"|"charge.dispute.closed"|"charge.dispute.created"|"charge.dispute.funds_reinstated"|"charge.dispute.funds_withdrawn"|"charge.dispute.updated"|"charge.expired"|"charge.failed"|"charge.pending"|"charge.refund.updated"|"charge.refunded"|"charge.succeeded"|"charge.updated"|"checkout.session.async_payment_failed"|"checkout.session.async_payment_succeeded"|"checkout.session.completed"|"checkout.session.expired"|"climate.order.canceled"|"climate.order.created"|"climate.order.delayed"|"climate.order.delivered"|"climate.order.product_substituted"|"climate.product.created"|"climate.product.pricing_updated"|"coupon.created"|"coupon.deleted"|"coupon.updated"|"credit_note.created"|"credit_note.updated"|"credit_note.voided"|"customer.created"|"customer.deleted"|"customer.discount.created"|"customer.discount.deleted"|"customer.discount.updated"|"customer.source.created"|"customer.source.deleted"|"customer.source.expiring"|"customer.source.updated"|"customer.subscription.created"|"customer.subscription.deleted"|"customer.subscription.paused"|"customer.subscription.pending_update_applied"|"customer.subscription.pending_update_expired"|"customer.subscription.resumed"|"customer.subscription.trial_will_end"|"customer.subscription.updated"|"customer.tax_id.created"|"customer.tax_id.deleted"|"customer.tax_id.updated"|"customer.updated"|"customer_cash_balance_transaction.created"|"entitlements.active_entitlement_summary.updated"|"file.created"|"financial_connections.account.created"|"financial_connections.account.deactivated"|"financial_connections.account.disconnected"|"financial_connections.account.reactivated"|"financial_connections.account.refreshed_balance"|"financial_connections.account.refreshed_ownership"|"financial_connections.account.refreshed_transactions"|"identity.verification_session.canceled"|"identity.verification_session.created"|"identity.verification_session.processing"|"identity.verification_session.redacted"|"identity.verification_session.requires_input"|"identity.verification_session.verified"|"invoice.created"|"invoice.deleted"|"invoice.finalization_failed"|"invoice.finalized"|"invoice.marked_uncollectible"|"invoice.paid"|"invoice.payment_action_required"|"invoice.payment_failed"|"invoice.payment_succeeded"|"invoice.sent"|"invoice.upcoming"|"invoice.updated"|"invoice.voided"|"invoiceitem.created"|"invoiceitem.deleted"|"issuing_authorization.created"|"issuing_authorization.request"|"issuing_authorization.updated"|"issuing_card.created"|"issuing_card.updated"|"issuing_cardholder.created"|"issuing_cardholder.updated"|"issuing_dispute.closed"|"issuing_dispute.created"|"issuing_dispute.funds_reinstated"|"issuing_dispute.submitted"|"issuing_dispute.updated"|"issuing_personalization_design.activated"|"issuing_personalization_design.deactivated"|"issuing_personalization_design.rejected"|"issuing_personalization_design.updated"|"issuing_token.created"|"issuing_token.updated"|"issuing_transaction.created"|"issuing_transaction.updated"|"mandate.updated"|"payment_intent.amount_capturable_updated"|"payment_intent.canceled"|"payment_intent.created"|"payment_intent.partially_funded"|"payment_intent.payment_failed"|"payment_intent.processing"|"payment_intent.requires_action"|"payment_intent.succeeded"|"payment_link.created"|"payment_link.updated"|"payment_method.attached"|"payment_method.automatically_updated"|"payment_method.detached"|"payment_method.updated"|"payout.canceled"|"payout.created"|"payout.failed"|"payout.paid"|"payout.reconciliation_completed"|"payout.updated"|"person.created"|"person.deleted"|"person.updated"|"plan.created"|"plan.deleted"|"plan.updated"|"price.created"|"price.deleted"|"price.updated"|"product.created"|"product.deleted"|"product.updated"|"promotion_code.created"|"promotion_code.updated"|"quote.accepted"|"quote.canceled"|"quote.created"|"quote.finalized"|"radar.early_fraud_warning.created"|"radar.early_fraud_warning.updated"|"refund.created"|"refund.updated"|"reporting.report_run.failed"|"reporting.report_run.succeeded"|"reporting.report_type.updated"|"review.closed"|"review.opened"|"setup_intent.canceled"|"setup_intent.created"|"setup_intent.requires_action"|"setup_intent.setup_failed"|"setup_intent.succeeded"|"sigma.scheduled_query_run.created"|"source.canceled"|"source.chargeable"|"source.failed"|"source.mandate_notification"|"source.refund_attributes_required"|"source.transaction.created"|"source.transaction.updated"|"subscription_schedule.aborted"|"subscription_schedule.canceled"|"subscription_schedule.completed"|"subscription_schedule.created"|"subscription_schedule.expiring"|"subscription_schedule.released"|"subscription_schedule.updated"|"tax.settings.updated"|"tax_rate.created"|"tax_rate.updated"|"terminal.reader.action_failed"|"terminal.reader.action_succeeded"|"test_helpers.test_clock.advancing"|"test_helpers.test_clock.created"|"test_helpers.test_clock.deleted"|"test_helpers.test_clock.internal_failure"|"test_helpers.test_clock.ready"|"topup.canceled"|"topup.created"|"topup.failed"|"topup.reversed"|"topup.succeeded"|"transfer.created"|"transfer.reversed"|"transfer.updated"|"treasury.credit_reversal.created"|"treasury.credit_reversal.posted"|"treasury.debit_reversal.completed"|"treasury.debit_reversal.created"|"treasury.debit_reversal.initial_credit_granted"|"treasury.financial_account.closed"|"treasury.financial_account.created"|"treasury.financial_account.features_status_updated"|"treasury.inbound_transfer.canceled"|"treasury.inbound_transfer.created"|"treasury.inbound_transfer.failed"|"treasury.inbound_transfer.succeeded"|"treasury.outbound_payment.canceled"|"treasury.outbound_payment.created"|"treasury.outbound_payment.expected_arrival_date_updated"|"treasury.outbound_payment.failed"|"treasury.outbound_payment.posted"|"treasury.outbound_payment.returned"|"treasury.outbound_payment.tracking_details_updated"|"treasury.outbound_transfer.canceled"|"treasury.outbound_transfer.created"|"treasury.outbound_transfer.expected_arrival_date_updated"|"treasury.outbound_transfer.failed"|"treasury.outbound_transfer.posted"|"treasury.outbound_transfer.returned"|"treasury.outbound_transfer.tracking_details_updated"|"treasury.received_credit.created"|"treasury.received_credit.failed"|"treasury.received_credit.succeeded"|"treasury.received_debit.created")[] enabled_events?;
    # Specifies which fields in the response should be expanded.
    webhook_endpoints_webhook_endpoint_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The URL of the webhook endpoint.
    string url?;
|};

# 
public type SigmaScheduledQueryRunList record {
    Scheduled_query_run[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/sigma/scheduled_query_runs`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCashBalanceTransactionsQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTaxTransactionsTransactionLineItems
public type GetTaxTransactionsTransactionLineItemsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 500}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTaxTransactionsTransactionLineItemsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 500}
    string starting_after?;
};

public type dropdownOptionsItemsObject record {
    string label;
    string value;
};

# Represents the Queries record for the operation: GetAccountsAccountPersons
public type GetAccountsAccountPersonsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPersonsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Filters on the list of people returned based on the person's relationship to the account's company.
    all_people_relationship_specs_1 relationship?;
};

# 
public type Payment_method_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # The name of the bank.
    string? bank_name?;
    # The ID of the Financial Connections Account used to create the payment method.
    string? financial_connections_account?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # Contains information about US bank account networks that can be used.
    Us_bank_account_networks? networks?;
    # Routing number of the bank account.
    string? routing_number?;
    # Contains information about the future reusability of this PaymentMethod.
    Payment_method_us_bank_account_status_details? status_details?;
};

public type subscription_item_update_params record {
    record {int usage_gte;}|"" billing_thresholds?;
    boolean clear_usage?;
    boolean deleted?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string id?;
    record {|string...;|}|"" metadata?;
    @constraint:String {maxLength: 5000}
    string price?;
    recurring_price_data price_data?;
    int quantity?;
    TaxratesItemsString[]|"" tax_rates?;
};

public type authorization_reverse_bodyExpandItemsString string;

public type value_lists_value_list_body record {|
    # The name of the value list for use in rules.
    @constraint:String {maxLength: 100}
    string alias?;
    # Specifies which fields in the response should be expanded.
    value_lists_value_list_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The human-readable name of the value list.
    @constraint:String {maxLength: 100}
    string name?;
|};

# 
public type Payment_pages_checkout_session_shipping_option record {
    # A non-negative integer in cents representing how much to charge.
    int shipping_amount;
    # The shipping rate.
    string|Shipping_rate shipping_rate;
};

# 
public type Payment_method_multibanco record {
};

public type date_of_birth record {
    int day;
    int month;
    int year;
};

# 
public type GelatoVerificationSessionList record {
    Identity\.verification_session[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/identity/verification_sessions`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetTaxTransactionsTransactionQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTreasuryCreditReversals
public type GetTreasuryCreditReversalsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryCreditReversalsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return CreditReversals for the ReceivedCredit ID.
    @constraint:String {maxLength: 5000}
    string received_credit?;
    # Only return CreditReversals for a given status.
    "canceled"|"posted"|"processing" status?;
};

public type Billing_portal\.session record {
    string|Billing_portal\.configuration configuration;
    int created;
    string customer;
    Portal_flows_flow? flow?;
    string id;
    boolean livemode;
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-AU"|"en-CA"|"en-GB"|"en-IE"|"en-IN"|"en-NZ"|"en-SG"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW"? locale?;
    "billing_portal.session" 'object;
    string? on_behalf_of?;
    string? return_url?;
    string url;
};

# The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
public type param_1 record {
    string account?;
    "account"|"self" 'type;
};

# 
public type Subscription_payment_method_options_card record {
    Invoice_mandate_options_card mandate_options?;
    # Selected network to process this Subscription on. Depends on the available networks of the card attached to the Subscription. Can be only set confirm-time.
    "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa"? network?;
    # We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
    "any"|"automatic"|"challenge"? request_three_d_secure?;
};

# 
public type Apple_pay_domain record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    @constraint:String {maxLength: 5000}
    string domain_name;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "apple_pay_domain" 'object;
};

public type payment_methods_payment_method_body record {|
    # This field indicates whether this payment method can be shown again to its customer in a checkout flow. Stripe products such as Checkout and Elements use this field to determine whether a payment method can be shown as a saved payment method in a checkout flow. The field defaults to `unspecified`.
    "always"|"limited"|"unspecified" allow_redisplay?;
    billing_details_inner_params_1 billing_details?;
    update_api_param card?;
    # Specifies which fields in the response should be expanded.
    payment_methods_payment_method_bodyExpandItemsString[] expand?;
    # If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.
    record {} link?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    update_param us_bank_account?;
|};

# 
public type Payment_method_details_boleto record {
    # The tax ID of the customer (CPF for individuals consumers or CNPJ for businesses consumers)
    @constraint:String {maxLength: 5000}
    string tax_id;
};

# 
public type TaxProductResourceTaxCalculationLineItemList record {
    # Details about each object.
    Tax\.calculation_line_item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/tax/calculations/[^/]+/line_items`}
    string url;
};

public type outbound_payments_id_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetReportingReportTypes
public type GetReportingReportTypesQueries record {
    # Specifies which fields in the response should be expanded.
    GetReportingReportTypesQueriesExpandItemsString[] expand?;
};

public type invoice_update_lines_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_update_lines_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. For [type=subscription](https://stripe.com/docs/api/invoices/line_item#invoice_line_item_object-type) line items, the incoming metadata specified on the request is directly used to set this value, in contrast to [type=invoiceitem](api/invoices/line_item#invoice_line_item_object-type) line items, where any existing metadata on the invoice line is merged with the incoming data.
    record {|string...;|}|"" invoice_metadata?;
    # The line items to update.
    lines_data_param_2[] lines;
|};

public type Billing\.meter record {
    int created;
    Billing_meter_resource_customer_mapping_settings customer_mapping;
    Billing_meter_resource_aggregation_settings default_aggregation;
    string display_name;
    string event_name;
    "day"|"hour"? event_time_window?;
    string id;
    boolean livemode;
    "billing.meter" 'object;
    "active"|"inactive" status;
    Billing_meter_resource_billing_meter_status_transitions status_transitions;
    int updated;
    Billing_meter_resource_billing_meter_value value_settings;
};

public type intent_verify_microdeposits_body_1 record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # The client secret of the SetupIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # A six-character code starting with SM present in the microdeposit sent to the bank account.
    @constraint:String {maxLength: 5000}
    string descriptor_code?;
    # Specifies which fields in the response should be expanded.
    intent_verify_microdeposits_body_1ExpandItemsString[] expand?;
|};

public type Climate\.order record {
    int amount_fees;
    int amount_subtotal;
    int amount_total;
    Climate_removals_beneficiary beneficiary?;
    int? canceled_at?;
    "expired"|"product_unavailable"|"requested"? cancellation_reason?;
    string? certificate?;
    int? confirmed_at?;
    int created;
    string currency;
    int? delayed_at?;
    int? delivered_at?;
    Climate_removals_order_deliveries[] delivery_details;
    int expected_delivery_year;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    string metric_tons;
    "climate.order" 'object;
    string|Climate\.product product;
    int? product_substituted_at?;
    "awaiting_funds"|"canceled"|"confirmed"|"delivered"|"open" status;
};

public type reader_set_reader_display_body record {|
    cart cart?;
    # Specifies which fields in the response should be expanded.
    reader_set_reader_display_bodyExpandItemsString[] expand?;
    # Type
    "cart" 'type;
|};

# 
public type Issuing_personalization_design_preferences record {
    # Whether we use this personalization design to create cards when one isn't specified. A connected account uses the Connect platform's default design if no personalization design is set as the default design.
    boolean is_default;
    # Whether this personalization design is used to create cards when one is not specified and a default for this connected account does not exist.
    boolean? is_platform_default?;
};

# Additional information about a `company` cardholder.
public type company_param record {
    @constraint:String {maxLength: 5000}
    string tax_id?;
};

# 
public type Payment_method_details_card_present record {
    # The authorized amount
    int? amount_authorized?;
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # When using manual capture, a future timestamp after which the charge will be automatically refunded if uncaptured.
    int capture_before?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Authorization response cryptogram.
    string? emv_auth_data?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.
    string? generated_card?;
    # Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents) is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).
    boolean incremental_authorization_supported;
    # The last four digits of the card.
    string? last4?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # Details about payments collected offline.
    Payment_method_details_card_present_offline? offline?;
    # Defines whether the authorized amount can be over-captured or not
    boolean overcapture_supported;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_details_card_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
    # A collection of fields required to be displayed on receipts. Only required for EMV transactions.
    Payment_method_details_card_present_receipt? receipt?;
};

@constraint:String {maxLength: 5000}
public type GetRefundsQueriesExpandItemsString string;

public type subscriptions_subscription_exposed_id_body_2ExpandItemsString string;

# 
public type Terminal_configuration_configuration_resource_device_type_specific_config record {
    # A File ID representing an image you would like displayed on the reader.
    string|File splashscreen?;
};

# Additional information about an `individual` cardholder.
public type individual_param record {
    card_issuing_param card_issuing?;
    date_of_birth_specs dob?;
    string first_name?;
    string last_name?;
    person_verification_param verification?;
};

public type cards_card_body record {|
    # Reason why the `status` of this card is `canceled`.
    "lost"|"stolen" cancellation_reason?;
    # Specifies which fields in the response should be expanded.
    cards_card_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    @constraint:String {maxLength: 5000}
    string personalization_design?;
    encrypted_pin_param_1 pin?;
    shipping_specs_1 shipping?;
    authorization_controls_param spending_controls?;
    # Dictates whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`. If this card is being canceled because it was lost or stolen, this information should be provided as `cancellation_reason`.
    "active"|"canceled"|"inactive" status?;
|};

public type Issuing\.personalization_design record {
    string|File? card_logo?;
    Issuing_personalization_design_carrier_text? carrier_text?;
    int created;
    string id;
    boolean livemode;
    string? lookup_key?;
    record {|string...;|} metadata;
    string? name?;
    "issuing.personalization_design" 'object;
    string|Issuing\.physical_bundle physical_bundle;
    Issuing_personalization_design_preferences preferences;
    Issuing_personalization_design_rejection_reasons rejection_reasons;
    "active"|"inactive"|"rejected"|"review" status;
};

# 
public type EntitlementsResourceCustomerEntitlementList record {
    Entitlements\.active_entitlement[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type charge_refund_bodyExpandItemsString string;

# 
public type Tax_product_registrations_resource_country_options_canada record {
    Tax_product_registrations_resource_country_options_ca_province_standard province_standard?;
    # Type of registration in Canada.
    "province_standard"|"simplified"|"standard" 'type;
};

# 
public type SubscriptionList record {
    # Details about each object.
    Subscription[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_method_details_konbini record {
    # If the payment succeeded, this contains the details of the convenience store where the payment was completed.
    Payment_method_details_konbini_store? store?;
};

# An object containing device type specific settings for BBPOS WisePOS E readers
public type bbpos_wise_pose record {
    string|"" splashscreen?;
};

# 
public type Checkout_bancontact_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type scope_param record {
    "account"|"user" 'type;
    @constraint:String {maxLength: 5000}
    string user?;
};

# 
public type Payment_method_details_wechat record {
};

# 
public type Tax_product_registrations_resource_country_options_simplified record {
    # Type of registration in `country`.
    "simplified" 'type;
};

# 
public type Payment_method_options_grabpay record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# Represents the Queries record for the operation: GetCustomersCustomerSources
public type GetCustomersCustomerSourcesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSourcesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # Filter sources according to a particular object type.
    @constraint:String {maxLength: 5000}
    string 'object?;
};

@constraint:String {maxLength: 5000}
public type GetReviewsReviewQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryDebitReversalsQueriesExpandItemsString string;

# 
public type UsageEventsResourceUsageRecordSummaryList record {
    Usage_record_summary[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type invoice_remove_lines_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_remove_lines_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" invoice_metadata?;
    # The line items to remove.
    lines_data_param_1[] lines;
|};

# 
public type Gelato_report_id_number_options record {
};

# 
public type RefundList record {
    # Details about each object.
    Refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_method_details_bacs_debit record {
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string? mandate?;
    # Sort code of the bank account. (e.g., `10-20-30`)
    string? sort_code?;
};

@constraint:String {maxLength: 5000}
public type Account_requirementsEventuallydueItemsString string;

public type Source_type_giropay record {
    string? bank_code?;
    string? bank_name?;
    string? bic?;
    string? statement_descriptor?;
};

public type product_data record {
    @constraint:String {maxLength: 40000}
    string description?;
    string[] images?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string tax_code?;
};

# Restrictions that a Connect Platform has placed on this FinancialAccount.
public type Treasury_financial_accounts_resource_platform_restrictions record {
    # Restricts all inbound money movement.
    "restricted"|"unrestricted"? inbound_flows?;
    # Restricts all outbound money movement.
    "restricted"|"unrestricted"? outbound_flows?;
};

public type authorization_finalize_amount_bodyExpandItemsString string;

public type id_refund_bodyExpandItemsString string;

public type Issuing\.token record {
    string|Issuing\.card card;
    int created;
    string? device_fingerprint?;
    string id;
    string last4?;
    boolean livemode;
    "mastercard"|"visa" network;
    Issuing_network_token_network_data network_data?;
    int network_updated_at;
    "issuing.token" 'object;
    "active"|"deleted"|"requested"|"suspended" status;
    "apple_pay"|"google_pay"|"samsung_pay" wallet_provider?;
};

# 
public type Payment_intent_payment_method_options_link record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.
public type outbound_transfers_1 record {
    access_with_ach_details ach?;
    access us_domestic_wire?;
};

public type quotes_quote_bodyExpandItemsString string;

# 
public type Issuing_card_shipping_customs record {
    # A registration number used for customs in Europe. See [https://www.gov.uk/eori](https://www.gov.uk/eori) for the UK and [https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en](https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en) for the EU.
    string? eori_number?;
};

# 
public type Treasury_outbound_transfers_resource_ach_tracking_details record {
    # ACH trace ID of the OutboundTransfer for transfers sent over the `ach` network.
    @constraint:String {maxLength: 5000}
    string trace_id;
};

# 
public type Price_tier record {
    # Price for the entire tier.
    int? flat_amount?;
    # Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.
    string? flat_amount_decimal?;
    # Per unit price for units relevant to the tier.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
    # Up to and including to this quantity will be contained in the tier.
    int? up_to?;
};

# Point in Time
public type Gelato_data_document_report_issued_date record {
    # Numerical day between 1 and 31.
    int? day?;
    # Numerical month between 1 and 12.
    int? month?;
    # The four-digit year.
    int? year?;
};

# `ExchangeRate` objects allow you to determine the rates that Stripe is currently
# using to convert from one currency to another. Since this number is variable
# throughout the day, there are various reasons why you might want to know the current
# rate (for example, to dynamically price an item for a user with a default
# payment in a foreign currency).
# 
# Please refer to our [Exchange Rates API](https://stripe.com/docs/fx-rates) guide for more details.
# 
# *[Note: this integration path is supported but no longer recommended]* Additionally,
# you can guarantee that a charge is made with an exchange rate that you expect is
# current. To do so, you must pass in the exchange_rate to charges endpoints. If the
# value is no longer up to date, the charge won't go through. Please refer to our
# [Using with charges](https://stripe.com/docs/exchange-rates) guide for more details.
# 
# -----
# 
# &nbsp;
# 
# *This Exchange Rates API is a Beta Service and is subject to Stripe's terms of service. You may use the API solely for the purpose of transacting on Stripe. For example, the API may be queried in order to:*
# 
# - *localize prices for processing payments on Stripe*
# - *reconcile Stripe transactions*
# - *determine how much money to send to a connected account*
# - *determine app fees to charge a connected account*
# 
# *Using this Exchange Rates API beta for any purpose other than to transact on Stripe is strictly prohibited and constitutes a violation of Stripe's terms of service.*
public type Exchange_rate record {
    # Unique identifier for the object. Represented as the three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in lowercase.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "exchange_rate" 'object;
    # Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency.
    record {||} rates;
};

public type bank_accounts_id_body_2 record {|
    # Specifies which fields in the response should be expanded.
    bank_accounts_id_body_2ExpandItemsString[] expand?;
|};

public type bank_accounts_id_body_1 record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    "company"|"individual" account_holder_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    bank_accounts_id_body_1ExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
    owner owner?;
|};

public type features_id_body record {|
    # Inactive features cannot be attached to new products and will not be returned from the features list endpoint.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    features_id_bodyExpandItemsString[] expand?;
    # Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}|"" metadata?;
    # The feature's name, for your own purpose, not meant to be displayable to the customer.
    @constraint:String {maxLength: 80}
    string name?;
|};

public type tax_param_1 record {
    string|"" ip_address?;
};

public type customer_fund_cash_balance_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount
public type GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQueriesExpandItemsString[] expand?;
};

# 
public type Tax_i_ds_owner record {
    # The account being referenced when `type` is `account`.
    string|Account account?;
    # The Connect Application being referenced when `type` is `application`.
    string|Application application?;
    # The customer being referenced when `type` is `customer`.
    string|Customer customer?;
    # Type of owner referenced.
    "account"|"application"|"customer"|"self" 'type;
};

public type authorization_controls_param_v2AllowedmerchantcountriesItemsString string;

# 
public type CustomerPaymentMethodResourceList record {
    Payment_method[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type QuotesResourceQuoteList record {
    Quote[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/quotes`}
    string url;
};

# 
public type Mandate_sepa_debit record {
    # The unique reference of the mandate.
    @constraint:String {maxLength: 5000}
    string reference;
    # The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.
    @constraint:String {maxLength: 5000}
    string url;
};

# Shipping rates describe the price of shipping presented to your customers and
# applied to a purchase. For more information, see [Charge for shipping](https://stripe.com/docs/payments/during-payment/charge-shipping).
public type Shipping_rate record {
    # Whether the shipping rate can be used for new purchases. Defaults to `true`.
    boolean active;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.
    Shipping_rate_delivery_estimate? delivery_estimate?;
    # The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.
    string? display_name?;
    Shipping_rate_fixed_amount fixed_amount?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "shipping_rate" 'object;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified"? tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.
    string|Tax_code? tax_code?;
    # The type of calculation to use on the shipping rate.
    "fixed_amount" 'type;
};

# 
public type Payment_method_cashapp record {
    # A unique and immutable identifier assigned by Cash App to every buyer.
    string? buyer_id?;
    # A public identifier for buyers using Cash App.
    string? cashtag?;
};

# 
public type PlanList record {
    # Details about each object.
    Plan[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/plans`}
    string url;
};

# 
public type Issuing_authorization_treasury record {
    # The array of [ReceivedCredits](https://stripe.com/docs/api/treasury/received_credits) associated with this authorization
    Issuing_authorization_treasuryReceivedcreditsItemsString[] received_credits;
    # The array of [ReceivedDebits](https://stripe.com/docs/api/treasury/received_debits) associated with this authorization
    Issuing_authorization_treasuryReceiveddebitsItemsString[] received_debits;
    # The Treasury [Transaction](https://stripe.com/docs/api/treasury/transactions) associated with this authorization
    string? 'transaction?;
};

# Optional parameters that automatically create a [file link](https://stripe.com/docs/api#file_links) for the newly created file.
public type file_link_creation_params record {
    boolean create;
    int expires_at?;
    record {|string...;|}|"" metadata?;
};

public type reversals_id_bodyExpandItemsString string;

public type intent_apply_customer_balance_bodyExpandItemsString string;

# 
public type Terminal_configuration_configuration_resource_reboot_window record {
    # Integer between 0 to 23 that represents the end hour of the reboot time window. The value must be different than the start_hour.
    int end_hour;
    # Integer between 0 to 23 that represents the start hour of the reboot time window.
    int start_hour;
};

# Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.
public type authorization_controls_param_v2 record {
    (authorization_controls_param_v2AllowedcategoriesItemsString)[] allowed_categories?;
    authorization_controls_param_v2AllowedmerchantcountriesItemsString[] allowed_merchant_countries?;
    (authorization_controls_param_v2BlockedcategoriesItemsString)[] blocked_categories?;
    authorization_controls_param_v2BlockedmerchantcountriesItemsString[] blocked_merchant_countries?;
    spending_limits_param[] spending_limits?;
    string spending_limits_currency?;
};

public type outbound_transfer_fail_bodyExpandItemsString string;

public type setup_intents_body record {|
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    automatic_payment_methods_param_1 automatic_payment_methods?;
    # Set to `true` to attempt to confirm this SetupIntent immediately. This parameter defaults to `false`. If a card is the attached payment method, you can provide a `return_url` in case further authentication is necessary.
    boolean confirm?;
    # ID of the ConfirmationToken used to confirm this SetupIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # ID of the Customer this SetupIntent belongs to, if one exists.
    # 
    # If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Specifies which fields in the response should be expanded.
    setup_intents_bodyExpandItemsString[] expand?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[] flow_directions?;
    # This hash contains details about the mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|"" mandate_data?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The Stripe account ID created for this SetupIntent.
    string on_behalf_of?;
    # ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this SetupIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params_1 payment_method_data?;
    payment_method_options_param_16 payment_method_options?;
    # The list of payment method types (for example, card) that this SetupIntent can use. If you don't provide this, it defaults to ["card"].
    setup_intents_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. To redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
    string return_url?;
    setup_intent_single_use_params single_use?;
    # Indicates how the payment method is intended to be used in the future. If not provided, this value defaults to `off_session`.
    "off_session"|"on_session" usage?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

# This hash contains whether the pricing table is enabled.
public type Customer_session_resource_components_resource_pricing_table record {
    # Whether the pricing table is enabled.
    boolean enabled;
};

@constraint:String {maxLength: 5000}
public type GetQuotesQueriesExpandItemsString string;

# A list of reversals that have been applied to the transfer.
public type TransferReversalList_1 record {
    # Details about each object.
    Transfer_reversal[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# The cardholder's billing address.
public type billing_specs record {
    required_address address;
};

# Represents the Queries record for the operation: GetSigmaScheduledQueryRunsScheduledQueryRun
public type GetSigmaScheduledQueryRunsScheduledQueryRunQueries record {
    # Specifies which fields in the response should be expanded.
    GetSigmaScheduledQueryRunsScheduledQueryRunQueriesExpandItemsString[] expand?;
};

public type forwarding_requests_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetShippingRates
public type GetShippingRatesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetShippingRatesQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_37 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return shipping rates that are active or inactive.
    boolean active?;
    # Only return shipping rates for the given currency.
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type Tax\.registration record {
    int active_from;
    string country;
    Tax_product_registrations_resource_country_options country_options;
    int created;
    int? expires_at?;
    string id;
    boolean livemode;
    "tax.registration" 'object;
    "active"|"expired"|"scheduled" status;
};

# Reboot time settings for readers that support customized reboot time configuration.
public type reboot_window record {
    int end_hour;
    int start_hour;
};

public type subscription_resume_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_card_checks record {
    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_postal_code_check?;
    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? cvc_check?;
};

# 
public type Quotes_resource_from_quote record {
    # Whether this quote is a revision of a different quote.
    boolean is_revision;
    # The quote that was cloned.
    string|Quote quote;
};

# Represents the Queries record for the operation: GetIssuingTransactions
public type GetIssuingTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetIssuingTransactionsQueriesExpandItemsString[] expand?;
    # Only return transactions that were created during the given date interval.
    created_22 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return transactions that belong to the given cardholder.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # Only return transactions that have the given type. One of `capture` or `refund`.
    "capture"|"refund" 'type?;
    # Only return transactions that belong to the given card.
    @constraint:String {maxLength: 5000}
    string card?;
};

# 
public type Issuing_dispute_duplicate_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy of the card statement showing that the product had already been paid for.
    string|File? card_statement?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy of the receipt showing that the product had been paid for in cash.
    string|File? cash_receipt?;
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Image of the front and back of the check that was used to pay for the product.
    string|File? check_image?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
    # Transaction (e.g., ipi_...) that the disputed transaction is a duplicate of. Of the two or more transactions that are copies of each other, this is original undisputed one.
    string? original_transaction?;
};

public type completed_sessions_params record {
    int 'limit;
};

@constraint:String {maxLength: 5000}
public type Issuing_card_authorization_controlsAllowedmerchantcountriesItemsString string;

public type aba_access record {
    boolean requested;
};

# 
public type Payment_method_details_mobilepay record {
    # Internal card details
    Internal_card? card?;
};

# 
public type Payment_pages_checkout_session_shipping_address_collection record {
    # An array of two-letter ISO country codes representing which countries Checkout should provide as options for
    # shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# 
public type Setup_attempt_payment_method_details_us_bank_account record {
};

# 
public type Shipping record {
    Address address?;
    # The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
    string? carrier?;
    # Recipient name.
    @constraint:String {maxLength: 5000}
    string name?;
    # Recipient phone (including extension).
    string? phone?;
    # The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    string? tracking_number?;
};

# 
public type Payment_method_card_wallet record {
    Payment_method_card_wallet_amex_express_checkout amex_express_checkout?;
    Payment_method_card_wallet_apple_pay apple_pay?;
    # (For tokenized numbers only.) The last four digits of the device account number.
    string? dynamic_last4?;
    Payment_method_card_wallet_google_pay google_pay?;
    Payment_method_card_wallet_link link?;
    Payment_method_card_wallet_masterpass masterpass?;
    Payment_method_card_wallet_samsung_pay samsung_pay?;
    # The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
    "amex_express_checkout"|"apple_pay"|"google_pay"|"link"|"masterpass"|"samsung_pay"|"visa_checkout" 'type;
    Payment_method_card_wallet_visa_checkout visa_checkout?;
};

public type balance_transactions_transaction_bodyExpandItemsString string;

# 
public type Received_payment_method_details_financial_account record {
    # The FinancialAccount ID.
    @constraint:String {maxLength: 5000}
    string id;
    # The rails the ReceivedCredit was sent over. A FinancialAccount can only send funds over `stripe`.
    "stripe" network;
};

public type payment_method_attach_bodyExpandItemsString string;

# 
public type Setup_intent_payment_method_options_sepa_debit record {
    Setup_intent_payment_method_options_mandate_options_sepa_debit mandate_options?;
};

public type owner record {
    source_address address?;
    string email?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 5000}
    string phone?;
};

public type dispute_close_body_1ExpandItemsString string;

public type issuing_cardholders_bodyExpandItemsString string;

# 
public type Source_order_item record {
    # The amount (price) for this order item.
    int? amount?;
    # This currency of this order item. Required when `amount` is present.
    string? currency?;
    # Human-readable description for this order item.
    string? description?;
    # The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).
    string? parent?;
    # The quantity of this order item. When type is `sku`, this is the number of instances of the SKU to be ordered.
    int quantity?;
    # The type of this order item. Must be `sku`, `tax`, or `shipping`.
    string? 'type?;
};

# 
public type Checkout_klarna_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

# Details about the address from which the goods are being shipped.
public type ship_from_details record {
    merchant_postal_address address;
};

public type external_accounts_id_body record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    ""|"company"|"individual" account_holder_type?;
    # The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.
    "checking"|"futsu"|"savings"|"toza" account_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # When set to true, this becomes the default external account for its currency.
    boolean default_for_currency?;
    external_account_documents_param documents?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    external_accounts_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
|};

# 
public type Issuing_transaction_purchase_details record {
    # Fleet-specific information for transactions using Fleet cards.
    Issuing_transaction_fleet_data? fleet?;
    # Information about the flight that was purchased with this transaction.
    Issuing_transaction_flight_data? flight?;
    # Information about fuel that was purchased with this transaction.
    Issuing_transaction_fuel_data? fuel?;
    # Information about lodging that was purchased with this transaction.
    Issuing_transaction_lodging_data? lodging?;
    # The line items in the purchase.
    Issuing_transaction_receipt_data[]? receipt?;
    # A merchant-specific order number.
    string? reference?;
};

# 
public type Connect_embedded_payouts_features record {
    # Whether to allow payout schedule to be changed. Default `true` when Stripe owns Loss Liability, default `false` otherwise.
    boolean edit_payout_schedule;
    # Whether to allow platforms to control bank account collection for their connected accounts. This feature can only be false for custom accounts (or accounts where the platform is compliance owner). Otherwise, bank account collection is determined by compliance requirements.
    boolean external_account_collection;
    # Whether to allow creation of instant payouts. Default `true` when Stripe owns Loss Liability, default `false` otherwise.
    boolean instant_payouts;
    # Whether to allow creation of standard payouts. Default `true` when Stripe owns Loss Liability, default `false` otherwise.
    boolean standard_payouts;
};

# 
public type Checkout_sofort_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type InvoicesItemsList record {
    Invoiceitem[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/invoiceitems`}
    string url;
};

public type Treasury\.received_credit record {
    int amount;
    int created;
    string currency;
    string description;
    "account_closed"|"account_frozen"|"other"? failure_code?;
    string? financial_account?;
    string? hosted_regulatory_receipt_url?;
    string id;
    Treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details initiating_payment_method_details;
    Treasury_received_credits_resource_linked_flows linked_flows;
    boolean livemode;
    "ach"|"card"|"stripe"|"us_domestic_wire" network;
    "treasury.received_credit" 'object;
    Treasury_received_credits_resource_reversal_details? reversal_details?;
    "failed"|"succeeded" status;
    string|Treasury\.transaction? 'transaction?;
};

public type Financial_connections\.transaction record {
    string account;
    int amount;
    string currency;
    string description;
    string id;
    boolean livemode;
    "financial_connections.transaction" 'object;
    "pending"|"posted"|"void" status;
    Bank_connections_resource_transaction_resource_status_transitions status_transitions;
    int transacted_at;
    string transaction_refresh;
    int updated;
};

public type Source_type_card_present record {
    string application_cryptogram?;
    string application_preferred_name?;
    string? authorization_code?;
    string authorization_response_code?;
    string? brand?;
    string? country?;
    string cvm_type?;
    string? data_type?;
    string dedicated_file_name?;
    string emv_auth_data?;
    string? evidence_customer_signature?;
    string? evidence_transaction_certificate?;
    int? exp_month?;
    int? exp_year?;
    string fingerprint?;
    string? funding?;
    string? last4?;
    string? pos_device_id?;
    string pos_entry_mode?;
    string? read_method?;
    string? reader?;
    string terminal_verification_results?;
    string transaction_status_information?;
};

# Represents a per-transaction override of a reader configuration
public type Terminal_reader_reader_resource_process_config record {
    # Enable customer initiated cancellation when processing this payment.
    boolean enable_customer_cancellation?;
    # Override showing a tipping selection screen on this transaction.
    boolean skip_tipping?;
    Terminal_reader_reader_resource_tipping_config tipping?;
};

# 
public type FileResourceFileList record {
    File[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/files`}
    string url;
};

# 
public type Setup_attempt_payment_method_details_sofort record {
    # Bank code of bank associated with the bank account.
    string? bank_code?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Bank Identifier Code of the bank associated with the bank account.
    string? bic?;
    # The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Payment_method? generated_sepa_debit?;
    # The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    string|Mandate? generated_sepa_debit_mandate?;
    # Last four characters of the IBAN.
    string? iban_last4?;
    # Preferred language of the Sofort authorization page that the customer is redirected to.
    # Can be one of `en`, `de`, `fr`, or `nl`
    "de"|"en"|"fr"|"nl"? preferred_language?;
    # Owner's verified full name. Values are verified or provided by Sofort directly
    # (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    string? verified_name?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryDebitReversalsDebitReversalQueriesExpandItemsString string;

public type intent_verify_microdeposits_body record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # The client secret of the PaymentIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # A six-character code starting with SM present in the microdeposit sent to the bank account.
    @constraint:String {maxLength: 5000}
    string descriptor_code?;
    # Specifies which fields in the response should be expanded.
    intent_verify_microdeposits_bodyExpandItemsString[] expand?;
|};

public type account_subscribe_bodyExpandItemsString string;

# 
public type Payment_method_card_present record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.
    string? cardholder_name?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # The last four digits of the card.
    string? last4?;
    # Contains information about card networks that can be used to process the payment.
    Payment_method_card_present_networks? networks?;
    # EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.
    Payment_method_card_presentPreferredlocalesItemsString[]? preferred_locales?;
    # How card details were read in this transaction.
    "contact_emv"|"contactless_emv"|"contactless_magstripe_mode"|"magnetic_stripe_fallback"|"magnetic_stripe_track2"? read_method?;
};

public type billing_portal_configurations_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedDebitsIdQueriesExpandItemsString string;

public type configurations_configuration_body_1 record {|
    # An object containing device type specific settings for BBPOS WisePOS E readers
    record {string|"" splashscreen?;}|"" bbpos_wisepos_e?;
    # Specifies which fields in the response should be expanded.
    configurations_configuration_body_1ExpandItemsString[] expand?;
    # Name of the configuration
    @constraint:String {maxLength: 100}
    string name?;
    # Configurations for collecting transactions offline.
    record {boolean enabled;}|"" offline?;
    # Reboot time settings for readers that support customized reboot time configuration.
    record {int end_hour; int start_hour;}|"" reboot_window?;
    # An object containing device type specific settings for Stripe S700 readers
    record {string|"" splashscreen?;}|"" stripe_s700?;
    # Tipping configurations for readers supporting on-reader tips
    record {record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} aud?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} cad?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} chf?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} czk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} dkk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} eur?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} gbp?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} hkd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} myr?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nok?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nzd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sek?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sgd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} usd?;}|"" tipping?;
    # An object containing device type specific settings for Verifone P400 readers
    record {string|"" splashscreen?;}|"" verifone_p400?;
|};

public type schedule_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    schedule_cancel_bodyExpandItemsString[] expand?;
    # If the subscription schedule is `active`, indicates if a final invoice will be generated that contains any un-invoiced metered usage and new/pending proration invoice items. Defaults to `true`.
    boolean invoice_now?;
    # If the subscription schedule is `active`, indicates if the cancellation should be prorated. Defaults to `true`.
    boolean prorate?;
|};

public type session_redact_body record {|
    # Specifies which fields in the response should be expanded.
    session_redact_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_pages_checkout_session_tax_id record {
    # The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # The value of the tax ID.
    string? value?;
};

public type sources_source_bodyExpandItemsString string;

# 
public type Issuing_card_wallets record {
    Issuing_card_apple_pay apple_pay;
    Issuing_card_google_pay google_pay;
    # Unique identifier for a card used with digital wallets
    string? primary_account_identifier?;
};

public type subscription_data_paramsDefaulttaxratesItemsString string;

# 
public type Source_transaction_gbp_credit_transfer_data record {
    # Bank account fingerprint associated with the Stripe owned bank account receiving the transfer.
    @constraint:String {maxLength: 5000}
    string fingerprint?;
    # The credit transfer rails the sender used to push this transfer. The possible rails are: Faster Payments, BACS, CHAPS, and wire transfers. Currently only Faster Payments is supported.
    @constraint:String {maxLength: 5000}
    string funding_method?;
    # Last 4 digits of sender account number associated with the transfer.
    @constraint:String {maxLength: 5000}
    string last4?;
    # Sender entered arbitrary information about the transfer.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Sender account number associated with the transfer.
    @constraint:String {maxLength: 5000}
    string sender_account_number?;
    # Sender name associated with the transfer.
    @constraint:String {maxLength: 5000}
    string sender_name?;
    # Sender sort code associated with the transfer.
    @constraint:String {maxLength: 5000}
    string sender_sort_code?;
};

# 
public type Climate_removals_products_price record {
    # Fees for one metric ton of carbon removal in the currency's smallest unit.
    int amount_fees;
    # Subtotal for one metric ton of carbon removal (excluding fees) in the currency's smallest unit.
    int amount_subtotal;
    # Total for one metric ton of carbon removal (including fees) in the currency's smallest unit.
    int amount_total;
};

# 
public type Tax_product_registrations_resource_country_options_default record {
    # Type of registration in `country`.
    "standard" 'type;
};

public type customer_sessions_bodyExpandItemsString string;

# 
public type Issuing_dispute_no_valid_authorization_evidence record {
    # (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Additional documentation supporting the dispute.
    string|File? additional_documentation?;
    # Explanation of why the cardholder is disputing this transaction.
    string? explanation?;
};

public type Source_type_ach_credit_transfer record {
    string? account_number?;
    string? bank_name?;
    string? fingerprint?;
    string? refund_account_holder_name?;
    string? refund_account_holder_type?;
    string? refund_routing_number?;
    string? routing_number?;
    string? swift_code?;
};

# 
public type Promotion_code_currency_option record {
    # Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).
    int minimum_amount;
};

# 
public type Payment_flows_private_payment_methods_us_bank_account_linked_account_options_filters record {
    # The account subcategories to use to filter for possible accounts to link. Valid subcategories are `checking` and `savings`.
    ("checking"|"savings")[] account_subcategories?;
};

# Represents the Queries record for the operation: GetReviews
public type GetReviewsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetReviewsQueriesExpandItemsString[] expand?;
    # Only return reviews that were created during the given date interval.
    created_34 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetBalanceHistoryIdQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_requirements_alternativeAlternativefieldsdueItemsString string;

# Represents the Queries record for the operation: GetIssuingTransactionsTransaction
public type GetIssuingTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingTransactionsTransactionQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_details_acss_debit record {
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Institution number of the bank account
    string? institution_number?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    @constraint:String {maxLength: 5000}
    string mandate?;
    # Transit number of the bank account.
    string? transit_number?;
};

# 
public type Payment_method_card record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string brand;
    # Checks on Card address and CVC if provided.
    Payment_method_card_checks? checks?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # The brand to use when displaying the card, this accounts for customer's brand choice on dual-branded cards. Can be `american_express`, `cartes_bancaires`, `diners_club`, `discover`, `eftpos_australia`, `interac`, `jcb`, `mastercard`, `union_pay`, `visa`, or `other` and may contain more values in the future.
    string? display_brand?;
    # Two-digit number representing the card's expiration month.
    int exp_month;
    # Four-digit number representing the card's expiration year.
    int exp_year;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string funding;
    # Details of the original PaymentMethod that created this object.
    Payment_method_card_generated_card? generated_from?;
    # The last four digits of the card.
    @constraint:String {maxLength: 5000}
    string last4;
    # Contains information about card networks that can be used to process the payment.
    Networks? networks?;
    # Contains details on how this Card may be used for 3D Secure authentication.
    Three_d_secure_usage? three_d_secure_usage?;
    # If this Card is part of a card wallet, this contains the details of the card wallet.
    Payment_method_card_wallet? wallet?;
};

@constraint:String {maxLength: 5000}
public type GetTestHelpersTestClocksQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetClimateSuppliers
public type GetClimateSuppliersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetClimateSuppliersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryInboundTransfersQueriesExpandItemsString string;

public type authorization_decline_bodyExpandItemsString string;

# 
public type BankConnectionsResourceLinkedAccountList record {
    # Details about each object.
    Financial_connections\.account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/financial_connections/accounts`}
    string url;
};

public type customer_bank_accounts_body record {|
    # A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.
    @constraint:String {maxLength: 5000}
    string alipay_account?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; string country; string currency?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    # A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js).
    record {string address_city?; string address_country?; string address_line1?; string address_line2?; string address_state?; string address_zip?; string cvc?; int exp_month; int exp_year; record {|string...;|} metadata?; string name?; string number; "card" 'object?;}|string card?;
    # Specifies which fields in the response should be expanded.
    customer_bank_accounts_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Please refer to full [documentation](https://stripe.com/docs/api) instead.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

public type DefaulttaxratesItemsString string;

# 
public type Shipping_rate_fixed_amount record {
    # A non-negative integer in cents representing how much to charge.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Shipping rates defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Shipping_rate_currency_option...;|} currency_options?;
};

public type topups_body record {|
    # A positive integer representing how much to transfer.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # Specifies which fields in the response should be expanded.
    topups_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The ID of a source to transfer funds from. For most users, this should be left unspecified which will use the bank account that was set up in the dashboard for the specified currency. In test mode, this can be a test bank token (see [Testing Top-ups](https://stripe.com/docs/connect/testing#testing-top-ups)).
    @constraint:String {maxLength: 5000}
    string 'source?;
    # Extra information about a top-up for the source's bank statement. Limited to 15 ASCII characters.
    @constraint:String {maxLength: 15}
    string statement_descriptor?;
    # A string that identifies this top-up as part of a group.
    string transfer_group?;
|};

public type completed_at record {int gt?; int gte?; int lt?; int lte?;}|int;

# The default settings to aggregate a meter's events with.
public type aggregation_settings_param record {
    "count"|"sum" formula;
};

public type three_d_secure_specs record {
    "attempt_acknowledged"|"authenticated"|"failed"|"required" result;
};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationReportsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsAccountsAccountQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetApplePayDomains
public type GetApplePayDomainsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    @constraint:String {maxLength: 5000}
    string domain_name?;
    # Specifies which fields in the response should be expanded.
    GetApplePayDomainsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type outbound_transfer_return_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSubscriptionsQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Issuing_card_authorization_controlsBlockedmerchantcountriesItemsString string;

@constraint:String {maxLength: 5000}
public type GetTransfersTransferQueriesExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSourcesIdQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetSourcesSourceMandateNotificationsMandateNotification
public type GetSourcesSourceMandateNotificationsMandateNotificationQueries record {
    # Specifies which fields in the response should be expanded.
    GetSourcesSourceMandateNotificationsMandateNotificationQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetRadarValueListItemsItem
public type GetRadarValueListItemsItemQueries record {
    # Specifies which fields in the response should be expanded.
    GetRadarValueListItemsItemQueriesExpandItemsString[] expand?;
};

public type discounts_data_param record {
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string discount?;
    @constraint:String {maxLength: 5000}
    string promotion_code?;
};

public type ephemeral_keys_key_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetSourcesSourceSourceTransactionsSourceTransactionQueriesExpandItemsString string;

public type ProductsItemsObjectPricesItemsString string;

# 
public type Subscriptions_resource_billing_cycle_anchor_config record {
    # The day of the month of the billing_cycle_anchor.
    int day_of_month;
    # The hour of the day of the billing_cycle_anchor.
    int? hour?;
    # The minute of the hour of the billing_cycle_anchor.
    int? minute?;
    # The month to start full cycle billing periods.
    int? month?;
    # The second of the minute of the billing_cycle_anchor.
    int? second?;
};

# Information for the person this token represents.
public type person_token_specs record {
    person_additional_tos_acceptances_specs_1 additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs_1 documents?;
    string email?;
    @constraint:String {maxLength: 5000}
    string first_name?;
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    string gender?;
    @constraint:String {maxLength: 5000}
    string id_number?;
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    @constraint:String {maxLength: 5000}
    string last_name?;
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    record {|string...;|}|"" metadata?;
    @constraint:String {maxLength: 5000}
    string nationality?;
    string phone?;
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs registered_address?;
    relationship_specs_1 relationship?;
    string ssn_last_4?;
    person_verification_specs verification?;
};

public type promotion_codes_bodyExpandItemsString string;

public type configurations_configuration_bodyExpandItemsString string;

# 
public type Account_requirements_alternative record {
    # Fields that can be provided to satisfy all fields in `original_fields_due`.
    Account_requirements_alternativeAlternativefieldsdueItemsString[] alternative_fields_due;
    # Fields that are due and can be satisfied by providing all fields in `alternative_fields_due`.
    Account_requirements_alternativeOriginalfieldsdueItemsString[] original_fields_due;
};

public type invoiceitems_body record {|
    # The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. Passing in a negative `amount` will reduce the `amount_due` on the invoice.
    int amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # The ID of the customer who will be billed when this invoice item is billed.
    @constraint:String {maxLength: 5000}
    string customer;
    # An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    @constraint:String {maxLength: 5000}
    string description?;
    # Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items.
    boolean discountable?;
    # The coupons and promotion codes to redeem into discounts for the invoice item or invoice line item.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    invoiceitems_bodyExpandItemsString[] expand?;
    # The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. This is useful when adding invoice items in response to an invoice.created webhook. You can only add invoice items to draft invoices and there is a maximum of 250 items per invoice.
    @constraint:String {maxLength: 5000}
    string invoice?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    period period?;
    # The ID of the price object. One of `price` or `price_data` is required.
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data price_data?;
    # Non-negative integer. The quantity of units for the invoice item.
    int quantity?;
    # The ID of a subscription to add this invoice item to. When left blank, the invoice item is added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    # A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    string|"" tax_code?;
    # The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.
    invoiceitems_bodyTaxratesItemsString[] tax_rates?;
    # The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This `unit_amount` will be multiplied by the quantity to get the full amount. Passing in a negative `unit_amount` will reduce the `amount_due` on the invoice.
    int unit_amount?;
    # Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.
    string unit_amount_decimal?;
|};

public type treasury_received_credits_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerDiscountQueriesExpandItemsString string;

# 
public type Legal_entity_japan_address record {
    # City/Ward.
    string? city?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    string? country?;
    # Block/Building number.
    string? line1?;
    # Building details.
    string? line2?;
    # ZIP or postal code.
    string? postal_code?;
    # Prefecture.
    string? state?;
    # Town/cho-me.
    string? town?;
};

# 
public type Issuing_authorization_fleet_cardholder_prompt_data record {
    # [Deprecated] An alphanumeric ID, though typical point of sales only support numeric entry. The card program can be configured to prompt for a vehicle ID, driver ID, or generic ID.
    string? alphanumeric_id?;
    # Driver ID.
    string? driver_id?;
    # Odometer reading.
    int? odometer?;
    # An alphanumeric ID. This field is used when a vehicle ID, driver ID, or generic ID is entered by the cardholder, but the merchant or card network did not specify the prompt type.
    string? unspecified_id?;
    # User ID.
    string? user_id?;
    # Vehicle number.
    string? vehicle_number?;
};

public type payment_method_options record {
    record {record {"business"|"personal" transaction_type?;} mandate_options?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" acss_debit?;
    record {"de"|"en"|"fr"|"nl" preferred_language?;}|"" bancontact?;
    record {record {int amount?; "fixed"|"maximum" amount_type?; string description?;} mandate_options?; "amex"|"cartes_bancaires"|"diners"|"discover"|"eftpos_au"|"interac"|"jcb"|"mastercard"|"unionpay"|"unknown"|"visa" network?; "any"|"automatic"|"challenge" request_three_d_secure?;}|"" card?;
    record {record {record {string country;} eu_bank_transfer?; string 'type?;} bank_transfer?; string funding_type?;}|"" customer_balance?;
    record {}|"" konbini?;
    record {}|"" sepa_debit?;
    record {record {record {("checking"|"savings")[] account_subcategories?;} filters?; (financial_connectionsPermissionsItemsString)[] permissions?; ("balances"|"ownership"|"transactions")[] prefetch?;} financial_connections?; "automatic"|"instant"|"microdeposits" verification_method?;}|"" us_bank_account?;
};

@constraint:String {maxLength: 5000}
public type GetRadarValueListsQueriesExpandItemsString string;

public type authorization_expire_bodyExpandItemsString string;

public type Treasury\.received_debit record {
    int amount;
    int created;
    string currency;
    string description;
    "account_closed"|"account_frozen"|"insufficient_funds"|"other"? failure_code?;
    string? financial_account?;
    string? hosted_regulatory_receipt_url?;
    string id;
    Treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details initiating_payment_method_details?;
    Treasury_received_debits_resource_linked_flows linked_flows;
    boolean livemode;
    "ach"|"card"|"stripe" network;
    "treasury.received_debit" 'object;
    Treasury_received_debits_resource_reversal_details? reversal_details?;
    "failed"|"succeeded" status;
    string|Treasury\.transaction? 'transaction?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionEntriesQueriesExpandItemsString string;

public type treasury_financial_accounts_body record {|
    # Specifies which fields in the response should be expanded.
    treasury_financial_accounts_bodyExpandItemsString[] expand?;
    feature_access features?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    platform_restrictions platform_restrictions?;
    # The currencies the FinancialAccount can hold a balance in.
    treasury_financial_accounts_bodySupportedcurrenciesItemsString[] supported_currencies;
|};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionsIdQueriesExpandItemsString string;

# 
public type Currency_option record {
    # When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
    Custom_unit_amount? custom_unit_amount?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified"? tax_behavior?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    Price_tier[] tiers?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    int? unit_amount?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    string? unit_amount_decimal?;
};

# 
public type Sigma_scheduled_query_run_error record {
    # Information about the run failure.
    @constraint:String {maxLength: 5000}
    string message;
};

# 
public type Portal_subscription_cancellation_reason record {
    # Whether the feature is enabled.
    boolean enabled;
    # Which cancellation reasons will be given as options to the customer.
    ("customer_service"|"low_quality"|"missing_features"|"other"|"switched_service"|"too_complex"|"too_expensive"|"unused")[] options;
};

# 
public type Online_acceptance record {
    # The customer accepts the mandate from this IP address.
    string? ip_address?;
    # The customer accepts the mandate using the user agent of the browser.
    string? user_agent?;
};

public type invoice_mark_uncollectible_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_mark_uncollectible_bodyExpandItemsString[] expand?;
|};

public type Invoice_setting_subscription_schedule_settingAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

public type fleet_reported_breakdown_specs record {
    fleet_reported_breakdown_fuel_specs fuel?;
    fleet_reported_breakdown_non_fuel_specs non_fuel?;
    fleet_reported_breakdown_tax_specs tax?;
};

# 
public type Payment_method_details_customer_balance record {
};

# Represents the Queries record for the operation: GetBillingMeters
public type GetBillingMetersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetBillingMetersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Filter results to only include meters with the given status.
    "active"|"inactive" status?;
};

# Usage records allow you to report customer usage and metrics to Stripe for
# metered billing of subscription prices.
# 
# Related guide: [Metered billing](https://stripe.com/docs/billing/subscriptions/metered-billing)
# 
# This is our legacy usage-based billing API. See the [updated usage-based billing docs](https://docs.stripe.com/billing/subscriptions/usage-based).
public type Usage_record record {
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "usage_record" 'object;
    # The usage quantity for the specified date.
    int quantity;
    # The ID of the subscription item this usage record contains data for.
    @constraint:String {maxLength: 5000}
    string subscription_item;
    # The timestamp when this usage occurred.
    int timestamp;
};

public type company_ownership_declaration record {
    int date?;
    string ip?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

public type cardholders_cardholder_body record {|
    billing_specs billing?;
    company_param company?;
    # The cardholder's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    cardholders_cardholder_bodyExpandItemsString[] expand?;
    individual_param individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure) for more details.
    string phone_number?;
    # The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.
    #  This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.
    ("de"|"en"|"es"|"fr"|"it")[] preferred_locales?;
    authorization_controls_param_v2 spending_controls?;
    # Specifies whether to permit authorizations on this cardholder's cards.
    "active"|"inactive" status?;
|};

# 
public type ShippingResourcesShippingRateList record {
    Shipping_rate[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/shipping_rates`}
    string url;
};

public type lines_data_param record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string description?;
    boolean discountable?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string invoice_item?;
    record {|string...;|}|"" metadata?;
    period_1 period?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_product_data price_data?;
    int quantity?;
    record {int amount; record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data; int taxable_amount;}[]|"" tax_amounts?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type ApplePayDomainList record {
    Apple_pay_domain[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/apple_pay/domains`}
    string url;
};

# 
public type Charge_outcome record {
    # Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as "pending" on a cardholder's statement.
    string? network_status?;
    # An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details.
    string? reason?;
    # Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. This field is only available with Radar.
    @constraint:String {maxLength: 5000}
    string risk_level?;
    # Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.
    int risk_score?;
    # The ID of the Radar rule that matched the payment, if applicable.
    string|Rule rule?;
    # A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.
    string? seller_message?;
    # Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.
    @constraint:String {maxLength: 5000}
    string 'type;
};

public type authorizations_authorization_body record {|
    # Specifies which fields in the response should be expanded.
    authorizations_authorization_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# A Customer Session allows you to grant Stripe's frontend SDKs (like Stripe.js) client-side access
# control over a Customer.
public type Customer_session record {
    # The client secret of this Customer Session. Used on the client to set up secure access to the given `customer`.
    # 
    # The client secret can be used to provide access to `customer` from your frontend. It should not be stored, logged, or exposed to anyone other than the relevant customer. Make sure that you have TLS enabled on any page that includes the client secret.
    @constraint:String {maxLength: 5000}
    string client_secret;
    Customer_session_resource_components components?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The Customer the Customer Session was created for.
    string|Customer customer;
    # The timestamp at which this Customer Session will expire.
    int expires_at;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "customer_session" 'object;
};

# Represents the Queries record for the operation: GetIssuingCardsCard
public type GetIssuingCardsCardQueries record {
    # Specifies which fields in the response should be expanded.
    GetIssuingCardsCardQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetPromotionCodesQueriesExpandItemsString string;

# 
public type RadarListListList record {
    Radar\.value_list[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/radar/value_lists`}
    string url;
};

# Represents the Queries record for the operation: GetTaxCodesId
public type GetTaxCodesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxCodesIdQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetRadarValueLists
public type GetRadarValueListsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # A value contained within a value list - returns all value lists containing this value.
    @constraint:String {maxLength: 800}
    string contains?;
    # Specifies which fields in the response should be expanded.
    GetRadarValueListsQueriesExpandItemsString[] expand?;
    # Only return value lists that were created during the given date interval.
    created_31 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The alias used to reference the value list when writing rules.
    @constraint:String {maxLength: 100}
    string alias?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type bank_account_ownership_verificationFilesItemsString string;

public type sources_bodyExpandItemsString string;

public type treasury_financial_accounts_bodyExpandItemsString string;

# 
public type Payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # Reference number to locate ACH payments with customer's bank.
    string? payment_reference?;
    # Routing number of the bank account.
    string? routing_number?;
};

public type setup_intent_payment_method_options_param record {
    "cad"|"usd" currency?;
    setup_intent_payment_method_options_mandate_options_param mandate_options?;
    "automatic"|"instant"|"microdeposits" verification_method?;
};

# 
public type Portal_business_profile record {
    # The messaging shown to customers in the portal.
    string? headline?;
    # A link to the business’s publicly available privacy policy.
    string? privacy_policy_url?;
    # A link to the business’s publicly available terms of service.
    string? terms_of_service_url?;
};

public type session_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    session_cancel_bodyExpandItemsString[] expand?;
|};

@constraint:String {maxLength: 5000}
public type GetTreasuryTransactionEntriesIdQueriesExpandItemsString string;

# Result from an id_number check
public type Gelato_id_number_report record {
    # Date of birth.
    Gelato_data_id_number_report_date? dob?;
    # Details on the verification error. Present when status is `unverified`.
    Gelato_id_number_report_error? 'error?;
    # First name.
    string? first_name?;
    # ID number. When `id_number_type` is `us_ssn`, only the last 4 digits are present.
    string? id_number?;
    # Type of ID number.
    "br_cpf"|"sg_nric"|"us_ssn"? id_number_type?;
    # Last name.
    string? last_name?;
    # Status of this `id_number` check.
    "unverified"|"verified" status;
};

# 
public type Payment_intent_payment_method_options_blik record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type Source_type_ach_debit record {
    string? bank_name?;
    string? country?;
    string? fingerprint?;
    string? last4?;
    string? routing_number?;
    string? 'type?;
};

# Represents the Queries record for the operation: GetPaymentMethodsPaymentMethod
public type GetPaymentMethodsPaymentMethodQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodsPaymentMethodQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetIssuingCardholdersQueriesExpandItemsString string;

# 
public type Account_tos_acceptance record {
    # The Unix timestamp marking when the account representative accepted their service agreement
    int? date?;
    # The IP address from which the account representative accepted their service agreement
    string? ip?;
    # The user's service agreement type
    @constraint:String {maxLength: 5000}
    string service_agreement?;
    # The user agent of the browser from which the account representative accepted their service agreement
    string? user_agent?;
};

public type InvoiceDiscountsItemsnull string|Discount|Deleted_discount;

public type reader_process_payment_intent_bodyExpandItemsString string;

public type intent_capture_body record {|
    # The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount is automatically refunded. Defaults to the full `amount_capturable` if it's not provided.
    int amount_to_capture?;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int application_fee_amount?;
    # Specifies which fields in the response should be expanded.
    intent_capture_bodyExpandItemsString[] expand?;
    # Defaults to `true`. When capturing a PaymentIntent, setting `final_capture` to `false` notifies Stripe to not release the remaining uncaptured funds to make sure that they're captured in future requests. You can only use this setting when [multicapture](https://stripe.com/docs/payments/multicapture) is available for PaymentIntents.
    boolean final_capture?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. The concatenated descriptor must be 1-22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_update_params_1 transfer_data?;
|};

public type one_time_price_data_with_negative_amounts record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

# Details about the response from the destination endpoint.
public type Forwarded_response_details record {
    # The response body from the destination endpoint to Stripe.
    @constraint:String {maxLength: 5000}
    string body;
    # HTTP headers that the destination endpoint returned.
    Forwarded_request_header[] headers;
    # The HTTP status code that the destination endpoint returned.
    int status;
};

# Represents the Queries record for the operation: GetBalanceTransactionsId
public type GetBalanceTransactionsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetBalanceTransactionsIdQueriesExpandItemsString[] expand?;
};

public type account_external_accounts_bodyExpandItemsString string;

public type bacs_debit_payments_specs record {
    string display_name?;
};

@constraint:String {maxLength: 5000}
public type GetCountrySpecsCountryQueriesExpandItemsString string;

# 
public type Connect_account_reference record {
    # The connected account being referenced when `type` is `account`.
    string|Account account?;
    # Type of the account referenced.
    "account"|"self" 'type;
};

# 
public type Issuing_cardholder_requirements record {
    # If `disabled_reason` is present, all cards will decline authorizations with `cardholder_verification_required` reason.
    "listed"|"rejected.listed"|"requirements.past_due"|"under_review"? disabled_reason?;
    # Array of fields that need to be collected in order to verify and re-enable the cardholder.
    ("company.tax_id"|"individual.card_issuing.user_terms_acceptance.date"|"individual.card_issuing.user_terms_acceptance.ip"|"individual.dob.day"|"individual.dob.month"|"individual.dob.year"|"individual.first_name"|"individual.last_name"|"individual.verification.document")[]? past_due?;
};

# Represents the Queries record for the operation: GetSetupIntents
public type GetSetupIntentsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSetupIntentsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_36 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return SetupIntents that associate with the specified payment method.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # Only return SetupIntents for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# Represents the Queries record for the operation: GetProductsProductFeaturesId
public type GetProductsProductFeaturesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetProductsProductFeaturesIdQueriesExpandItemsString[] expand?;
};

public type param_6 record {
    @constraint:String {maxLength: 5000}
    string tax_id;
};

# 
public type Treasury_shared_resource_initiating_payment_method_details_us_bank_account record {
    # Bank name.
    string? bank_name?;
    # The last four digits of the bank account number.
    string? last4?;
    # The routing number for the bank account.
    string? routing_number?;
};

public type param_7 record {
    "arzte_und_apotheker_bank"|"austrian_anadi_bank_ag"|"bank_austria"|"bankhaus_carl_spangler"|"bankhaus_schelhammer_und_schattera_ag"|"bawag_psk_ag"|"bks_bank_ag"|"brull_kallmus_bank_ag"|"btv_vier_lander_bank"|"capital_bank_grawe_gruppe_ag"|"deutsche_bank_ag"|"dolomitenbank"|"easybank_ag"|"erste_bank_und_sparkassen"|"hypo_alpeadriabank_international_ag"|"hypo_bank_burgenland_aktiengesellschaft"|"hypo_noe_lb_fur_niederosterreich_u_wien"|"hypo_oberosterreich_salzburg_steiermark"|"hypo_tirol_bank_ag"|"hypo_vorarlberg_bank_ag"|"marchfelder_bank"|"oberbank_ag"|"raiffeisen_bankengruppe_osterreich"|"schoellerbank_ag"|"sparda_bank_wien"|"volksbank_gruppe"|"volkskreditbank_ag"|"vr_bank_braunau" bank?;
};

# 
public type Treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details record {
    # Set when `type` is `balance`.
    "payments" balance?;
    Treasury_shared_resource_billing_details billing_details;
    Received_payment_method_details_financial_account financial_account?;
    # Set when `type` is `issuing_card`. This is an [Issuing Card](https://stripe.com/docs/api#issuing_cards) ID.
    @constraint:String {maxLength: 5000}
    string issuing_card?;
    # Polymorphic type matching the originating money movement's source. This can be an external account, a Stripe balance, or a FinancialAccount.
    "balance"|"financial_account"|"issuing_card"|"stripe"|"us_bank_account" 'type;
    Treasury_shared_resource_initiating_payment_method_details_us_bank_account us_bank_account?;
};

public type param_8 record {
    "affin_bank"|"agrobank"|"alliance_bank"|"ambank"|"bank_islam"|"bank_muamalat"|"bank_of_china"|"bank_rakyat"|"bsn"|"cimb"|"deutsche_bank"|"hong_leong_bank"|"hsbc"|"kfh"|"maybank2e"|"maybank2u"|"ocbc"|"pb_enterprise"|"public_bank"|"rhb"|"standard_chartered"|"uob" bank;
};

@constraint:String {maxLength: 5000}
public type GetTopupsTopupQueriesExpandItemsString string;

public type param_9 record {
    "abn_amro"|"asn_bank"|"bunq"|"handelsbanken"|"ing"|"knab"|"moneyou"|"n26"|"nn"|"rabobank"|"regiobank"|"revolut"|"sns_bank"|"triodos_bank"|"van_lanschot"|"yoursafe" bank?;
};

# 
public type SubscriptionsSubscriptionList record {
    Subscription[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/subscriptions`}
    string url;
};

public type param_2 record {
    string account?;
    "account"|"self" 'type;
};

# 
public type Tax_product_resource_tax_transaction_line_item_resource_reversal record {
    # The `id` of the line item to reverse in the original transaction.
    @constraint:String {maxLength: 5000}
    string original_line_item;
};

@constraint:String {maxLength: 5000}
public type GetCheckoutSessionsSessionQueriesExpandItemsString string;

public type param_3 record {
    string account?;
    "account"|"self" 'type;
};

# Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.
# [Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.
# 
# For example, you might have a single "gold" product that has prices for $10/month, $100/year, and €9 once.
# 
# Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).
public type Price record {
    # Whether the price can be used for new purchases.
    boolean active;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).
    record {|Currency_option...;|} currency_options?;
    # When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
    Custom_unit_amount? custom_unit_amount?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.
    string? lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # A brief description of the price, hidden from customers.
    string? nickname?;
    # String representing the object's type. Objects of the same type share the same value.
    "price" 'object;
    # The ID of the product this price is associated with.
    string|Product|Deleted_product product;
    # The recurring components of a price such as `interval` and `usage_type`.
    Recurring? recurring?;
    # Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended)) was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.
    "exclusive"|"inclusive"|"unspecified"? tax_behavior?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    Price_tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.
    "graduated"|"volume"? tiers_mode?;
    # Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.
    Transform_quantity? transform_quantity?;
    # One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.
    "one_time"|"recurring" 'type;
    # The unit amount in cents (or local equivalent) to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
    int? unit_amount?;
    # The unit amount in cents (or local equivalent) to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.
    string? unit_amount_decimal?;
};

public type param_4 record {
    @constraint:String {maxLength: 5000}
    string account_number;
    @constraint:String {maxLength: 5000}
    string bsb_number;
};

@constraint:String {maxLength: 5000}
public type Issuing_cardholder_authorization_controlsBlockedmerchantcountriesItemsString string;

# 
public type Application_fee record {
    # ID of the Stripe account this fee was taken from.
    string|Account account;
    # Amount earned, in cents (or local equivalent).
    int amount;
    # Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the fee if a partial refund was issued)
    int amount_refunded;
    # ID of the Connect application that earned the fee.
    string|Application application;
    # Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).
    string|Balance_transaction? balance_transaction?;
    # ID of the charge that the application fee was taken from.
    string|Charge charge;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Polymorphic source of the application fee. Includes the ID of the object the application fee was created from.
    Platform_earning_fee_source? fee_source?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "application_fee" 'object;
    # ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.
    string|Charge? originating_transaction?;
    # Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.
    boolean refunded;
    FeeRefundList_1 refunds;
};

public type param_5 record {
    @constraint:String {maxLength: 5000}
    string account_number?;
    @constraint:String {maxLength: 5000}
    string sort_code?;
};

# If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.
public type update_param record {
    "company"|"individual" account_holder_type?;
    "checking"|"savings" account_type?;
};

# 
public type Deleted_application record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The name of the application.
    string? name?;
    # String representing the object's type. Objects of the same type share the same value.
    "application" 'object;
};

# 
public type Tax_id_verification record {
    # Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.
    "pending"|"unavailable"|"unverified"|"verified" status;
    # Verified address.
    string? verified_address?;
    # Verified name.
    string? verified_name?;
};

public type payment_method_attach_body record {|
    # The ID of the customer to which to attach the PaymentMethod.
    @constraint:String {maxLength: 5000}
    string customer;
    # Specifies which fields in the response should be expanded.
    payment_method_attach_bodyExpandItemsString[] expand?;
|};

public type bank_accounts_id_body record {|
    # The name of the person or business that owns the bank account.
    @constraint:String {maxLength: 5000}
    string account_holder_name?;
    # The type of entity that holds the account. This can be either `individual` or `company`.
    ""|"company"|"individual" account_holder_type?;
    # The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.
    "checking"|"futsu"|"savings"|"toza" account_type?;
    # City/District/Suburb/Town/Village.
    @constraint:String {maxLength: 5000}
    string address_city?;
    # Billing address country, if provided when creating card.
    @constraint:String {maxLength: 5000}
    string address_country?;
    # Address line 1 (Street address/PO Box/Company name).
    @constraint:String {maxLength: 5000}
    string address_line1?;
    # Address line 2 (Apartment/Suite/Unit/Building).
    @constraint:String {maxLength: 5000}
    string address_line2?;
    # State/County/Province/Region.
    @constraint:String {maxLength: 5000}
    string address_state?;
    # ZIP or postal code.
    @constraint:String {maxLength: 5000}
    string address_zip?;
    # When set to true, this becomes the default external account for its currency.
    boolean default_for_currency?;
    external_account_documents_param documents?;
    # Two digit number representing the card’s expiration month.
    @constraint:String {maxLength: 5000}
    string exp_month?;
    # Four digit number representing the card’s expiration year.
    @constraint:String {maxLength: 5000}
    string exp_year?;
    # Specifies which fields in the response should be expanded.
    bank_accounts_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Cardholder name.
    @constraint:String {maxLength: 5000}
    string name?;
|};

# 
public type Source_transaction_paper_check_data record {
    # Time at which the deposited funds will be available for use. Measured in seconds since the Unix epoch.
    @constraint:String {maxLength: 5000}
    string available_at?;
    # Comma-separated list of invoice IDs associated with the paper check.
    @constraint:String {maxLength: 5000}
    string invoices?;
};

public type card_payments_settings_specs record {
    decline_charge_on_specs decline_on?;
    @constraint:String {maxLength: 10}
    string statement_descriptor_prefix?;
    string|"" statement_descriptor_prefix_kana?;
    string|"" statement_descriptor_prefix_kanji?;
};

# 
public type Payment_method_card_wallet_samsung_pay record {
};

public type terminal_configurations_body record {|
    bbpos_wise_pose bbpos_wisepos_e?;
    # Specifies which fields in the response should be expanded.
    terminal_configurations_bodyExpandItemsString[] expand?;
    # Name of the configuration
    @constraint:String {maxLength: 100}
    string name?;
    # Configurations for collecting transactions offline.
    record {boolean enabled;}|"" offline?;
    reboot_window reboot_window?;
    stripe_s700 stripe_s700?;
    # Tipping configurations for readers supporting on-reader tips
    record {record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} aud?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} cad?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} chf?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} czk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} dkk?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} eur?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} gbp?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} hkd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} myr?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nok?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} nzd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sek?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} sgd?; record {int[] fixed_amounts?; int[] percentages?; int smart_tip_threshold?;} usd?;}|"" tipping?;
    verifone_p400 verifone_p400?;
|};

public type subscription_update_confirm_discount_params record {
    @constraint:String {maxLength: 5000}
    string coupon?;
    @constraint:String {maxLength: 5000}
    string promotion_code?;
};

public type subscription_update_creation_param record {
    ("price"|"promotion_code"|"quantity")[]|"" default_allowed_updates;
    boolean enabled;
    record {ProductsItemsObjectPricesItemsString[] prices; string product;}[]|"" products;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

@constraint:String {maxLength: 5000}
public type GetTreasuryReceivedDebitsQueriesExpandItemsString string;

# 
public type Payment_method_config_resource_payment_method_properties record {
    # Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active.
    boolean available;
    Payment_method_config_resource_display_preference display_preference;
};

# 
public type Invoice_threshold_reason record {
    # The total invoice amount threshold boundary if it triggered the threshold invoice.
    int? amount_gte?;
    # Indicates which line items triggered a threshold invoice.
    Invoice_item_threshold_reason[] item_reasons;
};
