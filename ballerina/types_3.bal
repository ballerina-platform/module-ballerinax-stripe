// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/constraint;
import ballerina/http;

public type treasury_outbound_transfers_body record {|
    # Amount (in cents) to be transferred.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 5000}
    string description?;
    # The PaymentMethod to use as the payment instrument for the OutboundTransfer.
    @constraint:String {maxLength: 5000}
    string destination_payment_method?;
    payment_method_options_3 destination_payment_method_options?;
    # Specifies which fields in the response should be expanded.
    treasury_outbound_transfers_bodyExpandItemsString[] expand?;
    # The FinancialAccount to pull funds from.
    string financial_account;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for `ach` transfers or 140 characters for `us_domestic_wire` transfers. The default value is "transfer".
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
|};

@constraint:String {maxLength: 5000}
public type Invoice_item_threshold_reasonLineitemidsItemsString string;

# Represents a reader action to process a setup intent
public type Terminal_reader_reader_resource_process_setup_intent_action record {
    # ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.
    @constraint:String {maxLength: 5000}
    string generated_card?;
    Terminal_reader_reader_resource_process_setup_config process_config?;
    # Most recent SetupIntent processed by the reader.
    string|Setup_intent setup_intent;
};

# 
public type Issuing_physical_bundle_features record {
    # The policy for how to use card logo images in a card design with this physical bundle.
    "optional"|"required"|"unsupported" card_logo;
    # The policy for how to use carrier letter text in a card design with this physical bundle.
    "optional"|"required"|"unsupported" carrier_text;
    # The policy for how to use a second line on a card with this physical bundle.
    "optional"|"required"|"unsupported" second_line;
};

# Represents the Queries record for the operation: GetQuotesQuotePdf
public type GetQuotesQuotePdfQueries record {
    # Specifies which fields in the response should be expanded.
    GetQuotesQuotePdfQueriesExpandItemsString[] expand?;
};

public type DefaultaccounttaxidsItemsString string;

public type transactions_transaction_bodyExpandItemsString string;

# 
public type Plan_tier record {
    # Price for the entire tier.
    int? flat_amount?;
    # Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.
    string? flat_amount_decimal?;
    # Per unit price for units relevant to the tier.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
    # Up to and including to this quantity will be contained in the tier.
    int? up_to?;
};

public type setup_intents_bodyPaymentmethodtypesItemsString string;

# These fields can be used to create a new product that this price will belong to.
public type inline_product_params record {
    boolean active?;
    @constraint:String {maxLength: 5000}
    string id?;
    record {|string...;|} metadata?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    @constraint:String {maxLength: 5000}
    string tax_code?;
    @constraint:String {maxLength: 12}
    string unit_label?;
};

# Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.
public type recipient_shipping_with_optional_fields_address record {
    optional_fields_address address;
    @constraint:String {maxLength: 5000}
    string name;
    string|"" phone?;
};

public type base_config_param record {
    boolean enabled;
    record {} features?;
};

# Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.
public type shallow_order_specs record {
    order_item_specs[] items?;
    order_shipping shipping?;
};

# 
public type Mandate_revolut_pay record {
};

public type subscription_item_usage_records_bodyExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_cashapp record {
};

# 
public type Payment_method_details_cashapp record {
    # A unique and immutable identifier assigned by Cash App to every buyer.
    string? buyer_id?;
    # A public identifier for buyers using Cash App.
    string? cashtag?;
};

# 
public type Checkout_customer_balance_payment_method_options record {
    Checkout_customer_balance_bank_transfer_payment_method_options bank_transfer?;
    # The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.
    "bank_transfer"? funding_type?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type documents_paramFilesItemsString string;

public type quote_cancel_bodyExpandItemsString string;

# 
public type Payment_method_options_zip record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Climate_removals_beneficiary record {
    # Publicly displayable name for the end beneficiary of carbon removal.
    @constraint:String {maxLength: 5000}
    string public_name;
};

@constraint:String {maxLength: 5000}
public type GetIssuingPersonalizationDesignsPersonalizationDesignQueriesExpandItemsString string;

# 
public type Payment_method_twint record {
};

# Represents the Queries record for the operation: GetInvoices
public type GetInvoicesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesQueriesExpandItemsString[] expand?;
    # Only return invoices that were created during the given date interval.
    created_16 created?;
    # The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`.
    "charge_automatically"|"send_invoice" collection_method?;
    due_date due_date?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return invoices for the subscription specified by this subscription ID.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # Only return invoices for the customer specified by this customer ID.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
    "draft"|"open"|"paid"|"uncollectible"|"void" status?;
};

public type Reporting\.report_type record {
    int data_available_end;
    int data_available_start;
    Reporting\.report_typeDefaultcolumnsItemsString[]? default_columns?;
    string id;
    boolean livemode;
    string name;
    "reporting.report_type" 'object;
    int updated;
    int version;
};

public type intent_confirm_body record {|
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method?;
    # The client secret of the PaymentIntent.
    @constraint:String {maxLength: 5000}
    string client_secret?;
    # ID of the ConfirmationToken used to confirm this PaymentIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication).
    boolean error_on_requires_action?;
    # Specifies which fields in the response should be expanded.
    intent_confirm_bodyExpandItemsString[] expand?;
    # ID of the mandate that's used for this payment.
    @constraint:String {maxLength: 5000}
    string mandate?;
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|""|record {record {record {string ip_address?; string user_agent?;} online; "online" 'type;} customer_acceptance;} mandate_data?;
    # Set to `true` to indicate that the customer isn't in your checkout flow during this payment attempt and can't authenticate. Use this parameter in scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards).
    boolean|"one_off"|"recurring" off_session?;
    # ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    payment_method_data_params payment_method_data?;
    payment_method_options_param_14 payment_method_options?;
    # The list of payment method types (for example, a card) that this PaymentIntent can use. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    intent_confirm_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    radar_options_with_hidden_options_2 radar_options?;
    # Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string|"" receipt_email?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.
    # If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.
    # This parameter is only used for cards and other redirect-based payment methods.
    string return_url?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    # 
    # If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
    ""|"off_session"|"on_session" setup_future_usage?;
    # Shipping information for this PaymentIntent.
    record {record {string city?; string country?; string line1?; string line2?; string postal_code?; string state?;} address; string carrier?; string name; string phone?; string tracking_number?;}|"" shipping?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

# 
public type Customer_acceptance record {
    # The time that the customer accepts the mandate.
    int? accepted_at?;
    Offline_acceptance offline?;
    Online_acceptance online?;
    # The mandate includes the type of customer acceptance information, such as: `online` or `offline`.
    "offline"|"online" 'type;
};

# 
public type FinancialReportingFinanceReportTypeList record {
    Reporting\.report_type[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Treasury_transactions_resource_flow_details record {
    Treasury\.credit_reversal credit_reversal?;
    Treasury\.debit_reversal debit_reversal?;
    Treasury\.inbound_transfer inbound_transfer?;
    Issuing\.authorization issuing_authorization?;
    Treasury\.outbound_payment outbound_payment?;
    Treasury\.outbound_transfer outbound_transfer?;
    Treasury\.received_credit received_credit?;
    Treasury\.received_debit received_debit?;
    # Type of the flow that created the Transaction. Set to the same value as `flow_type`.
    "credit_reversal"|"debit_reversal"|"inbound_transfer"|"issuing_authorization"|"other"|"outbound_payment"|"outbound_transfer"|"received_credit"|"received_debit" 'type;
};

# Represents the Queries record for the operation: GetTransfersTransfer
public type GetTransfersTransferQueries record {
    # Specifies which fields in the response should be expanded.
    GetTransfersTransferQueriesExpandItemsString[] expand?;
};

# The parameters that you can use to automatically create a Transfer.
# Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
public type transfer_data_creation_params record {
    int amount?;
    string destination;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer record {
    # The banking network used for this funding.
    "ach"|"domestic_wire_us"|"swift" network?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
};

# Details about a failed InboundTransfer.
public type failure_details_params record {
    "account_closed"|"account_frozen"|"bank_account_restricted"|"bank_ownership_changed"|"debit_not_authorized"|"incorrect_account_holder_address"|"incorrect_account_holder_name"|"incorrect_account_holder_tax_id"|"insufficient_funds"|"invalid_account_number"|"invalid_currency"|"no_account"|"other" code?;
};

# Represents the Queries record for the operation: GetTreasuryFinancialAccountsFinancialAccountFeatures
public type GetTreasuryFinancialAccountsFinancialAccountFeaturesQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryFinancialAccountsFinancialAccountFeaturesQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerTaxIdsQueriesExpandItemsString string;

public type dispute_close_bodyExpandItemsString string;

# 
public type Payment_pages_checkout_session_automatic_tax record {
    # Indicates whether automatic tax is enabled for the session
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
    # The status of the most recent automated tax calculation for this session.
    "complete"|"failed"|"requires_location_inputs"? status?;
};

public type Source_type_alipay record {
    string? data_string?;
    string? native_url?;
    string? statement_descriptor?;
};

@constraint:String {maxLength: 5000}
public type GetBalanceTransactionsIdQueriesExpandItemsString string;

public type Source_type_sofort record {
    string? bank_code?;
    string? bank_name?;
    string? bic?;
    string? country?;
    string? iban_last4?;
    string? preferred_language?;
    string? statement_descriptor?;
};

# Represents the Queries record for the operation: GetDisputesDispute
public type GetDisputesDisputeQueries record {
    # Specifies which fields in the response should be expanded.
    GetDisputesDisputeQueriesExpandItemsString[] expand?;
};

# Represents the Queries record for the operation: GetTopups
public type GetTopupsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # A positive integer representing how much to transfer.
    amount amount?;
    # Specifies which fields in the response should be expanded.
    GetTopupsQueriesExpandItemsString[] expand?;
    # A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    created_41 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`.
    "canceled"|"failed"|"pending"|"succeeded" status?;
};

# 
public type Source_receiver_flow record {
    # The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.
    string? address?;
    # The total amount that was moved to your balance. This is almost always equal to the amount charged. In rare cases when customers deposit excess funds and we are unable to refund those, those funds get moved to your balance and show up in amount_charged as well. The amount charged is expressed in the source's currency.
    int amount_charged;
    # The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` should be true for consumed sources unless customers deposit excess funds. The amount received is expressed in the source's currency.
    int amount_received;
    # The total amount that was returned to the customer. The amount returned is expressed in the source's currency.
    int amount_returned;
    # Type of refund attribute method, one of `email`, `manual`, or `none`.
    @constraint:String {maxLength: 5000}
    string refund_attributes_method;
    # Type of refund attribute status, one of `missing`, `requested`, or `available`.
    @constraint:String {maxLength: 5000}
    string refund_attributes_status;
};

# 
public type Dispute_payment_method_details_card record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    @constraint:String {maxLength: 5000}
    string brand;
    # The card network's specific dispute reason code, which maps to one of Stripe's primary dispute categories to simplify response guidance. The [Network code map](https://stripe.com/docs/disputes/categories#network-code-map) lists all available dispute reason codes by network.
    string? network_reason_code?;
};

@constraint:String {maxLength: 5000}
public type GetPricesQueriesExpandItemsString string;

# 
public type Deleted_person record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "person" 'object;
};

public type tax_calculations_bodyExpandItemsString string;

# 
public type Mandate_multi_use record {
};

# 
public type Payment_intent_payment_method_options_eps record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type intent_apply_customer_balance_body record {|
    # Amount that you intend to apply to this PaymentIntent from the customer’s cash balance.
    # 
    # A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (for example, 100 cents to charge 1 USD or 100 to charge 100 JPY, a zero-decimal currency).
    # 
    # The maximum amount is the amount of the PaymentIntent.
    # 
    # When you omit the amount, it defaults to the remaining amount requested on the PaymentIntent.
    int amount?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency?;
    # Specifies which fields in the response should be expanded.
    intent_apply_customer_balance_bodyExpandItemsString[] expand?;
|};

public type subscription_schedule_default_settings_param record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    int days_until_due?;
    param_3 issuer?;
};

@constraint:String {maxLength: 5000}
public type Payment_method_details_interac_presentPreferredlocalesItemsString string;

# 
public type CreditNotesList record {
    Credit_note[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Information about a mandate possibility attached to a source object (generally for bank debits) as well as its acceptance status.
public type mandate_params record {
    mandate_acceptance_params acceptance?;
    int|"" amount?;
    string currency?;
    "one_time"|"scheduled"|"variable" interval?;
    "deprecated_none"|"email"|"manual"|"none"|"stripe_email" notification_method?;
};

# 
public type Payment_method_details_afterpay_clearpay record {
    # The Afterpay order ID associated with this payment intent.
    string? order_id?;
    # Order identifier shown to the merchant in Afterpay’s online portal.
    string? reference?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    http:BearerTokenConfig|http:CredentialsConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};

public type individual_specs_1 record {
    address_specs address?;
    japan_address_kana_specs address_kana?;
    japan_address_kanji_specs address_kanji?;
    record {int day; int month; int year;}|"" dob?;
    string email?;
    @constraint:String {maxLength: 100}
    string first_name?;
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    string gender?;
    @constraint:String {maxLength: 5000}
    string id_number?;
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    @constraint:String {maxLength: 100}
    string last_name?;
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    record {|string...;|}|"" metadata?;
    string phone?;
    "existing"|"none" political_exposure?;
    address_specs registered_address?;
    individual_relationship_specs relationship?;
    @constraint:String {maxLength: 5000}
    string ssn_last_4?;
    person_verification_specs verification?;
};

# 
public type Issuing_network_token_address record {
    # The street address of the cardholder tokenizing the card.
    @constraint:String {maxLength: 5000}
    string line1;
    # The postal code of the cardholder tokenizing the card.
    @constraint:String {maxLength: 5000}
    string postal_code;
};

# Object representing the subscription schedule's default settings.
public type default_settings_params record {
    decimal application_fee_percent?;
    automatic_tax_config_3 automatic_tax?;
    "automatic"|"phase_start" billing_cycle_anchor?;
    record {int amount_gte?; boolean reset_billing_cycle_anchor?;}|"" billing_thresholds?;
    "charge_automatically"|"send_invoice" collection_method?;
    @constraint:String {maxLength: 5000}
    string default_payment_method?;
    string|"" description?;
    subscription_schedule_default_settings_param invoice_settings?;
    string|"" on_behalf_of?;
    record {decimal amount_percent?; string destination;}|"" transfer_data?;
};

# 
public type Gelato_session_phone_options record {
    # Request one time password verification of `provided_details.phone`.
    boolean require_verification?;
};

# Represents the Queries record for the operation: GetPaymentMethods
public type GetPaymentMethodsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetPaymentMethodsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
    # An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.
    "acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip" 'type?;
    # The ID of the customer whose PaymentMethods will be retrieved.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type Dispute_payment_method_details_klarna record {
    # The reason for the dispute as defined by Klarna
    string? reason_code?;
};

# Represents a reader action to set the reader display
public type Terminal_reader_reader_resource_set_reader_display_action record {
    # Cart object to be displayed by the reader.
    Terminal_reader_reader_resource_cart? cart?;
    # Type of information to be displayed by the reader.
    "cart" 'type;
};

# 
public type Tax_product_resource_tax_calculation_shipping_cost record {
    # The shipping amount in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If `tax_behavior=inclusive`, then this amount includes taxes. Otherwise, taxes were calculated on top of this amount.
    int amount;
    # The amount of tax calculated for shipping, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount_tax;
    # The ID of an existing [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    # Specifies whether the `amount` includes taxes. If `tax_behavior=inclusive`, then the amount includes taxes.
    "exclusive"|"inclusive" tax_behavior;
    # Detailed account of taxes relevant to shipping cost.
    Tax_product_resource_line_item_tax_breakdown[] tax_breakdown?;
    # The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for shipping.
    @constraint:String {maxLength: 5000}
    string tax_code;
};

@constraint:String {maxLength: 5000}
public type GetSourcesSourceQueriesExpandItemsString string;

public type Billing_portal\.configuration record {
    boolean active;
    string|Application|Deleted_application? application?;
    Portal_business_profile business_profile;
    int created;
    string? default_return_url?;
    Portal_features features;
    string id;
    boolean is_default;
    boolean livemode;
    Portal_login_page login_page;
    record {|string...;|}? metadata?;
    "billing_portal.configuration" 'object;
    int updated;
};

# The account holder to link accounts for.
public type accountholder_params_1 record {
    @constraint:String {maxLength: 5000}
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
    "account"|"customer" 'type;
};

public type accountholder_params_2 record {
    @constraint:String {maxLength: 5000}
    string account?;
    @constraint:String {maxLength: 5000}
    string customer?;
};

public type transactions_create_reversal_bodyExpandItemsString string;

public type id_return_body_1 record {|
    # Specifies which fields in the response should be expanded.
    id_return_body_1ExpandItemsString[] expand?;
    returned_details_params returned_details?;
|};

public type radar_value_list_items_body record {|
    # Specifies which fields in the response should be expanded.
    radar_value_list_items_bodyExpandItemsString[] expand?;
    # The value of the item (whose type must match the type of the parent value list).
    @constraint:String {maxLength: 800}
    string value;
    # The identifier of the value list which the created item will be added to.
    @constraint:String {maxLength: 5000}
    string value_list;
|};

@constraint:String {maxLength: 5000}
public type GetDisputesDisputeQueriesExpandItemsString string;

public type issuing_cards_body record {|
    # The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) object with which the card will be associated.
    @constraint:String {maxLength: 5000}
    string cardholder?;
    # The currency for the card.
    string currency;
    # Specifies which fields in the response should be expanded.
    issuing_cards_bodyExpandItemsString[] expand?;
    string financial_account?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The personalization design object belonging to this card.
    @constraint:String {maxLength: 5000}
    string personalization_design?;
    encrypted_pin_param pin?;
    # The card this is meant to be a replacement for (if any).
    @constraint:String {maxLength: 5000}
    string replacement_for?;
    # If `replacement_for` is specified, this should indicate why that card is being replaced.
    "damaged"|"expired"|"lost"|"stolen" replacement_reason?;
    # The second line to print on the card.
    string|"" second_line?;
    shipping_specs shipping?;
    authorization_controls_param spending_controls?;
    # Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`.
    "active"|"inactive" status?;
    # The type of card to issue. Possible values are `physical` or `virtual`.
    "physical"|"virtual" 'type;
|};

# 
public type Tax_product_registrations_resource_country_options_us_local_amusement_tax record {
    # A [FIPS code](https://www.census.gov/library/reference/code-lists/ansi.html) representing the local jurisdiction.
    @constraint:String {maxLength: 5000}
    string jurisdiction;
};

# Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.
public type automatic_tax_config_4 record {
    boolean enabled;
    param_3 liability?;
};

public type automatic_tax_config_3 record {
    boolean enabled;
    param_3 liability?;
};

public type buy_button_param record {
    boolean enabled;
};

public type automatic_tax_config_2 record {
    boolean enabled;
    param_2 liability?;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline. One of `price` or `price_data` is required.
public type recurring_price_data_2 record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type automatic_tax_config_1 record {
    boolean enabled;
    param liability?;
};

# The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.
public type subscription_details_params record {
    "now"|"unchanged"|int billing_cycle_anchor?;
    int|"" cancel_at?;
    boolean cancel_at_period_end?;
    boolean cancel_now?;
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    subscription_item_update_params[] items?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
    int proration_date?;
    "now" resume_at?;
    int start_date?;
    "now"|int trial_end?;
};

# Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.
public type recurring_price_data_1 record {
    string currency;
    @constraint:String {maxLength: 5000}
    string product;
    recurring_adhoc recurring;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    int unit_amount?;
    string unit_amount_decimal?;
};

public type file_links_bodyExpandItemsString string;

public type payment_links_bodyExpandItemsString string;

# 
public type BankAccountList record {
    # Details about each object.
    Bank_account[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Configuration for each component. Exactly 1 component must be enabled.
public type components record {
    buy_button_param buy_button?;
    payment_element_param payment_element?;
    pricing_table_param pricing_table?;
};

@constraint:String {maxLength: 5000}
public type External_account_requirementsPendingverificationItemsString string;

public type customers_customer_bodyExpandItemsString string;

# 
public type Payment_method_details_paynow record {
    # Reference number associated with this PayNow payment
    string? reference?;
};

public type setup_intents_intent_bodyPaymentmethodtypesItemsString string;

# Represents the Queries record for the operation: GetInvoicesUpcomingLines
public type GetInvoicesUpcomingLinesQueries record {
    # A list of up to 20 subscription items, each with an attached price. This field has been deprecated and will be removed in a future API version. Use `subscription_details.items` instead.
    subscription_item_update_params[] subscription_items?;
    # List of invoice items to add or update in the upcoming invoice preview.
    invoice_item_preview_params[] invoice_items?;
    # For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.billing_cycle_anchor` instead.
    subscription_billing_cycle_anchor_1 subscription_billing_cycle_anchor?;
    # The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_details.items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_details.items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    @constraint:String {maxLength: 5000}
    string subscription?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    param_3 issuer?;
    # This simulates the subscription being canceled or expired immediately. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_now` instead.
    boolean subscription_cancel_now?;
    # Details about the customer you want to invoice or overrides for an existing customer. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    customer_details_param_2 customer_details?;
    # Boolean indicating whether this subscription should cancel at the end of the current period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at_period_end` instead.
    boolean subscription_cancel_at_period_end?;
    # The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the subscription or customer. This works for both coupons directly applied to an invoice and coupons applied to a subscription. Pass an empty string to avoid inheriting any discounts.
    discounts_1 discounts?;
    # For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. This field has been deprecated and will be removed in a future API version. Use `subscription_details.resume_at` instead.
    "now" subscription_resume_at?;
    # Date a subscription is intended to start (can be future or past). This field has been deprecated and will be removed in a future API version. Use `subscription_details.start_date` instead.
    int subscription_start_date?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The currency to preview this invoice in. Defaults to that of `customer` if not specified.
    string currency?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_date` instead.
    int subscription_proration_date?;
    # The schedule creation or modification params to apply as a preview. Cannot be used with `subscription` or `subscription_` prefixed fields.
    schedule_details_params_2 schedule_details?;
    # The ID of the coupon to apply to this phase of the subscription schedule. This field has been deprecated and will be removed in a future API version. Use `discounts` instead.
    @constraint:String {maxLength: 5000}
    string coupon?;
    # The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.
    on_behalf_of_1 on_behalf_of?;
    # If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. This field has been deprecated and will be removed in a future API version. Use `subscription_details.trial_end` instead.
    subscription_trial_end_1 subscription_trial_end?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The identifier of the schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    @constraint:String {maxLength: 5000}
    string schedule?;
    # Specifies which fields in the response should be expanded.
    GetInvoicesUpcomingLinesQueriesExpandItemsString[] expand?;
    # Settings for automatic tax lookup for this invoice preview.
    automatic_tax_param_3 automatic_tax?;
    # The subscription creation or modification params to apply as a preview. Cannot be used with `schedule` or `schedule_details` fields.
    subscription_details_params_2 subscription_details?;
    # A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. This field has been deprecated and will be removed in a future API version. Use `subscription_details.cancel_at` instead.
    subscription_cancel_at_1 subscription_cancel_at?;
    # If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. This field has been deprecated and will be removed in a future API version. Use `subscription_details.default_tax_rates` instead.
    subscription_default_tax_rates_1 subscription_default_tax_rates?;
    # Determines how to handle [prorations](https://stripe.com/docs/billing/subscriptions/prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. This field has been deprecated and will be removed in a future API version. Use `subscription_details.proration_behavior` instead.
    "always_invoice"|"create_prorations"|"none" subscription_proration_behavior?;
    # Customizes the types of values to include when calculating the invoice. Defaults to `next` if unspecified.
    "next"|"recurring" preview_mode?;
    # The identifier of the customer whose upcoming invoice you'd like to retrieve. If `automatic_tax` is enabled then one of `customer`, `customer_details`, `subscription`, or `schedule` must be set.
    @constraint:String {maxLength: 5000}
    string customer?;
};

# 
public type ExchangeRateList record {
    Exchange_rate[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/exchange_rates`}
    string url;
};

# Represents the Queries record for the operation: GetCustomersCustomerTaxIdsId
public type GetCustomersCustomerTaxIdsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerTaxIdsIdQueriesExpandItemsString[] expand?;
};

public type tax_settings_bodyExpandItemsString string;

public type line_item_paramsTaxratesItemsString string;

# Represents the Queries record for the operation: GetCustomersCustomerPaymentMethodsPaymentMethod
public type GetCustomersCustomerPaymentMethodsPaymentMethodQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerPaymentMethodsPaymentMethodQueriesExpandItemsString[] expand?;
};

public type financial_connections_sessions_body record {|
    accountholder_params_1 account_holder;
    # Specifies which fields in the response should be expanded.
    financial_connections_sessions_bodyExpandItemsString[] expand?;
    filters_params filters?;
    # List of data features that you would like to request access to.
    # 
    # Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.
    (financial_connections_sessions_bodyPermissionsItemsString)[] permissions;
    # List of data features that you would like to retrieve upon account creation.
    ("balances"|"ownership"|"transactions")[] prefetch?;
    # For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.
    @constraint:String {maxLength: 5000}
    string return_url?;
|};

public type subscription_cancel_creation_param record {
    subscription_cancellation_reason_creation_param cancellation_reason?;
    boolean enabled;
    "at_period_end"|"immediately" mode?;
    "always_invoice"|"create_prorations"|"none" proration_behavior?;
};

# 
public type Account_payments_settings record {
    # The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.
    string? statement_descriptor?;
    # The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only)
    string? statement_descriptor_kana?;
    # The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only)
    string? statement_descriptor_kanji?;
    # The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kana?;
    # The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kanji?;
};

# 
public type Payment_method_details_card_checks record {
    # If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_line1_check?;
    # If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? address_postal_code_check?;
    # If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.
    string? cvc_check?;
};

public type authorization_controls_paramAllowedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

# Additional purchase information that is optionally provided by the merchant.
public type purchase_details_specs record {
    fleet_specs_1 fleet?;
    flight_specs flight?;
    fuel_specs_1 fuel?;
    lodging_specs lodging?;
    receipt_specs[] receipt?;
    @constraint:String {maxLength: 5000}
    string reference?;
};

# 
public type Refund_next_action record {
    # Contains the refund details.
    Refund_next_action_display_details? display_details?;
    # Type of the next action to perform.
    @constraint:String {maxLength: 5000}
    string 'type;
};

@constraint:String {maxLength: 5000}
public type GetClimateProductsProductQueriesExpandItemsString string;

public type Treasury\.outbound_payment record {
    int amount;
    boolean cancelable;
    int created;
    string currency;
    string? customer?;
    string? description?;
    string? destination_payment_method?;
    Outbound_payments_payment_method_details? destination_payment_method_details?;
    Treasury_outbound_payments_resource_outbound_payment_resource_end_user_details? end_user_details?;
    int expected_arrival_date;
    string financial_account;
    string? hosted_regulatory_receipt_url?;
    string id;
    boolean livemode;
    record {|string...;|} metadata;
    "treasury.outbound_payment" 'object;
    Treasury_outbound_payments_resource_returned_status? returned_details?;
    string statement_descriptor;
    "canceled"|"failed"|"posted"|"processing"|"returned" status;
    Treasury_outbound_payments_resource_outbound_payment_resource_status_transitions status_transitions;
    Treasury_outbound_payments_resource_outbound_payment_resource_tracking_details? tracking_details?;
    string|Treasury\.transaction 'transaction;
};

# 
public type Checkout_acss_debit_mandate_options record {
    # A URL for custom mandate text
    @constraint:String {maxLength: 5000}
    string custom_mandate_url?;
    # List of Stripe products where this mandate can be selected automatically. Returned when the Session is in `setup` mode.
    ("invoice"|"subscription")[] default_for?;
    # Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.
    string? interval_description?;
    # Payment schedule for the mandate.
    "combined"|"interval"|"sporadic"? payment_schedule?;
    # Transaction type of the mandate.
    "business"|"personal"? transaction_type?;
};

# 
public type Payment_method_options_klarna record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred locale of the Klarna checkout page that the customer is redirected to.
    string? preferred_locale?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

@constraint:String {maxLength: 5000}
public type GetCreditNotesPreviewQueriesExpandItemsString string;

public type products_id_bodyExpandItemsString string;

public type invoices_invoice_bodyExpandItemsString string;

public type refunds_id_bodyExpandItemsString string;

public type account_features_param record {
    boolean external_account_collection?;
};

public type orders_order_body record {|
    # Publicly sharable reference for the end beneficiary of carbon removal. Assumed to be the Stripe account if not set.
    record {string|"" public_name;}|"" beneficiary?;
    # Specifies which fields in the response should be expanded.
    orders_order_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
|};

# Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.
public type fixed_amount_1 record {
    int amount;
    string currency;
    record {|currency_option...;|} currency_options?;
};

@constraint:String {maxLength: 5000}
public type GetChargesSearchQueriesExpandItemsString string;

# Represents the Queries record for the operation: GetTaxTransactionsTransaction
public type GetTaxTransactionsTransactionQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxTransactionsTransactionQueriesExpandItemsString[] expand?;
};

public type Source_type_bancontact record {
    string? bank_code?;
    string? bank_name?;
    string? bic?;
    string? iban_last4?;
    string? preferred_language?;
    string? statement_descriptor?;
};

@constraint:String {maxLength: 5000}
public type Country_spec_verification_field_detailsMinimumItemsString string;

public type treasury_credit_reversals_body record {|
    # Specifies which fields in the response should be expanded.
    treasury_credit_reversals_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The ReceivedCredit to reverse.
    @constraint:String {maxLength: 5000}
    string received_credit;
|};

# 
public type Tax_product_resource_customer_details_resource_tax_id record {
    # The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, or `unknown`
    "ad_nrt"|"ae_trn"|"ar_cuit"|"au_abn"|"au_arn"|"bg_uic"|"bh_vat"|"bo_tin"|"br_cnpj"|"br_cpf"|"ca_bn"|"ca_gst_hst"|"ca_pst_bc"|"ca_pst_mb"|"ca_pst_sk"|"ca_qst"|"ch_uid"|"ch_vat"|"cl_tin"|"cn_tin"|"co_nit"|"cr_tin"|"de_stn"|"do_rcn"|"ec_ruc"|"eg_tin"|"es_cif"|"eu_oss_vat"|"eu_vat"|"gb_vat"|"ge_vat"|"hk_br"|"hu_tin"|"id_npwp"|"il_vat"|"in_gst"|"is_vat"|"jp_cn"|"jp_rn"|"jp_trn"|"ke_pin"|"kr_brn"|"kz_bin"|"li_uid"|"mx_rfc"|"my_frp"|"my_itn"|"my_sst"|"ng_tin"|"no_vat"|"no_voec"|"nz_gst"|"om_vat"|"pe_ruc"|"ph_tin"|"ro_tin"|"rs_pib"|"ru_inn"|"ru_kpp"|"sa_vat"|"sg_gst"|"sg_uen"|"si_tin"|"sv_nit"|"th_vat"|"tr_tin"|"tw_vat"|"ua_vat"|"unknown"|"us_ein"|"uy_ruc"|"ve_rif"|"vn_tin"|"za_vat" 'type;
    # The value of the tax ID.
    @constraint:String {maxLength: 5000}
    string value;
};

# Events are our way of letting you know when something interesting happens in
# your account. When an interesting event occurs, we create a new `Event`
# object. For example, when a charge succeeds, we create a `charge.succeeded`
# event, and when an invoice payment attempt fails, we create an
# `invoice.payment_failed` event. Certain API requests might create multiple
# events. For example, if you create a new subscription for a
# customer, you receive both a `customer.subscription.created` event and a
# `charge.succeeded` event.
# 
# Events occur when the state of another API resource changes. The event's data
# field embeds the resource's state at the time of the change. For
# example, a `charge.succeeded` event contains a charge, and an
# `invoice.payment_failed` event contains an invoice.
# 
# As with other API resources, you can use endpoints to retrieve an
# [individual event](https://stripe.com/docs/api#retrieve_event) or a [list of events](https://stripe.com/docs/api#list_events)
# from the API. We also have a separate
# [webhooks](http://en.wikipedia.org/wiki/Webhook) system for sending the
# `Event` objects directly to an endpoint on your server. You can manage
# webhooks in your
# [account settings](https://dashboard.stripe.com/account/webhooks). Learn how
# to [listen for events](https://docs.stripe.com/webhooks)
# so that your integration can automatically trigger reactions.
# 
# When using [Connect](https://docs.stripe.com/connect), you can also receive event notifications
# that occur in connected accounts. For these events, there's an
# additional `account` attribute in the received `Event` object.
# 
# We only guarantee access to events through the [Retrieve Event API](https://stripe.com/docs/api#retrieve_event)
# for 30 days.
public type Event record {
    # The connected account that originates the event.
    @constraint:String {maxLength: 5000}
    string account?;
    # The Stripe API version used to render `data`. This property is populated only for events on or after October 31, 2014.
    string? api_version?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    Notification_event_data data;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # String representing the object's type. Objects of the same type share the same value.
    "event" 'object;
    # Number of webhooks that haven't been successfully delivered (for example, to return a 20x response) to the URLs you specify.
    int pending_webhooks;
    # Information on the API request that triggers the event.
    Notification_event_request? request?;
    # Description of the event (for example, `invoice.created` or `charge.refunded`).
    @constraint:String {maxLength: 5000}
    string 'type;
};

# 
public type Payment_method_details_card_present_receipt record {
    # The type of account being debited or credited
    "checking"|"credit"|"prepaid"|"unknown" account_type?;
    # EMV tag 9F26, cryptogram generated by the integrated circuit chip.
    string? application_cryptogram?;
    # Mnenomic of the Application Identifier.
    string? application_preferred_name?;
    # Identifier for this transaction.
    string? authorization_code?;
    # EMV tag 8A. A code returned by the card issuer.
    string? authorization_response_code?;
    # Describes the method used by the cardholder to verify ownership of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`, `offline_pin_and_signature`, `online_pin`, or `signature`.
    string? cardholder_verification_method?;
    # EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.
    string? dedicated_file_name?;
    # The outcome of a series of EMV functions performed by the card reader.
    string? terminal_verification_results?;
    # An indication of various EMV functions performed during the transaction.
    string? transaction_status_information?;
};

# Represents the Queries record for the operation: GetTreasuryOutboundTransfersOutboundTransfer
public type GetTreasuryOutboundTransfersOutboundTransferQueries record {
    # Specifies which fields in the response should be expanded.
    GetTreasuryOutboundTransfersOutboundTransferQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_cardholder_verification record {
    # An identifying document, either a passport or local ID card.
    Issuing_cardholder_id_document? document?;
};

public type Issuing\.authorization record {
    int amount;
    Issuing_authorization_amount_details? amount_details?;
    boolean approved;
    "chip"|"contactless"|"keyed_in"|"online"|"swipe" authorization_method;
    Balance_transaction[] balance_transactions;
    Issuing\.card card;
    string|Issuing\.cardholder? cardholder?;
    int created;
    string currency;
    Issuing_authorization_fleet_data? fleet?;
    Issuing_authorization_fuel_data? fuel?;
    string id;
    boolean livemode;
    int merchant_amount;
    string merchant_currency;
    Issuing_authorization_merchant_data merchant_data;
    record {|string...;|} metadata;
    Issuing_authorization_network_data? network_data?;
    "issuing.authorization" 'object;
    Issuing_authorization_pending_request? pending_request?;
    Issuing_authorization_request[] request_history;
    "closed"|"pending"|"reversed" status;
    string|Issuing\.token? token?;
    Issuing\.transaction[] transactions;
    Issuing_authorization_treasury? treasury?;
    Issuing_authorization_verification_data verification_data;
    string? wallet?;
};

# 
public type Issuing_card_spending_limit record {
    # Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? categories?;
    # Interval (or event) to which the amount applies.
    "all_time"|"daily"|"monthly"|"per_authorization"|"weekly"|"yearly" interval;
};

public type credit_notes_id_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetTaxSettings
public type GetTaxSettingsQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxSettingsQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type GetSigmaScheduledQueryRunsScheduledQueryRunQueriesExpandItemsString string;

# 
public type Payment_intent_next_action_boleto record {
    # The timestamp after which the boleto expires.
    int? expires_at?;
    # The URL to the hosted boleto voucher page, which allows customers to view the boleto voucher.
    string? hosted_voucher_url?;
    # The boleto number.
    string? number?;
    # The URL to the downloadable boleto voucher PDF.
    string? pdf?;
};

public type tax_rates_body record {|
    # Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.
    boolean active?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country?;
    # An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.
    @constraint:String {maxLength: 5000}
    string description?;
    # The display name of the tax rate, which will be shown to users.
    @constraint:String {maxLength: 50}
    string display_name;
    # Specifies which fields in the response should be expanded.
    tax_rates_bodyExpandItemsString[] expand?;
    # This specifies if the tax rate is inclusive or exclusive.
    boolean inclusive;
    # The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.
    @constraint:String {maxLength: 50}
    string jurisdiction?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # This represents the tax rate percent out of 100.
    decimal percentage;
    # [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, "NY" for New York, United States.
    @constraint:String {maxLength: 2}
    string state?;
    # The high-level tax type, such as `vat` or `sales_tax`.
    "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;
|};

# 
public type Mandate_au_becs_debit record {
    # The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_pages_checkout_session_total_details_resource_breakdown record {
    # The aggregated discounts.
    Line_items_discount_amount[] discounts;
    # The aggregated tax amounts by rate.
    Line_items_tax_amount[] taxes;
};

public type invoice_add_lines_bodyExpandItemsString string;

# 
public type TreasuryReceivedCreditsResourceReceivedCreditList record {
    # Details about each object.
    Treasury\.received_credit[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

public type authorization_controls_paramBlockedmerchantcountriesItemsString string;

public type review_approve_body record {|
    # Specifies which fields in the response should be expanded.
    review_approve_bodyExpandItemsString[] expand?;
|};

# 
public type Reserve_transaction record {
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "reserve_transaction" 'object;
};

# Represents the Queries record for the operation: GetTerminalReadersReader
public type GetTerminalReadersReaderQueries record {
    # Specifies which fields in the response should be expanded.
    GetTerminalReadersReaderQueriesExpandItemsString[] expand?;
};

@constraint:String {maxLength: 5000}
public type Account_requirementsCurrentlydueItemsString string;

# 
public type Tax_product_registrations_resource_country_options_ca_province_standard record {
    # Two-letter CA province code ([ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).
    @constraint:String {maxLength: 5000}
    string province;
};

# 
public type Payment_pages_checkout_session_custom_fields_option record {
    # The label for the option, displayed to the customer. Up to 100 characters.
    @constraint:String {maxLength: 5000}
    string label;
    # The value for this option, not displayed to the customer, used by your integration to reconcile the option selected by the customer. Must be unique to this option, alphanumeric, and up to 100 characters.
    @constraint:String {maxLength: 5000}
    string value;
};

@constraint:String {maxLength: 5000}
public type GetTaxCodesIdQueriesExpandItemsString string;

public type legal_entity_and_kyc_address_specs record {
    @constraint:String {maxLength: 100}
    string city?;
    @constraint:String {maxLength: 5000}
    string country?;
    @constraint:String {maxLength: 200}
    string line1?;
    @constraint:String {maxLength: 200}
    string line2?;
    @constraint:String {maxLength: 5000}
    string postal_code?;
    @constraint:String {maxLength: 5000}
    string state?;
};

# Represents the Queries record for the operation: GetTaxIdsId
public type GetTaxIdsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetTaxIdsIdQueriesExpandItemsString[] expand?;
};

# 
public type Payment_method_config_biz_payment_method_configuration_details record {
    # ID of the payment method configuration used.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the parent payment method configuration used.
    string? parent?;
};

@constraint:String {maxLength: 5000}
public type GetReviewsQueriesExpandItemsString string;

public type person_verification_param record {
    person_verification_document_param document?;
};

# 
public type Setup_attempt_payment_method_details_acss_debit record {
};

public type custom_unit_amount record {
    boolean enabled;
    int maximum?;
    int minimum?;
    int preset?;
};

public type Issuing\.cardholder record {
    Issuing_cardholder_address billing;
    Issuing_cardholder_company? company?;
    int created;
    string? email?;
    string id;
    Issuing_cardholder_individual? individual?;
    boolean livemode;
    record {|string...;|} metadata;
    string name;
    "issuing.cardholder" 'object;
    string? phone_number?;
    ("de"|"en"|"es"|"fr"|"it")[]? preferred_locales?;
    Issuing_cardholder_requirements requirements;
    Issuing_cardholder_authorization_controls? spending_controls?;
    "active"|"blocked"|"inactive" status;
    "company"|"individual" 'type;
};

# Change to a FinancialAccount's balance
public type Treasury_transactions_resource_balance_impact record {
    # The change made to funds the user can spend right now.
    int cash;
    # The change made to funds that are not spendable yet, but will become available at a later time.
    int inbound_pending;
    # The change made to funds in the account, but not spendable because they are being held for pending outbound flows.
    int outbound_pending;
};

# Generate a post-purchase Invoice for one-time payments.
public type invoice_creation_update_params record {
    boolean enabled;
    invoice_settings_params_1 invoice_data?;
};

# 
public type Confirmation_tokens_resource_shipping record {
    Address address;
    # Recipient name.
    @constraint:String {maxLength: 5000}
    string name;
    # Recipient phone (including extension).
    string? phone?;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_transferred_to_balance record {
    # The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds transferred to your Stripe balance.
    string|Balance_transaction balance_transaction;
};

public type intent_confirm_bodyPaymentmethodtypesItemsString string;

public type payment_method_domains_payment_method_domain_bodyExpandItemsString string;

public type shipping_deliver_bodyExpandItemsString string;

# 
public type Issuing_cardholder_authorization_controls record {
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? allowed_categories?;
    # Array of strings containing representing countries from which authorizations will be allowed. Authorizations from merchants in all other countries will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `blocked_merchant_countries`. Provide an empty value to unset this control.
    Issuing_cardholder_authorization_controlsAllowedmerchantcountriesItemsString[]? allowed_merchant_countries?;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? blocked_categories?;
    # Array of strings containing representing countries from which authorizations will be declined. Country codes should be ISO 3166 alpha-2 country codes (e.g. `US`). Cannot be set with `allowed_merchant_countries`. Provide an empty value to unset this control.
    Issuing_cardholder_authorization_controlsBlockedmerchantcountriesItemsString[]? blocked_merchant_countries?;
    # Limit spending with amount-based rules that apply across this cardholder's cards.
    Issuing_cardholder_spending_limit[]? spending_limits?;
    # Currency of the amounts within `spending_limits`.
    string? spending_limits_currency?;
};

public type invoice_remove_lines_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetPaymentLinksPaymentLink
public type GetPaymentLinksPaymentLinkQueries record {
    # Specifies which fields in the response should be expanded.
    GetPaymentLinksPaymentLinkQueriesExpandItemsString[] expand?;
};

# 
public type Mandate_single_use record {
    # The amount of the payment on a single use mandate.
    int amount;
    # The currency of the payment on a single use mandate.
    string currency;
};

# Subscription items allow you to create customer subscriptions with more than
# one plan, making it easy to represent complex billing relationships.
public type Subscription_item record {
    # Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period
    Subscription_item_billing_thresholds? billing_thresholds?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # The discounts applied to the subscription item. Subscription item discounts are applied before subscription discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[] discounts;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "subscription_item" 'object;
    Price price;
    # The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.
    int quantity?;
    # The `subscription` this `subscription_item` belongs to.
    @constraint:String {maxLength: 5000}
    string subscription;
    # The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
    Tax_rate[]? tax_rates?;
};

public type on_behalf_of_1 string|"";

public type order_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    order_cancel_bodyExpandItemsString[] expand?;
|};

# Shipping information for the charge. Helps prevent fraud on charges for physical goods.
public type optional_fields_shipping record {
    optional_fields_address address;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 5000}
    string name;
    @constraint:String {maxLength: 5000}
    string phone?;
    @constraint:String {maxLength: 5000}
    string tracking_number?;
};

public type method_params record {
    delivery_estimate delivery_estimate?;
    @constraint:String {maxLength: 100}
    string display_name;
    fixed_amount fixed_amount?;
    record {|string...;|} metadata?;
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
    string tax_code?;
    "fixed_amount" 'type?;
};

public type financial_connections_sessions_bodyExpandItemsString string;

public type account_refresh_body_1 record {|
    # Specifies which fields in the response should be expanded.
    account_refresh_body_1ExpandItemsString[] expand?;
    # The list of account features that you would like to refresh.
    ("balance"|"ownership"|"transactions")[] features;
|};

@constraint:String {maxLength: 5000}
public type GetIdentityVerificationSessionsSessionQueriesExpandItemsString string;

# Specifies the requirements that Stripe collects from connected accounts in the Connect Onboarding flow.
public type collection_options_params record {
    "currently_due"|"eventually_due" fields;
    "include"|"omit" future_requirements?;
};

# 
public type Tax_product_resource_tax_settings_status_details_resource_active record {
};

public type radar_value_lists_bodyExpandItemsString string;

# 
public type Issuing_transaction_receipt_data record {
    # The description of the item. The maximum length of this field is 26 characters.
    string? description?;
    # The quantity of the item.
    decimal? quantity?;
    # The total for this line item in cents.
    int? total?;
    # The unit cost of the item in cents.
    int? unit_cost?;
};

# 
public type Account_business_profile record {
    # The applicant's gross annual revenue for its preceding fiscal year.
    Account_annual_revenue? annual_revenue?;
    # An estimated upper bound of employees, contractors, vendors, etc. currently working for the business.
    int? estimated_worker_count?;
    # [The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.
    string? mcc?;
    Account_monthly_estimated_revenue monthly_estimated_revenue?;
    # The customer-facing business name.
    string? name?;
    # Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.
    string? product_description?;
    # A publicly available mailing address for sending support issues to.
    Address? support_address?;
    # A publicly available email address for sending support issues to.
    string? support_email?;
    # A publicly available phone number to call with support issues.
    string? support_phone?;
    # A publicly available website for handling support issues.
    string? support_url?;
    # The business's publicly available website.
    string? url?;
};

# 
public type Payment_method_details_stripe_account record {
};

# A set of key-value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Stripe will use the information you send to improve our fraud detection algorithms.
public type fraud_details record {
    ""|"fraudulent"|"safe" user_report;
};

public type terminal_readers_bodyExpandItemsString string;

public type id_refunds_bodyExpandItemsString string;

# A list of refunds that have been applied to the fee.
public type FeeRefundList_1 record {
    # Details about each object.
    Fee_refund[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Configure fields for the Checkout Session to gather active consent from customers.
public type consent_collection_params record {
    payment_method_reuse_agreement_params payment_method_reuse_agreement?;
    "auto"|"none" promotions?;
    "none"|"required" terms_of_service?;
};

public type credit_notes_body record {|
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    int amount?;
    # The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int credit_amount?;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int effective_at?;
    # Type of email to send to the customer, one of `credit_note` or `none` and the default is `credit_note`.
    "credit_note"|"none" email_type?;
    # Specifies which fields in the response should be expanded.
    credit_notes_bodyExpandItemsString[] expand?;
    # ID of the invoice.
    @constraint:String {maxLength: 5000}
    string invoice;
    # Line items that make up the credit note.
    credit_note_line_item_params[] lines?;
    # The credit note's memo appears on the credit note PDF.
    @constraint:String {maxLength: 5000}
    string memo?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    int out_of_band_amount?;
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory" reason?;
    # ID of an existing refund to link this credit note to.
    string refund?;
    # The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int refund_amount?;
    credit_note_shipping_cost shipping_cost?;
|};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer record {
    # The BIC of the bank of the sender of the funding.
    string? bic?;
    # The last 4 digits of the IBAN of the sender of the funding.
    string? iban_last4?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
};

# 
public type Treasury_outbound_transfers_resource_outbound_transfer_resource_tracking_details record {
    Treasury_outbound_transfers_resource_ach_tracking_details ach?;
    # The US bank account network used to send funds.
    "ach"|"us_domestic_wire" 'type;
    Treasury_outbound_transfers_resource_us_domestic_wire_tracking_details us_domestic_wire?;
};

@constraint:String {maxLength: 5000}
public type Account_capability_future_requirementsPastdueItemsString string;

public type account_refresh_body record {|
    # Specifies which fields in the response should be expanded.
    account_refresh_bodyExpandItemsString[] expand?;
    # The list of account features that you would like to refresh.
    ("balance"|"ownership"|"transactions")[] features;
|};

# 
public type PromotionCodesResourcePromotionCodeList record {
    Promotion_code[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/promotion_codes`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetApplicationFeesIdQueriesExpandItemsString string;

# 
public type Dispute_payment_method_details_paypal record {
    # The ID of the dispute in PayPal.
    string? case_id?;
    # The reason for the dispute as defined by PayPal
    string? reason_code?;
};

# 
public type Checkout_sepa_debit_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session"|"on_session" setup_future_usage?;
};

public type Radar\.value_list_item record {
    int created;
    string created_by;
    string id;
    boolean livemode;
    "radar.value_list_item" 'object;
    string value;
    string value_list;
};

# Represents the Queries record for the operation: GetRefundsRefund
public type GetRefundsRefundQueries record {
    # Specifies which fields in the response should be expanded.
    GetRefundsRefundQueriesExpandItemsString[] expand?;
};

# 
public type Invoices_resource_invoice_rendering record {
    # How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.
    string? amount_tax_display?;
    # Invoice pdf rendering options
    Invoice_rendering_pdf? pdf?;
};

public type applies_to_paramsProductsItemsString string;

# The `Charge` object represents a single attempt to move money into your Stripe account.
# PaymentIntent confirmation is the most common way to create Charges, but transferring
# money to a different Stripe account through Connect also creates Charges.
# Some legacy payment flows create Charges directly, which is not recommended for new integrations.
public type Charge record {
    # Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount;
    # Amount in cents (or local equivalent) captured (can be less than the amount attribute on the charge if a partial capture was made).
    int amount_captured;
    # Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the charge if a partial refund was issued).
    int amount_refunded;
    # ID of the Connect application that created the charge.
    string|Application? application?;
    # The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees) for details.
    string|Application_fee? application_fee?;
    # The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees) for details.
    int? application_fee_amount?;
    # ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).
    string|Balance_transaction? balance_transaction?;
    Billing_details billing_details;
    # The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.
    string? calculated_statement_descriptor?;
    # If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.
    boolean captured;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the customer this charge is for if one exists.
    string|Customer|Deleted_customer? customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Whether the charge has been disputed.
    boolean disputed;
    # ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.
    string|Balance_transaction? failure_balance_transaction?;
    # Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/error-codes) for a list of codes).
    string? failure_code?;
    # Message to user further explaining reason for charge failure if available.
    string? failure_message?;
    # Information on fraud assessments for the charge.
    Charge_fraud_details? fraud_details?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice this charge is for if one exists.
    string|Invoice? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "charge" 'object;
    # The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.
    string|Account? on_behalf_of?;
    # Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.
    Charge_outcome? outcome?;
    # `true` if the charge succeeded, or was successfully authorized for later capture.
    boolean paid;
    # ID of the PaymentIntent associated with this charge, if one exists.
    string|Payment_intent? payment_intent?;
    # ID of the payment method used in this charge.
    string? payment_method?;
    # Details about the payment method at the time of the transaction.
    Payment_method_details? payment_method_details?;
    Radar_radar_options radar_options?;
    # This is the email address that the receipt for this charge was sent to.
    string? receipt_email?;
    # This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.
    string? receipt_number?;
    # This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.
    string? receipt_url?;
    # Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.
    boolean refunded;
    RefundList_1? refunds?;
    # ID of the review associated with this charge if one exists.
    string|Review? review?;
    # Shipping information for the charge.
    Shipping? shipping?;
    # The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
    string|Transfer? source_transfer?;
    # For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.
    string? statement_descriptor?;
    # Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
    string? statement_descriptor_suffix?;
    # The status of the payment is either `succeeded`, `pending`, or `failed`.
    "failed"|"pending"|"succeeded" status;
    # ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).
    string|Transfer transfer?;
    # An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.
    Charge_transfer_data? transfer_data?;
    # A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.
    string? transfer_group?;
};

# 
public type PersonList record {
    Person[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountQueriesExpandItemsString string;

public type payment_method_domains_bodyExpandItemsString string;

# 
public type Automatic_tax record {
    # Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
    # The status of the most recent automated tax calculation for this invoice.
    "complete"|"failed"|"requires_location_inputs"? status?;
};

@constraint:String {maxLength: 5000}
public type GetSourcesSourceSourceTransactionsQueriesExpandItemsString string;

public type product_features_body record {|
    # The ID of the [Feature](https://stripe.com/docs/api/entitlements/feature) object attached to this product.
    @constraint:String {maxLength: 5000}
    string entitlement_feature;
    # Specifies which fields in the response should be expanded.
    product_features_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_flows_private_payment_methods_alipay record {
};

# 
public type Issuing_transaction_flight_data_leg record {
    # The three-letter IATA airport code of the flight's destination.
    string? arrival_airport_code?;
    # The airline carrier code.
    string? carrier?;
    # The three-letter IATA airport code that the flight departed from.
    string? departure_airport_code?;
    # The flight number.
    string? flight_number?;
    # The flight's service class.
    string? service_class?;
    # Whether a stopover is allowed on this flight.
    boolean? stopover_allowed?;
};

# 
public type NotificationEventList record {
    Event[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/events`}
    string url;
};

# Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports](https://stripe.com/docs/reporting/statements/api) documentation.
public type run_parameter_specs record {
    run_parameter_specsColumnsItemsString[] columns?;
    string connected_account?;
    string currency?;
    int interval_end?;
    int interval_start?;
    string payout?;
    "advance"|"advance_funding"|"anticipation_repayment"|"charge"|"charge_failure"|"climate_order_purchase"|"climate_order_refund"|"connect_collection_transfer"|"connect_reserved_funds"|"contribution"|"dispute"|"dispute_reversal"|"fee"|"financing_paydown"|"financing_paydown_reversal"|"financing_payout"|"financing_payout_reversal"|"issuing_authorization_hold"|"issuing_authorization_release"|"issuing_dispute"|"issuing_transaction"|"network_cost"|"other_adjustment"|"partial_capture_reversal"|"payout"|"payout_reversal"|"platform_earning"|"platform_earning_refund"|"refund"|"refund_failure"|"risk_reserved_funds"|"tax"|"topup"|"topup_reversal"|"transfer"|"transfer_reversal"|"unreconciled_customer_funds" reporting_category?;
    "Africa/Abidjan"|"Africa/Accra"|"Africa/Addis_Ababa"|"Africa/Algiers"|"Africa/Asmara"|"Africa/Asmera"|"Africa/Bamako"|"Africa/Bangui"|"Africa/Banjul"|"Africa/Bissau"|"Africa/Blantyre"|"Africa/Brazzaville"|"Africa/Bujumbura"|"Africa/Cairo"|"Africa/Casablanca"|"Africa/Ceuta"|"Africa/Conakry"|"Africa/Dakar"|"Africa/Dar_es_Salaam"|"Africa/Djibouti"|"Africa/Douala"|"Africa/El_Aaiun"|"Africa/Freetown"|"Africa/Gaborone"|"Africa/Harare"|"Africa/Johannesburg"|"Africa/Juba"|"Africa/Kampala"|"Africa/Khartoum"|"Africa/Kigali"|"Africa/Kinshasa"|"Africa/Lagos"|"Africa/Libreville"|"Africa/Lome"|"Africa/Luanda"|"Africa/Lubumbashi"|"Africa/Lusaka"|"Africa/Malabo"|"Africa/Maputo"|"Africa/Maseru"|"Africa/Mbabane"|"Africa/Mogadishu"|"Africa/Monrovia"|"Africa/Nairobi"|"Africa/Ndjamena"|"Africa/Niamey"|"Africa/Nouakchott"|"Africa/Ouagadougou"|"Africa/Porto-Novo"|"Africa/Sao_Tome"|"Africa/Timbuktu"|"Africa/Tripoli"|"Africa/Tunis"|"Africa/Windhoek"|"America/Adak"|"America/Anchorage"|"America/Anguilla"|"America/Antigua"|"America/Araguaina"|"America/Argentina/Buenos_Aires"|"America/Argentina/Catamarca"|"America/Argentina/ComodRivadavia"|"America/Argentina/Cordoba"|"America/Argentina/Jujuy"|"America/Argentina/La_Rioja"|"America/Argentina/Mendoza"|"America/Argentina/Rio_Gallegos"|"America/Argentina/Salta"|"America/Argentina/San_Juan"|"America/Argentina/San_Luis"|"America/Argentina/Tucuman"|"America/Argentina/Ushuaia"|"America/Aruba"|"America/Asuncion"|"America/Atikokan"|"America/Atka"|"America/Bahia"|"America/Bahia_Banderas"|"America/Barbados"|"America/Belem"|"America/Belize"|"America/Blanc-Sablon"|"America/Boa_Vista"|"America/Bogota"|"America/Boise"|"America/Buenos_Aires"|"America/Cambridge_Bay"|"America/Campo_Grande"|"America/Cancun"|"America/Caracas"|"America/Catamarca"|"America/Cayenne"|"America/Cayman"|"America/Chicago"|"America/Chihuahua"|"America/Ciudad_Juarez"|"America/Coral_Harbour"|"America/Cordoba"|"America/Costa_Rica"|"America/Creston"|"America/Cuiaba"|"America/Curacao"|"America/Danmarkshavn"|"America/Dawson"|"America/Dawson_Creek"|"America/Denver"|"America/Detroit"|"America/Dominica"|"America/Edmonton"|"America/Eirunepe"|"America/El_Salvador"|"America/Ensenada"|"America/Fort_Nelson"|"America/Fort_Wayne"|"America/Fortaleza"|"America/Glace_Bay"|"America/Godthab"|"America/Goose_Bay"|"America/Grand_Turk"|"America/Grenada"|"America/Guadeloupe"|"America/Guatemala"|"America/Guayaquil"|"America/Guyana"|"America/Halifax"|"America/Havana"|"America/Hermosillo"|"America/Indiana/Indianapolis"|"America/Indiana/Knox"|"America/Indiana/Marengo"|"America/Indiana/Petersburg"|"America/Indiana/Tell_City"|"America/Indiana/Vevay"|"America/Indiana/Vincennes"|"America/Indiana/Winamac"|"America/Indianapolis"|"America/Inuvik"|"America/Iqaluit"|"America/Jamaica"|"America/Jujuy"|"America/Juneau"|"America/Kentucky/Louisville"|"America/Kentucky/Monticello"|"America/Knox_IN"|"America/Kralendijk"|"America/La_Paz"|"America/Lima"|"America/Los_Angeles"|"America/Louisville"|"America/Lower_Princes"|"America/Maceio"|"America/Managua"|"America/Manaus"|"America/Marigot"|"America/Martinique"|"America/Matamoros"|"America/Mazatlan"|"America/Mendoza"|"America/Menominee"|"America/Merida"|"America/Metlakatla"|"America/Mexico_City"|"America/Miquelon"|"America/Moncton"|"America/Monterrey"|"America/Montevideo"|"America/Montreal"|"America/Montserrat"|"America/Nassau"|"America/New_York"|"America/Nipigon"|"America/Nome"|"America/Noronha"|"America/North_Dakota/Beulah"|"America/North_Dakota/Center"|"America/North_Dakota/New_Salem"|"America/Nuuk"|"America/Ojinaga"|"America/Panama"|"America/Pangnirtung"|"America/Paramaribo"|"America/Phoenix"|"America/Port-au-Prince"|"America/Port_of_Spain"|"America/Porto_Acre"|"America/Porto_Velho"|"America/Puerto_Rico"|"America/Punta_Arenas"|"America/Rainy_River"|"America/Rankin_Inlet"|"America/Recife"|"America/Regina"|"America/Resolute"|"America/Rio_Branco"|"America/Rosario"|"America/Santa_Isabel"|"America/Santarem"|"America/Santiago"|"America/Santo_Domingo"|"America/Sao_Paulo"|"America/Scoresbysund"|"America/Shiprock"|"America/Sitka"|"America/St_Barthelemy"|"America/St_Johns"|"America/St_Kitts"|"America/St_Lucia"|"America/St_Thomas"|"America/St_Vincent"|"America/Swift_Current"|"America/Tegucigalpa"|"America/Thule"|"America/Thunder_Bay"|"America/Tijuana"|"America/Toronto"|"America/Tortola"|"America/Vancouver"|"America/Virgin"|"America/Whitehorse"|"America/Winnipeg"|"America/Yakutat"|"America/Yellowknife"|"Antarctica/Casey"|"Antarctica/Davis"|"Antarctica/DumontDUrville"|"Antarctica/Macquarie"|"Antarctica/Mawson"|"Antarctica/McMurdo"|"Antarctica/Palmer"|"Antarctica/Rothera"|"Antarctica/South_Pole"|"Antarctica/Syowa"|"Antarctica/Troll"|"Antarctica/Vostok"|"Arctic/Longyearbyen"|"Asia/Aden"|"Asia/Almaty"|"Asia/Amman"|"Asia/Anadyr"|"Asia/Aqtau"|"Asia/Aqtobe"|"Asia/Ashgabat"|"Asia/Ashkhabad"|"Asia/Atyrau"|"Asia/Baghdad"|"Asia/Bahrain"|"Asia/Baku"|"Asia/Bangkok"|"Asia/Barnaul"|"Asia/Beirut"|"Asia/Bishkek"|"Asia/Brunei"|"Asia/Calcutta"|"Asia/Chita"|"Asia/Choibalsan"|"Asia/Chongqing"|"Asia/Chungking"|"Asia/Colombo"|"Asia/Dacca"|"Asia/Damascus"|"Asia/Dhaka"|"Asia/Dili"|"Asia/Dubai"|"Asia/Dushanbe"|"Asia/Famagusta"|"Asia/Gaza"|"Asia/Harbin"|"Asia/Hebron"|"Asia/Ho_Chi_Minh"|"Asia/Hong_Kong"|"Asia/Hovd"|"Asia/Irkutsk"|"Asia/Istanbul"|"Asia/Jakarta"|"Asia/Jayapura"|"Asia/Jerusalem"|"Asia/Kabul"|"Asia/Kamchatka"|"Asia/Karachi"|"Asia/Kashgar"|"Asia/Kathmandu"|"Asia/Katmandu"|"Asia/Khandyga"|"Asia/Kolkata"|"Asia/Krasnoyarsk"|"Asia/Kuala_Lumpur"|"Asia/Kuching"|"Asia/Kuwait"|"Asia/Macao"|"Asia/Macau"|"Asia/Magadan"|"Asia/Makassar"|"Asia/Manila"|"Asia/Muscat"|"Asia/Nicosia"|"Asia/Novokuznetsk"|"Asia/Novosibirsk"|"Asia/Omsk"|"Asia/Oral"|"Asia/Phnom_Penh"|"Asia/Pontianak"|"Asia/Pyongyang"|"Asia/Qatar"|"Asia/Qostanay"|"Asia/Qyzylorda"|"Asia/Rangoon"|"Asia/Riyadh"|"Asia/Saigon"|"Asia/Sakhalin"|"Asia/Samarkand"|"Asia/Seoul"|"Asia/Shanghai"|"Asia/Singapore"|"Asia/Srednekolymsk"|"Asia/Taipei"|"Asia/Tashkent"|"Asia/Tbilisi"|"Asia/Tehran"|"Asia/Tel_Aviv"|"Asia/Thimbu"|"Asia/Thimphu"|"Asia/Tokyo"|"Asia/Tomsk"|"Asia/Ujung_Pandang"|"Asia/Ulaanbaatar"|"Asia/Ulan_Bator"|"Asia/Urumqi"|"Asia/Ust-Nera"|"Asia/Vientiane"|"Asia/Vladivostok"|"Asia/Yakutsk"|"Asia/Yangon"|"Asia/Yekaterinburg"|"Asia/Yerevan"|"Atlantic/Azores"|"Atlantic/Bermuda"|"Atlantic/Canary"|"Atlantic/Cape_Verde"|"Atlantic/Faeroe"|"Atlantic/Faroe"|"Atlantic/Jan_Mayen"|"Atlantic/Madeira"|"Atlantic/Reykjavik"|"Atlantic/South_Georgia"|"Atlantic/St_Helena"|"Atlantic/Stanley"|"Australia/ACT"|"Australia/Adelaide"|"Australia/Brisbane"|"Australia/Broken_Hill"|"Australia/Canberra"|"Australia/Currie"|"Australia/Darwin"|"Australia/Eucla"|"Australia/Hobart"|"Australia/LHI"|"Australia/Lindeman"|"Australia/Lord_Howe"|"Australia/Melbourne"|"Australia/NSW"|"Australia/North"|"Australia/Perth"|"Australia/Queensland"|"Australia/South"|"Australia/Sydney"|"Australia/Tasmania"|"Australia/Victoria"|"Australia/West"|"Australia/Yancowinna"|"Brazil/Acre"|"Brazil/DeNoronha"|"Brazil/East"|"Brazil/West"|"CET"|"CST6CDT"|"Canada/Atlantic"|"Canada/Central"|"Canada/Eastern"|"Canada/Mountain"|"Canada/Newfoundland"|"Canada/Pacific"|"Canada/Saskatchewan"|"Canada/Yukon"|"Chile/Continental"|"Chile/EasterIsland"|"Cuba"|"EET"|"EST"|"EST5EDT"|"Egypt"|"Eire"|"Etc/GMT"|"Etc/GMT+0"|"Etc/GMT+1"|"Etc/GMT+10"|"Etc/GMT+11"|"Etc/GMT+12"|"Etc/GMT+2"|"Etc/GMT+3"|"Etc/GMT+4"|"Etc/GMT+5"|"Etc/GMT+6"|"Etc/GMT+7"|"Etc/GMT+8"|"Etc/GMT+9"|"Etc/GMT-0"|"Etc/GMT-1"|"Etc/GMT-10"|"Etc/GMT-11"|"Etc/GMT-12"|"Etc/GMT-13"|"Etc/GMT-14"|"Etc/GMT-2"|"Etc/GMT-3"|"Etc/GMT-4"|"Etc/GMT-5"|"Etc/GMT-6"|"Etc/GMT-7"|"Etc/GMT-8"|"Etc/GMT-9"|"Etc/GMT0"|"Etc/Greenwich"|"Etc/UCT"|"Etc/UTC"|"Etc/Universal"|"Etc/Zulu"|"Europe/Amsterdam"|"Europe/Andorra"|"Europe/Astrakhan"|"Europe/Athens"|"Europe/Belfast"|"Europe/Belgrade"|"Europe/Berlin"|"Europe/Bratislava"|"Europe/Brussels"|"Europe/Bucharest"|"Europe/Budapest"|"Europe/Busingen"|"Europe/Chisinau"|"Europe/Copenhagen"|"Europe/Dublin"|"Europe/Gibraltar"|"Europe/Guernsey"|"Europe/Helsinki"|"Europe/Isle_of_Man"|"Europe/Istanbul"|"Europe/Jersey"|"Europe/Kaliningrad"|"Europe/Kiev"|"Europe/Kirov"|"Europe/Kyiv"|"Europe/Lisbon"|"Europe/Ljubljana"|"Europe/London"|"Europe/Luxembourg"|"Europe/Madrid"|"Europe/Malta"|"Europe/Mariehamn"|"Europe/Minsk"|"Europe/Monaco"|"Europe/Moscow"|"Europe/Nicosia"|"Europe/Oslo"|"Europe/Paris"|"Europe/Podgorica"|"Europe/Prague"|"Europe/Riga"|"Europe/Rome"|"Europe/Samara"|"Europe/San_Marino"|"Europe/Sarajevo"|"Europe/Saratov"|"Europe/Simferopol"|"Europe/Skopje"|"Europe/Sofia"|"Europe/Stockholm"|"Europe/Tallinn"|"Europe/Tirane"|"Europe/Tiraspol"|"Europe/Ulyanovsk"|"Europe/Uzhgorod"|"Europe/Vaduz"|"Europe/Vatican"|"Europe/Vienna"|"Europe/Vilnius"|"Europe/Volgograd"|"Europe/Warsaw"|"Europe/Zagreb"|"Europe/Zaporozhye"|"Europe/Zurich"|"Factory"|"GB"|"GB-Eire"|"GMT"|"GMT+0"|"GMT-0"|"GMT0"|"Greenwich"|"HST"|"Hongkong"|"Iceland"|"Indian/Antananarivo"|"Indian/Chagos"|"Indian/Christmas"|"Indian/Cocos"|"Indian/Comoro"|"Indian/Kerguelen"|"Indian/Mahe"|"Indian/Maldives"|"Indian/Mauritius"|"Indian/Mayotte"|"Indian/Reunion"|"Iran"|"Israel"|"Jamaica"|"Japan"|"Kwajalein"|"Libya"|"MET"|"MST"|"MST7MDT"|"Mexico/BajaNorte"|"Mexico/BajaSur"|"Mexico/General"|"NZ"|"NZ-CHAT"|"Navajo"|"PRC"|"PST8PDT"|"Pacific/Apia"|"Pacific/Auckland"|"Pacific/Bougainville"|"Pacific/Chatham"|"Pacific/Chuuk"|"Pacific/Easter"|"Pacific/Efate"|"Pacific/Enderbury"|"Pacific/Fakaofo"|"Pacific/Fiji"|"Pacific/Funafuti"|"Pacific/Galapagos"|"Pacific/Gambier"|"Pacific/Guadalcanal"|"Pacific/Guam"|"Pacific/Honolulu"|"Pacific/Johnston"|"Pacific/Kanton"|"Pacific/Kiritimati"|"Pacific/Kosrae"|"Pacific/Kwajalein"|"Pacific/Majuro"|"Pacific/Marquesas"|"Pacific/Midway"|"Pacific/Nauru"|"Pacific/Niue"|"Pacific/Norfolk"|"Pacific/Noumea"|"Pacific/Pago_Pago"|"Pacific/Palau"|"Pacific/Pitcairn"|"Pacific/Pohnpei"|"Pacific/Ponape"|"Pacific/Port_Moresby"|"Pacific/Rarotonga"|"Pacific/Saipan"|"Pacific/Samoa"|"Pacific/Tahiti"|"Pacific/Tarawa"|"Pacific/Tongatapu"|"Pacific/Truk"|"Pacific/Wake"|"Pacific/Wallis"|"Pacific/Yap"|"Poland"|"Portugal"|"ROC"|"ROK"|"Singapore"|"Turkey"|"UCT"|"US/Alaska"|"US/Aleutian"|"US/Arizona"|"US/Central"|"US/East-Indiana"|"US/Eastern"|"US/Hawaii"|"US/Indiana-Starke"|"US/Michigan"|"US/Mountain"|"US/Pacific"|"US/Pacific-New"|"US/Samoa"|"UTC"|"Universal"|"W-SU"|"WET"|"Zulu" timezone?;
};

# If you populate this hash, this SetupIntent generates a `single_use` mandate after successful completion.
public type setup_intent_single_use_params record {
    int amount;
    string currency;
};

# 
public type Issuing_authorization_pending_request record {
    # The additional amount Stripe will hold if the authorization is approved, in the card's [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency) and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    Issuing_authorization_amount_details? amount_details?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.
    boolean is_amount_controllable;
    # The amount the merchant is requesting to be authorized in the `merchant_currency`. The amount is in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int merchant_amount;
    # The local currency the merchant is requesting to authorize.
    string merchant_currency;
    # The card network's estimate of the likelihood that an authorization is fraudulent. Takes on values between 1 and 99.
    int? network_risk_score?;
};

public type plans_plan_bodyExpandItemsString string;

public type refunds_refund_body_1 record {|
    # Specifies which fields in the response should be expanded.
    refunds_refund_body_1ExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type Person_requirementsPendingverificationItemsString string;

@constraint:String {maxLength: 200}
public type GetIssuingPersonalizationDesignsQueriesLookupkeysItemsString string;

public type subscription_default_tax_rates SubscriptiondefaulttaxratesItemsString[]|"";

# 
public type Payment_intent_next_action_alipay_handle_redirect record {
    # The native data to be used with Alipay SDK you must redirect your customer to in order to authenticate the payment in an Android App.
    string? native_data?;
    # The native URL you must redirect your customer to in order to authenticate the payment in an iOS App.
    string? native_url?;
    # If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
    string? return_url?;
    # The URL you must redirect your customer to in order to authenticate the payment.
    string? url?;
};

public type payment_method_domain_validate_bodyExpandItemsString string;

public type shipping_rates_shipping_rate_token_body record {|
    # Whether the shipping rate can be used for new purchases. Defaults to `true`.
    boolean active?;
    # Specifies which fields in the response should be expanded.
    shipping_rates_shipping_rate_token_bodyExpandItemsString[] expand?;
    fixed_amount_update fixed_amount?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    "exclusive"|"inclusive"|"unspecified" tax_behavior?;
|};

# InboundTransfers contains inbound transfers features for a FinancialAccount.
public type Treasury_financial_accounts_resource_inbound_transfers record {
    Treasury_financial_accounts_resource_ach_toggle_settings ach?;
};

# 
public type Mandate_amazon_pay record {
};

# 
public type Payment_flows_private_payment_methods_alipay_details record {
    # Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.
    @constraint:String {maxLength: 5000}
    string buyer_id?;
    # Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.
    string? fingerprint?;
    # Transaction ID of this particular Alipay transaction.
    string? transaction_id?;
};

# 
public type Subscription_schedules_resource_default_settings record {
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account during this phase of the schedule.
    decimal? application_fee_percent?;
    Subscription_schedules_resource_default_settings_automatic_tax automatic_tax?;
    # Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "automatic"|"phase_start" billing_cycle_anchor;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
    Subscription_billing_thresholds? billing_thresholds?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
    "charge_automatically"|"send_invoice"? collection_method?;
    # ID of the default payment method for the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.
    string|Payment_method? default_payment_method?;
    # Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    Invoice_setting_subscription_schedule_setting invoice_settings;
    # The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.
    string|Account? on_behalf_of?;
    # The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.
    Subscription_transfer_data? transfer_data?;
};

# 
public type Payment_method_options_wechat_pay record {
    # The app ID registered with WeChat Pay. Only required when client is ios or android.
    string? app_id?;
    # The client type that the end customer will pay from
    "android"|"ios"|"web"? 'client?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type TaxratesItemsString string;

# Represents the Queries record for the operation: GetTerminalLocationsLocation
public type GetTerminalLocationsLocationQueries record {
    # Specifies which fields in the response should be expanded.
    GetTerminalLocationsLocationQueriesExpandItemsString[] expand?;
};

# 
public type Tax_product_resource_line_item_tax_breakdown record {
    # The amount of tax, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    Tax_product_resource_jurisdiction jurisdiction;
    # Indicates whether the jurisdiction was determined by the origin (merchant's address) or destination (customer's address).
    "destination"|"origin" sourcing;
    # Details regarding the rate for this tax. This field will be `null` when the tax is not imposed, for example if the product is exempt from tax.
    Tax_product_resource_line_item_tax_rate_details? tax_rate_details?;
    # The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.
    "customer_exempt"|"not_collecting"|"not_subject_to_tax"|"not_supported"|"portion_product_exempt"|"portion_reduced_rated"|"portion_standard_rated"|"product_exempt"|"product_exempt_holiday"|"proportionally_rated"|"reduced_rated"|"reverse_charge"|"standard_rated"|"taxable_basis_reduced"|"zero_rated" taxability_reason;
    # The amount on which tax is calculated, in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int taxable_amount;
};

public type shipping_return_bodyExpandItemsString string;

# Toggle settings for enabling/disabling a feature
public type Treasury_financial_accounts_resource_toggle_settings record {
    # Whether the FinancialAccount should have the Feature.
    boolean requested;
    # Whether the Feature is operational.
    "active"|"pending"|"restricted" status;
    # Additional details; includes at least one entry when the status is not `active`.
    Treasury_financial_accounts_resource_toggles_setting_status_details[] status_details;
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft record {
    # The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds taken out of your Stripe balance.
    string|Balance_transaction balance_transaction;
    # The [Cash Balance Transaction](https://stripe.com/docs/api/cash_balance_transactions/object) that brought the customer balance negative, triggering the clawback of funds.
    string|Customer_cash_balance_transaction linked_transaction;
};

public type invoices_settings_specs record {
    DefaultaccounttaxidsItemsString[]|"" default_account_tax_ids?;
};

# Represents the Queries record for the operation: GetApplicationFees
public type GetApplicationFeesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetApplicationFeesQueriesExpandItemsString[] expand?;
    # Only return application fees for the charge specified by this charge ID.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Only return applications fees that were created during the given date interval.
    created_1 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_method_details_card_wallet_apple_pay record {
};

# 
public type Setup_intent_payment_method_options_link record {
};

# 
public type Portal_flows_coupon_offer record {
    # The ID of the coupon to be offered.
    @constraint:String {maxLength: 5000}
    string coupon;
};

# 
public type Payment_intent_next_action_card_await_notification record {
    # The time that payment will be attempted. If customer approval is required, they need to provide approval before this time.
    int? charge_attempt_at?;
    # For payments greater than INR 15000, the customer must provide explicit approval of the payment with their bank. For payments of lower amount, no customer action is required.
    boolean? customer_approval_required?;
};

# 
public type Payment_method_options_amazon_pay record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

public type documents_param record {
    documents_paramFilesItemsString[] files?;
};

# 
public type Source_transaction_chf_credit_transfer_data record {
    # Reference associated with the transfer.
    @constraint:String {maxLength: 5000}
    string reference?;
    # Sender's country address.
    @constraint:String {maxLength: 5000}
    string sender_address_country?;
    # Sender's line 1 address.
    @constraint:String {maxLength: 5000}
    string sender_address_line1?;
    # Sender's bank account IBAN.
    @constraint:String {maxLength: 5000}
    string sender_iban?;
    # Sender's name.
    @constraint:String {maxLength: 5000}
    string sender_name?;
};

# Represents a per-setup override of a reader configuration
public type Terminal_reader_reader_resource_process_setup_config record {
    # Enable customer initiated cancellation when processing this SetupIntent.
    boolean enable_customer_cancellation?;
};

# 
public type IssuingAuthorizationList record {
    Issuing\.authorization[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/authorizations`}
    string url;
};

# 
public type Payment_method_mobilepay record {
};

# Represents the Queries record for the operation: GetTreasuryInboundTransfers
public type GetTreasuryInboundTransfersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryInboundTransfersQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return InboundTransfers that have the given status: `processing`, `succeeded`, `failed` or `canceled`.
    "canceled"|"failed"|"processing"|"succeeded" status?;
};

# You can configure [webhook endpoints](https://docs.stripe.com/webhooks/) via the API to be
# notified about events that happen in your Stripe account or connected
# accounts.
# 
# Most users configure webhooks from [the dashboard](https://dashboard.stripe.com/webhooks), which provides a user interface for registering and testing your webhook endpoints.
# 
# Related guide: [Setting up webhooks](https://docs.stripe.com/webhooks/configure)
public type Webhook_endpoint record {
    # The API version events are rendered as for this webhook endpoint.
    string? api_version?;
    # The ID of the associated Connect application.
    string? application?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # An optional description of what the webhook is used for.
    string? description?;
    # The list of events to enable for this endpoint. `['*']` indicates that all events are enabled, except those that require explicit selection.
    Webhook_endpointEnabledeventsItemsString[] enabled_events;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "webhook_endpoint" 'object;
    # The endpoint's secret, used to generate [webhook signatures](https://docs.stripe.com/webhooks/signatures). Only returned at creation.
    @constraint:String {maxLength: 5000}
    string secret?;
    # The status of the webhook. It can be `enabled` or `disabled`.
    @constraint:String {maxLength: 5000}
    string status;
    # The URL of the webhook endpoint.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type IssuingCardholderList record {
    Issuing\.cardholder[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/issuing/cardholders`}
    string url;
};

public type payment_method_domain_validate_body record {|
    # Specifies which fields in the response should be expanded.
    payment_method_domain_validate_bodyExpandItemsString[] expand?;
|};

# 
public type Payment_links_resource_custom_fields_numeric record {
    # The maximum character length constraint for the customer's input.
    int? maximum_length?;
    # The minimum character length requirement for the customer's input.
    int? minimum_length?;
};

# 
public type Payment_intent_next_action_wechat_pay_redirect_to_ios_app record {
    # An universal link that redirect to WeChat Pay app
    @constraint:String {maxLength: 5000}
    string native_url;
};

# Represents the Queries record for the operation: GetTreasuryTransactions
public type GetTreasuryTransactionsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Returns objects associated with this FinancialAccount.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryTransactionsQueriesExpandItemsString[] expand?;
    # Only return Transactions that were created during the given date interval.
    created_46 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # The results are in reverse chronological order by `created` or `posted_at`. The default is `created`.
    "created"|"posted_at" order_by?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A filter for the `status_transitions.posted_at` timestamp. When using this filter, `status=posted` and `order_by=posted_at` must also be specified.
    status_transition_timestamp_specs status_transitions?;
    # Only return Transactions that have the given status: `open`, `posted`, or `void`.
    "open"|"posted"|"void" status?;
};

public type SubscriptiondefaulttaxratesItemsString string;

public type settlements_settlement_bodyExpandItemsString string;

# 
public type Connect_embedded_account_session_create_components record {
    Connect_embedded_account_config_claim account_management;
    Connect_embedded_account_config_claim account_onboarding;
    Connect_embedded_payouts_config_claim balances;
    Connect_embedded_base_config_claim documents;
    Connect_embedded_account_config_claim notification_banner;
    Connect_embedded_payments_config_claim payment_details;
    Connect_embedded_payments_config_claim payments;
    Connect_embedded_payouts_config_claim payouts;
    Connect_embedded_base_config_claim payouts_list;
};

# 
public type Treasury_received_debits_resource_debit_reversal_linked_flows record {
    # Set if there is an Issuing dispute associated with the DebitReversal.
    string? issuing_dispute?;
};

public type after_completion_redirect_param record {
    string return_url;
};

@constraint:String {maxLength: 5000}
public type GetFinancialConnectionsAccountsQueriesExpandItemsString string;

# Represents a per-transaction tipping configuration
public type Terminal_reader_reader_resource_tipping_config record {
    # Amount used to calculate tip suggestions on tipping selection screen for this transaction. Must be a positive integer in the smallest currency unit (e.g., 100 cents to represent $1.00 or 100 to represent ¥100, a zero-decimal currency).
    int amount_eligible?;
};

# 
public type TreasuryOutboundPaymentsResourceOutboundPaymentList record {
    # Details about each object.
    Treasury\.outbound_payment[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/treasury/outbound_payments`}
    string url;
};

# 
public type Legal_entity_person_verification record {
    # A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.
    Legal_entity_person_verification_document? additional_document?;
    # A user-displayable string describing the verification state for the person. For example, this may say "Provided identity information could not be verified".
    string? details?;
    # One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.
    string? details_code?;
    Legal_entity_person_verification_document document?;
    # The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.
    @constraint:String {maxLength: 5000}
    string status;
};

# 
public type Internal_card record {
    # Brand of the card used in the transaction
    string? brand?;
    # Two-letter ISO code representing the country of the card
    string? country?;
    # Two digit number representing the card's expiration month
    int? exp_month?;
    # Two digit number representing the card's expiration year
    int? exp_year?;
    # The last 4 digits of the card
    string? last4?;
};

public type plans_bodyExpandItemsString string;

# 
public type BankConnectionsResourceTransactionList record {
    # Details about each object.
    Financial_connections\.transaction[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/financial_connections/transactions`}
    string url;
};

public type locations_location_body record {|
    optional_fields_address_1 address?;
    # The ID of a configuration that will be used to customize all readers in this location.
    string|"" configuration_overrides?;
    # A name for the location.
    @constraint:String {maxLength: 1000}
    string display_name?;
    # Specifies which fields in the response should be expanded.
    locations_location_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetBillingMetersIdEventSummariesQueriesExpandItemsString string;

# 
public type PlatformEarningList record {
    Application_fee[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/application_fees`}
    string url;
};

# 
public type PaymentLinksResourcePaymentLinkList record {
    Payment_link[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_links`}
    string url;
};

# Represents the Queries record for the operation: GetSubscriptions
public type GetSubscriptionsQueries record {
    # Filter for subscriptions that are associated with the specified test clock. The response will not include subscriptions with test clocks if this and the customer parameter is not set.
    @constraint:String {maxLength: 5000}
    string test_clock?;
    # Only return subscriptions that were created during the given date interval.
    created_39 created?;
    current_period_end current_period_end?;
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetSubscriptionsQueriesExpandItemsString[] expand?;
    # Filter subscriptions by their automatic tax settings.
    automatic_tax_filter_params automatic_tax?;
    # Filter for subscriptions that contain this recurring price ID.
    @constraint:String {maxLength: 5000}
    string price?;
    # The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`.
    "charge_automatically"|"send_invoice" collection_method?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    current_period_start current_period_start?;
    # The ID of the customer whose subscriptions will be retrieved.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned.
    "active"|"all"|"canceled"|"ended"|"incomplete"|"incomplete_expired"|"past_due"|"paused"|"trialing"|"unpaid" status?;
};

# When set, provides configuration for Checkout to collect a shipping address from a customer.
public type shipping_address_collection_params record {
    ("AC"|"AD"|"AE"|"AF"|"AG"|"AI"|"AL"|"AM"|"AO"|"AQ"|"AR"|"AT"|"AU"|"AW"|"AX"|"AZ"|"BA"|"BB"|"BD"|"BE"|"BF"|"BG"|"BH"|"BI"|"BJ"|"BL"|"BM"|"BN"|"BO"|"BQ"|"BR"|"BS"|"BT"|"BV"|"BW"|"BY"|"BZ"|"CA"|"CD"|"CF"|"CG"|"CH"|"CI"|"CK"|"CL"|"CM"|"CN"|"CO"|"CR"|"CV"|"CW"|"CY"|"CZ"|"DE"|"DJ"|"DK"|"DM"|"DO"|"DZ"|"EC"|"EE"|"EG"|"EH"|"ER"|"ES"|"ET"|"FI"|"FJ"|"FK"|"FO"|"FR"|"GA"|"GB"|"GD"|"GE"|"GF"|"GG"|"GH"|"GI"|"GL"|"GM"|"GN"|"GP"|"GQ"|"GR"|"GS"|"GT"|"GU"|"GW"|"GY"|"HK"|"HN"|"HR"|"HT"|"HU"|"ID"|"IE"|"IL"|"IM"|"IN"|"IO"|"IQ"|"IS"|"IT"|"JE"|"JM"|"JO"|"JP"|"KE"|"KG"|"KH"|"KI"|"KM"|"KN"|"KR"|"KW"|"KY"|"KZ"|"LA"|"LB"|"LC"|"LI"|"LK"|"LR"|"LS"|"LT"|"LU"|"LV"|"LY"|"MA"|"MC"|"MD"|"ME"|"MF"|"MG"|"MK"|"ML"|"MM"|"MN"|"MO"|"MQ"|"MR"|"MS"|"MT"|"MU"|"MV"|"MW"|"MX"|"MY"|"MZ"|"NA"|"NC"|"NE"|"NG"|"NI"|"NL"|"NO"|"NP"|"NR"|"NU"|"NZ"|"OM"|"PA"|"PE"|"PF"|"PG"|"PH"|"PK"|"PL"|"PM"|"PN"|"PR"|"PS"|"PT"|"PY"|"QA"|"RE"|"RO"|"RS"|"RU"|"RW"|"SA"|"SB"|"SC"|"SE"|"SG"|"SH"|"SI"|"SJ"|"SK"|"SL"|"SM"|"SN"|"SO"|"SR"|"SS"|"ST"|"SV"|"SX"|"SZ"|"TA"|"TC"|"TD"|"TF"|"TG"|"TH"|"TJ"|"TK"|"TL"|"TM"|"TN"|"TO"|"TR"|"TT"|"TV"|"TW"|"TZ"|"UA"|"UG"|"US"|"UY"|"UZ"|"VA"|"VC"|"VE"|"VG"|"VN"|"VU"|"WF"|"WS"|"XK"|"YE"|"YT"|"ZA"|"ZM"|"ZW"|"ZZ")[] allowed_countries;
};

# Data used for generating a Mandate.
public type Confirmation_tokens_resource_mandate_data record {
    Confirmation_tokens_resource_mandate_data_resource_customer_acceptance customer_acceptance;
};

# Represents the Queries record for the operation: GetIdentityVerificationSessionsSession
public type GetIdentityVerificationSessionsSessionQueries record {
    # Specifies which fields in the response should be expanded.
    GetIdentityVerificationSessionsSessionQueriesExpandItemsString[] expand?;
};

public type checkout_sessions_body record {|
    after_expiration_params after_expiration?;
    # Enables user redeemable promotion codes.
    boolean allow_promotion_codes?;
    automatic_tax_params automatic_tax?;
    # Specify whether Checkout should collect the customer's billing address. Defaults to `auto`.
    "auto"|"required" billing_address_collection?;
    # If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website.
    @constraint:String {maxLength: 5000}
    string cancel_url?;
    # A unique string to reference the Checkout Session. This can be a
    # customer ID, a cart ID, or similar, and can be used to reconcile the
    # session with your internal systems.
    @constraint:String {maxLength: 200}
    string client_reference_id?;
    consent_collection_params consent_collection?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Required in `setup` mode when `payment_method_types` is not set.
    string currency?;
    # Collect additional information from your customer using custom fields. Up to 3 fields are supported.
    custom_field_param[] custom_fields?;
    custom_text_param custom_text?;
    # ID of an existing Customer, if one exists. In `payment` mode, the customer’s most recently saved card
    # payment method will be used to prefill the email, name, card details, and billing address
    # on the Checkout page. In `subscription` mode, the customer’s [default payment method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method)
    # will be used if it’s a card, otherwise the most recently saved card will be used. A valid billing address, billing name and billing email are required on the payment method for Checkout to prefill the customer's card details.
    # 
    # If the Customer already has a valid [email](https://stripe.com/docs/api/customers/object#customer_object-email) set, the email will be prefilled and not editable in Checkout.
    # If the Customer does not have a valid `email`, Checkout will set the email entered during the session on the Customer.
    # 
    # If blank for Checkout Sessions in `subscription` mode or with `customer_creation` set as `always` in `payment` mode, Checkout will create a new Customer object based on information provided during the payment flow.
    # 
    # You can set [`payment_intent_data.setup_future_usage`](https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage) to have Checkout automatically attach the payment method to the Customer you pass in for future reuse.
    @constraint:String {maxLength: 5000}
    string customer?;
    # Configure whether a Checkout Session creates a [Customer](https://stripe.com/docs/api/customers) during Session confirmation.
    # 
    # When a Customer is not created, you can still retrieve email, address, and other customer data entered in Checkout
    # with [customer_details](https://stripe.com/docs/api/checkout/sessions/object#checkout_session_object-customer_details).
    # 
    # Sessions that don't create Customers instead are grouped by [guest customers](https://stripe.com/docs/payments/checkout/guest-customers)
    # in the Dashboard. Promotion codes limited to first time customers will return invalid for these Sessions.
    # 
    # Can only be set in `payment` and `setup` mode.
    "always"|"if_required" customer_creation?;
    # If provided, this value will be used when the Customer object is created.
    # If not provided, customers will be asked to enter their email address.
    # Use this parameter to prefill customer data if you already have an email
    # on file. To access information about the customer once a session is
    # complete, use the `customer` field.
    string customer_email?;
    customer_update_params customer_update?;
    # The coupon or promotion code to apply to this Session. Currently, only up to one may be specified.
    discount_params[] discounts?;
    # Specifies which fields in the response should be expanded.
    checkout_sessions_bodyExpandItemsString[] expand?;
    # The Epoch time in seconds at which the Checkout Session will expire. It can be anywhere from 30 minutes to 24 hours after Checkout Session creation. By default, this value is 24 hours from creation.
    int expires_at?;
    invoice_creation_params invoice_creation?;
    # A list of items the customer is purchasing. Use this parameter to pass one-time or recurring [Prices](https://stripe.com/docs/api/prices).
    # 
    # For `payment` mode, there is a maximum of 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.
    # 
    # For `subscription` mode, there is a maximum of 20 line items with recurring Prices and 20 line items with one-time Prices. Line items with one-time Prices will be on the initial invoice only.
    line_item_params[] line_items?;
    # The IETF language tag of the locale Checkout is displayed in. If blank or `auto`, the browser's locale is used.
    "auto"|"bg"|"cs"|"da"|"de"|"el"|"en"|"en-GB"|"es"|"es-419"|"et"|"fi"|"fil"|"fr"|"fr-CA"|"hr"|"hu"|"id"|"it"|"ja"|"ko"|"lt"|"lv"|"ms"|"mt"|"nb"|"nl"|"pl"|"pt"|"pt-BR"|"ro"|"ru"|"sk"|"sl"|"sv"|"th"|"tr"|"vi"|"zh"|"zh-HK"|"zh-TW" locale?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The mode of the Checkout Session. Pass `subscription` if the Checkout Session includes at least one recurring item.
    "payment"|"setup"|"subscription" mode?;
    payment_intent_data_params payment_intent_data?;
    # Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.
    # This may occur if the Checkout Session includes a free trial or a discount.
    # 
    # Can only be set in `subscription` mode. Defaults to `always`.
    # 
    # If you'd like information on how to collect a payment method outside of Checkout, read the guide on configuring [subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).
    "always"|"if_required" payment_method_collection?;
    # The ID of the payment method configuration to use with this Checkout session.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_param payment_method_data?;
    payment_method_options_param payment_method_options?;
    # A list of the types of payment methods (e.g., `card`) this Checkout Session can accept.
    # 
    # You can omit this attribute to manage your payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    # See [Dynamic Payment Methods](https://stripe.com/docs/payments/payment-methods/integration-options#using-dynamic-payment-methods) for more details.
    # 
    # Read more about the supported payment methods and their requirements in our [payment
    # method details guide](/docs/payments/checkout/payment-methods).
    # 
    # If multiple payment methods are passed, Checkout will dynamically reorder them to
    # prioritize the most relevant payment methods based on the customer's location and
    # other characteristics.
    ("acss_debit"|"affirm"|"afterpay_clearpay"|"alipay"|"amazon_pay"|"au_becs_debit"|"bacs_debit"|"bancontact"|"blik"|"boleto"|"card"|"cashapp"|"customer_balance"|"eps"|"fpx"|"giropay"|"grabpay"|"ideal"|"klarna"|"konbini"|"link"|"mobilepay"|"multibanco"|"oxxo"|"p24"|"paynow"|"paypal"|"pix"|"promptpay"|"revolut_pay"|"sepa_debit"|"sofort"|"swish"|"twint"|"us_bank_account"|"wechat_pay"|"zip")[] payment_method_types?;
    phone_number_collection_params phone_number_collection?;
    # This parameter applies to `ui_mode: embedded`. Learn more about the [redirect behavior](https://stripe.com/docs/payments/checkout/custom-redirect-behavior) of embedded sessions. Defaults to `always`.
    "always"|"if_required"|"never" redirect_on_completion?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the
    # payment method's app or site. This parameter is required if ui_mode is `embedded`
    # and redirect-based payment methods are enabled on the session.
    @constraint:String {maxLength: 5000}
    string return_url?;
    saved_payment_method_options_param saved_payment_method_options?;
    setup_intent_data_param setup_intent_data?;
    shipping_address_collection_params shipping_address_collection?;
    # The shipping rate options to apply to this Session. Up to a maximum of 5.
    shipping_option_params[] shipping_options?;
    # Describes the type of transaction being performed by Checkout in order to customize
    # relevant text on the page, such as the submit button. `submit_type` can only be
    # specified on Checkout Sessions in `payment` mode. If blank or `auto`, `pay` is used.
    "auto"|"book"|"donate"|"pay" submit_type?;
    subscription_data_params subscription_data?;
    # The URL to which Stripe should send customers when payment or setup
    # is complete.
    # This parameter is not allowed if ui_mode is `embedded`. If you’d like to use
    # information from the successful Checkout Session on your page, read the
    # guide on [customizing your success page](https://stripe.com/docs/payments/checkout/custom-success-page).
    @constraint:String {maxLength: 5000}
    string success_url?;
    tax_id_collection_params tax_id_collection?;
    # The UI mode of the Session. Defaults to `hosted`.
    "embedded"|"hosted" ui_mode?;
|};

public type refunds_id_body record {|
    # Specifies which fields in the response should be expanded.
    refunds_id_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# Represents the Queries record for the operation: GetPromotionCodesPromotionCode
public type GetPromotionCodesPromotionCodeQueries record {
    # Specifies which fields in the response should be expanded.
    GetPromotionCodesPromotionCodeQueriesExpandItemsString[] expand?;
};

public type payment_method_detach_bodyExpandItemsString string;

public type persons_person_body record {|
    person_additional_tos_acceptances_specs additional_tos_acceptances?;
    legal_entity_and_kyc_address_specs_1 address?;
    japan_address_kana_specs_1 address_kana?;
    japan_address_kanji_specs_1 address_kanji?;
    # The person's date of birth.
    record {int day; int month; int year;}|"" dob?;
    person_documents_specs documents?;
    # The person's email address.
    string email?;
    # Specifies which fields in the response should be expanded.
    persons_person_bodyExpandItemsString[] expand?;
    # The person's first name.
    @constraint:String {maxLength: 5000}
    string first_name?;
    # The Kana variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kana?;
    # The Kanji variation of the person's first name (Japan only).
    @constraint:String {maxLength: 5000}
    string first_name_kanji?;
    # A list of alternate names or aliases that the person is known by.
    FullnamealiasesItemsString[]|"" full_name_aliases?;
    # The person's gender (International regulations require either "male" or "female").
    string gender?;
    # The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number?;
    # The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://docs.stripe.com/js/tokens/create_token?type=pii).
    @constraint:String {maxLength: 5000}
    string id_number_secondary?;
    # The person's last name.
    @constraint:String {maxLength: 5000}
    string last_name?;
    # The Kana variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kana?;
    # The Kanji variation of the person's last name (Japan only).
    @constraint:String {maxLength: 5000}
    string last_name_kanji?;
    # The person's maiden name.
    @constraint:String {maxLength: 5000}
    string maiden_name?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or "XX" if unavailable.
    @constraint:String {maxLength: 5000}
    string nationality?;
    # A [person token](https://docs.stripe.com/connect/account-tokens), used to securely provide details to the person.
    @constraint:String {maxLength: 5000}
    string person_token?;
    # The person's phone number.
    string phone?;
    # Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    @constraint:String {maxLength: 5000}
    string political_exposure?;
    address_specs_1 registered_address?;
    relationship_specs relationship?;
    # The last four digits of the person's Social Security number (U.S. only).
    string ssn_last_4?;
    person_verification_specs_1 verification?;
|};

public type europe record {
    standard standard?;
    "ioss"|"oss_non_union"|"oss_union"|"standard" 'type;
};

# 
public type Portal_flows_subscription_update_confirm_item record {
    # The ID of the [subscription item](https://stripe.com/docs/api/subscriptions/object#subscription_object-items-data-id) to be updated.
    string? id?;
    # The price the customer should subscribe to through this flow. The price must also be included in the configuration's [`features.subscription_update.products`](https://stripe.com/docs/api/customer_portal/configuration#portal_configuration_object-features-subscription_update-products).
    string? price?;
    # [Quantity](https://stripe.com/docs/subscriptions/quantities) for this item that the customer should subscribe to through this flow.
    int quantity?;
};

public type authorization_reverse_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_reverse_bodyExpandItemsString[] expand?;
    # The amount to reverse from the authorization. If not provided, the full amount of the authorization will be reversed. This amount is in the authorization currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int reverse_amount?;
|};

# 
public type TreasuryReceivedDebitsResourceReceivedDebitList record {
    # Details about each object.
    Treasury\.received_debit[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# 
public type Payment_method_options_affirm record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred language of the Affirm authorization page that the customer is redirected to.
    @constraint:String {maxLength: 30}
    string preferred_locale?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type treasury_settings_specs record {
    settings_terms_of_service_specs tos_acceptance?;
};

# Represents the Queries record for the operation: GetAccountsAccountPeople
public type GetAccountsAccountPeopleQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPeopleQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Filters on the list of people returned based on the person's relationship to the account's company.
    all_people_relationship_specs relationship?;
};

# 
public type Checkout_konbini_payment_method_options record {
    # The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.
    int? expires_after_days?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Payment_method_card_wallet_apple_pay record {
};

public type QuoteDefaulttaxratesItemsnull string|Tax_rate;

# Result from a phone check
public type Gelato_phone_report record {
    # Details on the verification error. Present when status is `unverified`.
    Gelato_phone_report_error? 'error?;
    # Phone to be verified.
    string? phone?;
    # Status of this `phone` check.
    "unverified"|"verified" status;
};

public type issuing_personalization_designs_body record {|
    # The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.
    string card_logo?;
    carrier_text_param carrier_text?;
    # Specifies which fields in the response should be expanded.
    issuing_personalization_designs_bodyExpandItemsString[] expand?;
    # A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.
    @constraint:String {maxLength: 200}
    string lookup_key?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Friendly display name.
    @constraint:String {maxLength: 200}
    string name?;
    # The physical bundle object belonging to this personalization design.
    @constraint:String {maxLength: 5000}
    string physical_bundle;
    preferences_param preferences?;
    # If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.
    boolean transfer_lookup_key?;
|};

# Mutually exclusive with billing_cycle_anchor and only valid with monthly and yearly price intervals. When provided, the billing_cycle_anchor is set to the next occurence of the day_of_month at the hour, minute, and second UTC.
public type billing_cycle_anchor_config_param record {
    int day_of_month;
    int hour?;
    int minute?;
    int month?;
    int second?;
};

# 
public type Shipping_rate_delivery_estimate_bound record {
    # A unit of time.
    "business_day"|"day"|"hour"|"month"|"week" unit;
    # Must be greater than 0.
    int value;
};

public type file_links_link_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type Account_requirementsPendingverificationItemsString string;

public type id_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    id_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Invoice_setting_subscription_schedule_phase_setting record {
    # The account tax IDs associated with this phase of the subscription schedule. Will be set on invoices generated by this phase of the subscription schedule.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
    int? days_until_due?;
    # The connected account that issues the invoice. The invoice is presented with the branding and support information of the specified account.
    Connect_account_reference? issuer?;
};

# SWIFT Records contain U.S. bank account details per the SWIFT format.
public type Funding_instructions_bank_transfer_swift_record record {
    # The account number
    @constraint:String {maxLength: 5000}
    string account_number;
    # The bank name
    @constraint:String {maxLength: 5000}
    string bank_name;
    # The SWIFT code
    @constraint:String {maxLength: 5000}
    string swift_code;
};

public type id_verify_bodyExpandItemsString string;

public type Test_helpers\.test_clock record {
    int created;
    int deletes_after;
    int frozen_time;
    string id;
    boolean livemode;
    string? name?;
    "test_helpers.test_clock" 'object;
    "advancing"|"internal_failure"|"ready" status;
};

public type all_people_relationship_specs record {
    boolean director?;
    boolean executive?;
    boolean legal_guardian?;
    boolean owner?;
    boolean representative?;
};

public type mandate_online_acceptance_params record {
    int date?;
    string ip?;
    @constraint:String {maxLength: 5000}
    string user_agent?;
};

public type authorization_controls_param_v2AllowedcategoriesItemsString "ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards";

public type shipping_ship_bodyExpandItemsString string;

@constraint:String {maxLength: 5000}
public type GetEventsIdQueriesExpandItemsString string;

# 
public type Setup_attempt_payment_method_details_card record {
    # Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? brand?;
    # Check results by Card networks on Card address and CVC at the time of authorization
    Setup_attempt_payment_method_details_card_checks? checks?;
    # Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.
    string? country?;
    # Two-digit number representing the card's expiration month.
    int? exp_month?;
    # Four-digit number representing the card's expiration year.
    int? exp_year?;
    # Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.
    # 
    # *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
    string? fingerprint?;
    # Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
    string? funding?;
    # The last four digits of the card.
    string? last4?;
    # Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
    string? network?;
    # Populated if this authorization used 3D Secure authentication.
    Three_d_secure_details? three_d_secure?;
    # If this Card is part of a card wallet, this contains the details of the card wallet.
    Setup_attempt_payment_method_details_card_wallet? wallet?;
};

public type secrets_delete_body record {|
    # Specifies which fields in the response should be expanded.
    secrets_delete_bodyExpandItemsString[] expand?;
    # A name for the secret that's unique within the scope.
    @constraint:String {maxLength: 5000}
    string name;
    scope_param_1 scope;
|};

# An object containing device type specific settings for Stripe S700 readers
public type stripe_s700 record {
    string|"" splashscreen?;
};

public type radar_value_lists_body record {|
    # The name of the value list for use in rules.
    @constraint:String {maxLength: 100}
    string alias;
    # Specifies which fields in the response should be expanded.
    radar_value_lists_bodyExpandItemsString[] expand?;
    # Type of the items in the value list. One of `card_fingerprint`, `us_bank_account_fingerprint`, `sepa_debit_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or `customer_id`. Use `string` if the item type is unknown or mixed.
    "card_bin"|"card_fingerprint"|"case_sensitive_string"|"country"|"customer_id"|"email"|"ip_address"|"sepa_debit_fingerprint"|"string"|"us_bank_account_fingerprint" item_type?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The human-readable name of the value list.
    @constraint:String {maxLength: 100}
    string name;
|};

# 
public type Outbound_payments_payment_method_details_us_bank_account record {
    # Account holder type: individual or company.
    "company"|"individual"? account_holder_type?;
    # Account type: checkings or savings. Defaults to checking if omitted.
    "checking"|"savings"? account_type?;
    # Name of the bank associated with the bank account.
    string? bank_name?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
    # ID of the mandate used to make this payment.
    string|Mandate mandate?;
    # The network rails used. See the [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn more about money movement timelines for each network type.
    "ach"|"us_domestic_wire" network;
    # Routing number of the bank account.
    string? routing_number?;
};

public type filtersAccountsubcategoriesItemsString "checking"|"savings";

# 
public type BillingMeterResourceBillingMeterEventSummaryList record {
    Billing\.meter_event_summary[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/billing/meters/[^/]+/event_summaries`}
    string url;
};

public type cardholders_cardholder_bodyExpandItemsString string;

# 
public type Bank_connections_resource_accountholder record {
    # The ID of the Stripe account this account belongs to. Should only be present if `account_holder.type` is `account`.
    string|Account account?;
    # ID of the Stripe customer this account belongs to. Present if and only if `account_holder.type` is `customer`.
    string|Customer customer?;
    # Type of account holder that this account belongs to.
    "account"|"customer" 'type;
};

public type lines_data_param_1 record {
    "delete"|"unassign" behavior;
    @constraint:String {maxLength: 5000}
    string id;
};

public type lines_data_param_2 record {
    int amount?;
    @constraint:String {maxLength: 5000}
    string description?;
    boolean discountable?;
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    @constraint:String {maxLength: 5000}
    string id;
    record {|string...;|}|"" metadata?;
    period_1 period?;
    @constraint:String {maxLength: 5000}
    string price?;
    one_time_price_data_with_product_data price_data?;
    int quantity?;
    record {int amount; record {string country?; string description?; string display_name; boolean inclusive; string jurisdiction?; decimal percentage; string state?; "amusement_tax"|"communications_tax"|"gst"|"hst"|"igst"|"jct"|"lease_tax"|"pst"|"qst"|"rst"|"sales_tax"|"vat" tax_type?;} tax_rate_data; int taxable_amount;}[]|"" tax_amounts?;
    TaxratesItemsString[]|"" tax_rates?;
};

# 
public type Checkout_giropay_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type payment_intents_body record {|
    # Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
    int amount;
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    int application_fee_amount?;
    automatic_payment_methods_param automatic_payment_methods?;
    # Controls when the funds will be captured from the customer's account.
    "automatic"|"automatic_async"|"manual" capture_method?;
    # Set to `true` to attempt to [confirm this PaymentIntent](https://stripe.com/docs/api/payment_intents/confirm) immediately. This parameter defaults to `false`. When creating and confirming a PaymentIntent at the same time, you can also provide the parameters available in the [Confirm API](https://stripe.com/docs/api/payment_intents/confirm).
    boolean confirm?;
    # Describes whether we can confirm this PaymentIntent automatically, or if it requires customer action to confirm the payment.
    "automatic"|"manual" confirmation_method?;
    # ID of the ConfirmationToken used to confirm this PaymentIntent.
    # 
    # If the provided ConfirmationToken contains properties that are also being provided in this request, such as `payment_method`, then the values in this request will take precedence.
    @constraint:String {maxLength: 5000}
    string confirmation_token?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the Customer this PaymentIntent belongs to, if one exists.
    # 
    # Payment methods attached to other Customers cannot be used with this PaymentIntent.
    # 
    # If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.
    @constraint:String {maxLength: 5000}
    string customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    @constraint:String {maxLength: 1000}
    string description?;
    # Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. Use this parameter for simpler integrations that don't handle customer actions, such as [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    boolean error_on_requires_action?;
    # Specifies which fields in the response should be expanded.
    payment_intents_bodyExpandItemsString[] expand?;
    # ID of the mandate that's used for this payment. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    @constraint:String {maxLength: 5000}
    string mandate?;
    # This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    record {record {int accepted_at?; record {} offline?; record {string ip_address; string user_agent;} online?; "offline"|"online" 'type;} customer_acceptance;}|"" mandate_data?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # Set to `true` to indicate that the customer isn't in your checkout flow during this payment attempt and can't authenticate. Use this parameter in scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    boolean|"one_off"|"recurring" off_session?;
    # The Stripe account ID that these funds are intended for. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
    string on_behalf_of?;
    # ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.
    # 
    # If you omit this parameter with `confirm=true`, `customer.default_source` attaches as this PaymentIntent's payment instrument to improve migration for users of the Charges API. We recommend that you explicitly provide the `payment_method` moving forward.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # The ID of the payment method configuration to use with this PaymentIntent.
    @constraint:String {maxLength: 100}
    string payment_method_configuration?;
    payment_method_data_params payment_method_data?;
    payment_method_options_param_14 payment_method_options?;
    # The list of payment method types (for example, a card) that this PaymentIntent can use. If you don't provide this, it defaults to ["card"]. Use `automatic_payment_methods` to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).
    payment_intents_bodyPaymentmethodtypesItemsString[] payment_method_types?;
    radar_options_with_hidden_options_2 radar_options?;
    # Email address to send the receipt to. If you specify `receipt_email` for a payment in live mode, you send a receipt regardless of your [email settings](https://dashboard.stripe.com/account/emails).
    string receipt_email?;
    # The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
    string return_url?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "off_session"|"on_session" setup_future_usage?;
    optional_fields_shipping_1 shipping?;
    # For card charges, use [statement_descriptor_suffix](https://stripe.com/docs/payments/account/statement-descriptors#dynamic). Otherwise, you can use this value as the complete description of a charge on your customers' statements. It must contain at least one letter and be 1–22 characters long.
    @constraint:String {maxLength: 22}
    string statement_descriptor?;
    # Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. The concatenated descriptor must contain 1-22 characters.
    @constraint:String {maxLength: 22}
    string statement_descriptor_suffix?;
    transfer_data_creation_params transfer_data?;
    # A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).
    string transfer_group?;
    # Set to `true` when confirming server-side and using Stripe.js, iOS, or Android client-side SDKs to handle the next actions.
    boolean use_stripe_sdk?;
|};

# Represents the Queries record for the operation: GetCustomersCustomerCards
public type GetCustomersCustomerCardsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCardsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after?;
};

# 
public type Payment_method_options_paypal record {
    # Controls when the funds will be captured from the customer's account.
    "manual" capture_method?;
    # Preferred locale of the PayPal checkout page that the customer is redirected to.
    string? preferred_locale?;
    # A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.
    string? reference?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none"|"off_session" setup_future_usage?;
};

# The dimensions of this product for shipping purposes.
public type package_dimensions_specs record {
    decimal height;
    decimal length;
    decimal weight;
    decimal width;
};

# 
public type Bank_connections_resource_balance_refresh record {
    # The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.
    int last_attempted_at;
    # Time at which the next balance refresh can be initiated. This value will be `null` when `status` is `pending`. Measured in seconds since the Unix epoch.
    int? next_refresh_available_at?;
    # The status of the last refresh attempt.
    "failed"|"pending"|"succeeded" status;
};

@constraint:String {maxLength: 5000}
public type GetIssuingPhysicalBundlesPhysicalBundleQueriesExpandItemsString string;

# 
public type QuotesResourceListLineItems record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetPayoutsPayout
public type GetPayoutsPayoutQueries record {
    # Specifies which fields in the response should be expanded.
    GetPayoutsPayoutQueriesExpandItemsString[] expand?;
};

# 
public type Person_relationship record {
    # Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.
    boolean? director?;
    # Whether the person has significant responsibility to control, manage, or direct the organization.
    boolean? executive?;
    # Whether the person is the legal guardian of the account's representative.
    boolean? legal_guardian?;
    # Whether the person is an owner of the account’s legal entity.
    boolean? owner?;
    # The percent owned by the person of the account's legal entity.
    decimal? percent_ownership?;
    # Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.
    boolean? representative?;
    # The person's title (e.g., CEO, Support Engineer).
    string? title?;
};

# 
public type Tax_product_registrations_resource_country_options_europe record {
    Tax_product_registrations_resource_country_options_eu_standard standard?;
    # Type of registration in an EU country.
    "ioss"|"oss_non_union"|"oss_union"|"standard" 'type;
};

# 
public type PaymentLinksResourceListLineItems record {
    # Details about each object.
    Item[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetTaxRatesTaxRateQueriesExpandItemsString string;

public type reader_process_setup_intent_bodyExpandItemsString string;

public type reader_process_payment_intent_body record {|
    # Specifies which fields in the response should be expanded.
    reader_process_payment_intent_bodyExpandItemsString[] expand?;
    # PaymentIntent ID
    @constraint:String {maxLength: 5000}
    string payment_intent;
    process_config process_config?;
|};

@constraint:String {maxLength: 5000}
public type Payment_method_interac_presentPreferredlocalesItemsString string;

# Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated `status_details`. Stripe or the platform may control features via the requested field.
public type feature_access_1 record {
    access card_issuing?;
    access deposit_insurance?;
    financial_addresses financial_addresses?;
    inbound_transfers inbound_transfers?;
    access intra_stripe_flows?;
    outbound_payments outbound_payments?;
    outbound_transfers outbound_transfers?;
};

public type plans_body record {|
    # Whether the plan is currently available for new subscriptions. Defaults to `true`.
    boolean active?;
    # Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.
    "last_during_period"|"last_ever"|"max"|"sum" aggregate_usage?;
    # A positive integer in cents (or local equivalent) (or 0 for a free plan) representing how much to charge on a recurring basis.
    int amount?;
    # Same as `amount`, but accepts a decimal value with at most 12 decimal places. Only one of `amount` and `amount_decimal` can be set.
    string amount_decimal?;
    # Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.
    "per_unit"|"tiered" billing_scheme?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Specifies which fields in the response should be expanded.
    plans_bodyExpandItemsString[] expand?;
    # An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.
    @constraint:String {maxLength: 5000}
    string id?;
    # Specifies billing frequency. Either `day`, `week`, `month` or `year`.
    "day"|"month"|"week"|"year" interval;
    # The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of three years interval allowed (3 years, 36 months, or 156 weeks).
    int interval_count?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    # The meter tracking the usage of a metered price
    @constraint:String {maxLength: 5000}
    string meter?;
    # A brief description of the plan, hidden from customers.
    @constraint:String {maxLength: 5000}
    string nickname?;
    record {boolean active?; string id?; record {|string...;|} metadata?; string name; string statement_descriptor?; string tax_code?; string unit_label?;}|string product?;
    # Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
    tier[] tiers?;
    # Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows.
    "graduated"|"volume" tiers_mode?;
    transform_usage_param transform_usage?;
    # Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
    int trial_period_days?;
    # Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.
    "licensed"|"metered" usage_type?;
|};

# Invoice Items represent the component lines of an [invoice](https://stripe.com/docs/api/invoices). An invoice item is added to an
# invoice by creating or updating it with an `invoice` field, at which point it will be included as
# [an invoice line item](https://stripe.com/docs/api/invoices/line_item) within
# [invoice.lines](https://stripe.com/docs/api/invoices/object#invoice_object-lines).
# 
# Invoice Items can be created before you are ready to actually send the invoice. This can be particularly useful when combined
# with a [subscription](https://stripe.com/docs/api/subscriptions). Sometimes you want to add a charge or credit to a customer, but actually charge
# or credit the customer’s card only at the end of a regular billing cycle. This is useful for combining several charges
# (to minimize per-transaction fees), or for having Stripe tabulate your usage-based billing totals.
# 
# Related guides: [Integrate with the Invoicing API](https://stripe.com/docs/invoicing/integration), [Subscription Invoices](https://stripe.com/docs/billing/invoices/subscription#adding-upcoming-invoice-items).
public type Invoiceitem record {
    # Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`.
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # The ID of the customer who will be billed when this invoice item is billed.
    string|Customer|Deleted_customer customer;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int date;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # If true, discounts will apply to this invoice item. Always false for prorations.
    boolean discountable;
    # The discounts which apply to the invoice item. Item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.
    (string|Discount)[]? discounts?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The ID of the invoice this invoice item belongs to.
    string|Invoice? invoice?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # String representing the object's type. Objects of the same type share the same value.
    "invoiceitem" 'object;
    Invoice_line_item_period period;
    # The price of the invoice item.
    Price? price?;
    # Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.
    boolean proration;
    # Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.
    int quantity;
    # The subscription that this invoice item has been created for, if any.
    string|Subscription? subscription?;
    # The subscription item that this invoice item has been created for, if any.
    @constraint:String {maxLength: 5000}
    string subscription_item?;
    # The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.
    Tax_rate[]? tax_rates?;
    # ID of the test clock this invoice item belongs to.
    string|Test_helpers\.test_clock? test_clock?;
    # Unit amount (in the `currency` specified) of the invoice item.
    int? unit_amount?;
    # Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.
    string? unit_amount_decimal?;
};

public type cards_id_bodyExpandItemsString string;

# 
public type Quotes_resource_total_details record {
    # This is the sum of all the discounts.
    int amount_discount;
    # This is the sum of all the shipping amounts.
    int? amount_shipping?;
    # This is the sum of all the tax amounts.
    int amount_tax;
    Quotes_resource_total_details_resource_breakdown breakdown?;
};

# Represents the Queries record for the operation: GetCustomersCustomerCardsId
public type GetCustomersCustomerCardsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerCardsIdQueriesExpandItemsString[] expand?;
};

# Balance transactions represent funds moving through your Stripe account.
# Stripe creates them for every type of transaction that enters or leaves your Stripe account balance.
# 
# Related guide: [Balance transaction types](https://stripe.com/docs/reports/balance-transaction-types)
public type Balance_transaction record {
    # Gross amount of this transaction (in cents (or local equivalent)). A positive value represents funds charged to another party, and a negative value represents funds sent to another party.
    int amount;
    # The date that the transaction's net funds become available in the Stripe balance.
    int available_on;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # If applicable, this transaction uses an exchange rate. If money converts from currency A to currency B, then the `amount` in currency A, multipled by the `exchange_rate`, equals the `amount` in currency B. For example, if you charge a customer 10.00 EUR, the PaymentIntent's `amount` is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your Stripe account, the BalanceTransaction's `amount` is `1234`, its `currency` is `usd`, and the `exchange_rate` is `1.234`.
    decimal? exchange_rate?;
    # Fees (in cents (or local equivalent)) paid for this transaction. Represented as a positive integer when assessed.
    int fee;
    # Detailed breakdown of fees (in cents (or local equivalent)) paid for this transaction.
    Fee[] fee_details;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Net impact to a Stripe balance (in cents (or local equivalent)). A positive value represents incrementing a Stripe balance, and a negative value decrementing a Stripe balance. You can calculate the net impact of a transaction on a balance by `amount` - `fee`
    int net;
    # String representing the object's type. Objects of the same type share the same value.
    "balance_transaction" 'object;
    # Learn more about how [reporting categories](https://stripe.com/docs/reports/reporting-categories) can help you understand balance transactions from an accounting perspective.
    @constraint:String {maxLength: 5000}
    string reporting_category;
    # This transaction relates to the Stripe object.
    string|Application_fee|Charge|Connect_collection_transfer|Customer_cash_balance_transaction|Dispute|Fee_refund|Issuing\.authorization|Issuing\.dispute|Issuing\.transaction|Payout|Refund|Reserve_transaction|Tax_deducted_at_source|Topup|Transfer|Transfer_reversal? 'source?;
    # The transaction's net funds status in the Stripe balance, which are either `available` or `pending`.
    @constraint:String {maxLength: 5000}
    string status;
    # Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types). To classify transactions for accounting purposes, consider `reporting_category` instead.
    "adjustment"|"advance"|"advance_funding"|"anticipation_repayment"|"application_fee"|"application_fee_refund"|"charge"|"climate_order_purchase"|"climate_order_refund"|"connect_collection_transfer"|"contribution"|"issuing_authorization_hold"|"issuing_authorization_release"|"issuing_dispute"|"issuing_transaction"|"obligation_outbound"|"obligation_reversal_inbound"|"payment"|"payment_failure_refund"|"payment_network_reserve_hold"|"payment_network_reserve_release"|"payment_refund"|"payment_reversal"|"payment_unreconciled"|"payout"|"payout_cancel"|"payout_failure"|"refund"|"refund_failure"|"reserve_transaction"|"reserved_funds"|"stripe_fee"|"stripe_fx_fee"|"tax_fee"|"topup"|"topup_reversal"|"transfer"|"transfer_cancel"|"transfer_failure"|"transfer_refund" 'type;
};

public type refunds_refund_body record {|
    # Specifies which fields in the response should be expanded.
    refunds_refund_bodyExpandItemsString[] expand?;
    record {|string...;|}|"" metadata?;
|};

@constraint:String {maxLength: 5000}
public type GetAppsSecretsQueriesExpandItemsString string;

public type fuel_specs_1 record {
    @constraint:String {maxLength: 5000}
    string industry_product_code?;
    string quantity_decimal?;
    "diesel"|"other"|"unleaded_plus"|"unleaded_regular"|"unleaded_super" 'type?;
    "charging_minute"|"imperial_gallon"|"kilogram"|"kilowatt_hour"|"liter"|"other"|"pound"|"us_gallon" unit?;
    string unit_cost_decimal?;
};

public type flow_data_subscription_cancel_param record {
    retention_param retention?;
    @constraint:String {maxLength: 5000}
    string subscription;
};

# 
public type Setup_attempt_payment_method_details record {
    Setup_attempt_payment_method_details_acss_debit acss_debit?;
    Setup_attempt_payment_method_details_amazon_pay amazon_pay?;
    Setup_attempt_payment_method_details_au_becs_debit au_becs_debit?;
    Setup_attempt_payment_method_details_bacs_debit bacs_debit?;
    Setup_attempt_payment_method_details_bancontact bancontact?;
    Setup_attempt_payment_method_details_boleto boleto?;
    Setup_attempt_payment_method_details_card card?;
    Setup_attempt_payment_method_details_card_present card_present?;
    Setup_attempt_payment_method_details_cashapp cashapp?;
    Setup_attempt_payment_method_details_ideal ideal?;
    Setup_attempt_payment_method_details_klarna klarna?;
    Setup_attempt_payment_method_details_link link?;
    Setup_attempt_payment_method_details_paypal paypal?;
    Setup_attempt_payment_method_details_revolut_pay revolut_pay?;
    Setup_attempt_payment_method_details_sepa_debit sepa_debit?;
    Setup_attempt_payment_method_details_sofort sofort?;
    # The type of the payment method used in the SetupIntent (e.g., `card`). An additional hash is included on `payment_method_details` with a name matching this value. It contains confirmation-specific information for the payment method.
    @constraint:String {maxLength: 5000}
    string 'type;
    Setup_attempt_payment_method_details_us_bank_account us_bank_account?;
};

# Represents the Queries record for the operation: GetEntitlementsFeaturesId
public type GetEntitlementsFeaturesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetEntitlementsFeaturesIdQueriesExpandItemsString[] expand?;
};

public type id_verify_body_1 record {|
    # Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    int[] amounts?;
    # Specifies which fields in the response should be expanded.
    id_verify_body_1ExpandItemsString[] expand?;
|};

# Represents the Queries record for the operation: GetAccountsAccountPeoplePerson
public type GetAccountsAccountPeoplePersonQueries record {
    # Specifies which fields in the response should be expanded.
    GetAccountsAccountPeoplePersonQueriesExpandItemsString[] expand?;
};

public type CustomfieldsItemsObject record {
    string name;
    string value;
};

# 
public type Issuing_card_shipping_address_validation record {
    # The address validation capabilities to use.
    "disabled"|"normalization_only"|"validation_and_normalization" mode;
    # The normalized shipping address.
    Address? normalized_address?;
    # The validation result for the shipping address.
    "indeterminate"|"likely_deliverable"|"likely_undeliverable"? result?;
};

# 
public type Deleted_card record {
    # Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.
    string? currency?;
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "card" 'object;
};

# 
public type Issuing_authorization_amount_details record {
    # The fee charged by the ATM for the cash withdrawal.
    int? atm_fee?;
    # The amount of cash requested by the cardholder.
    int? cashback_amount?;
};

public type id_post_bodyExpandItemsString string;

# `Source` objects allow you to accept a variety of payment methods. They
# represent a customer's payment instrument, and can be used with the Stripe API
# just like a `Card` object: once chargeable, they can be charged, or can be
# attached to customers.
# 
# Stripe doesn't recommend using the deprecated [Sources API](https://stripe.com/docs/api/sources).
# We recommend that you adopt the [PaymentMethods API](https://stripe.com/docs/api/payment_methods).
# This newer API provides access to our latest features and payment method types.
# 
# Related guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).
public type Source record {
    Source_type_ach_credit_transfer ach_credit_transfer?;
    Source_type_ach_debit ach_debit?;
    Source_type_acss_debit acss_debit?;
    Source_type_alipay alipay?;
    # A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.
    int? amount?;
    Source_type_au_becs_debit au_becs_debit?;
    Source_type_bancontact bancontact?;
    Source_type_card card?;
    Source_type_card_present card_present?;
    # The client secret of the source. Used for client-side retrieval using a publishable key.
    @constraint:String {maxLength: 5000}
    string client_secret;
    Source_code_verification_flow code_verification?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.
    string? currency?;
    # The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.
    @constraint:String {maxLength: 5000}
    string customer?;
    Source_type_eps eps?;
    # The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.
    @constraint:String {maxLength: 5000}
    string flow;
    Source_type_giropay giropay?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    Source_type_ideal ideal?;
    Source_type_klarna klarna?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    Source_type_multibanco multibanco?;
    # String representing the object's type. Objects of the same type share the same value.
    "source" 'object;
    # Information about the owner of the payment instrument that may be used or required by particular source types.
    Source_owner? owner?;
    Source_type_p24 p24?;
    Source_receiver_flow receiver?;
    Source_redirect_flow redirect?;
    Source_type_sepa_debit sepa_debit?;
    Source_type_sofort sofort?;
    Source_order source_order?;
    # Extra information about a source. This will appear on your customer's statement every time you charge the source.
    string? statement_descriptor?;
    # The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.
    @constraint:String {maxLength: 5000}
    string status;
    Source_type_three_d_secure three_d_secure?;
    # The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.
    "ach_credit_transfer"|"ach_debit"|"acss_debit"|"alipay"|"au_becs_debit"|"bancontact"|"card"|"card_present"|"eps"|"giropay"|"ideal"|"klarna"|"multibanco"|"p24"|"sepa_debit"|"sofort"|"three_d_secure"|"wechat" 'type;
    # Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.
    string? usage?;
    Source_type_wechat wechat?;
};

public type account_people_bodyExpandItemsString string;

public type inbound_transfer_cancel_body record {|
    # Specifies which fields in the response should be expanded.
    inbound_transfer_cancel_bodyExpandItemsString[] expand?;
|};

# 
public type Verification_session_redaction record {
    # Indicates whether this object and its related objects have been redacted or not.
    "processing"|"redacted" status;
};

public type id_fail_body record {|
    # Specifies which fields in the response should be expanded.
    id_fail_bodyExpandItemsString[] expand?;
    failure_details_params failure_details?;
|};

# A `Payout` object is created when you receive funds from Stripe, or when you
# initiate a payout to either a bank account or debit card of a [connected
# Stripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,
# and list all payouts. Payouts are made on [varying
# schedules](/docs/connect/manage-payout-schedule), depending on your country and
# industry.
# 
# Related guide: [Receiving payouts](https://stripe.com/docs/payouts)
public type Payout record {
    # The amount (in cents (or local equivalent)) that transfers to your bank account or debit card.
    int amount;
    # The application fee (if any) for the payout. [See the Connect documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees) for details.
    string|Application_fee? application_fee?;
    # The amount of the application fee (if any) requested for the payout. [See the Connect documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees) for details.
    int? application_fee_amount?;
    # Date that you can expect the payout to arrive in the bank. This factors in delays to account for weekends or bank holidays.
    int arrival_date;
    # Returns `true` if the payout is created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule) and `false` if it's [requested manually](https://stripe.com/docs/payouts#manual-payouts).
    boolean automatic;
    # ID of the balance transaction that describes the impact of this payout on your account balance.
    string|Balance_transaction? balance_transaction?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # ID of the bank account or card the payout is sent to.
    string|Bank_account|Card|Deleted_bank_account|Deleted_card? destination?;
    # If the payout fails or cancels, this is the ID of the balance transaction that reverses the initial balance transaction and returns the funds from the failed payout back in your balance.
    string|Balance_transaction? failure_balance_transaction?;
    # Error code that provides a reason for a payout failure, if available. View our [list of failure codes](https://stripe.com/docs/api#payout_failures).
    string? failure_code?;
    # Message that provides the reason for a payout failure, if available.
    string? failure_message?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # The method used to send this payout, which can be `standard` or `instant`. `instant` is supported for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).
    @constraint:String {maxLength: 5000}
    string method;
    # String representing the object's type. Objects of the same type share the same value.
    "payout" 'object;
    # If the payout reverses another, this is the ID of the original payout.
    string|Payout? original_payout?;
    # If `completed`, you can use the [Balance Transactions API](https://stripe.com/docs/api/balance_transactions/list#balance_transaction_list-payout) to list all balance transactions that are paid out in this payout.
    "completed"|"in_progress"|"not_applicable" reconciliation_status;
    # If the payout reverses, this is the ID of the payout that reverses this payout.
    string|Payout? reversed_by?;
    # The source balance this payout came from, which can be one of the following: `card`, `fpx`, or `bank_account`.
    @constraint:String {maxLength: 5000}
    string source_type;
    # Extra information about a payout that displays on the user's bank statement.
    string? statement_descriptor?;
    # Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it's submitted to the bank, when it becomes `in_transit`. The status changes to `paid` if the transaction succeeds, or to `failed` or `canceled` (within 5 business days). Some payouts that fail might initially show as `paid`, then change to `failed`.
    @constraint:String {maxLength: 5000}
    string status;
    # Can be `bank_account` or `card`.
    "bank_account"|"card" 'type;
};

# 
public type Payment_method_zip record {
};

@constraint:String {maxLength: 5000}
public type GetCustomersCustomerCardsIdQueriesExpandItemsString string;

# 
public type PayoutList record {
    Payout[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payouts`}
    string url;
};

@constraint:String {maxLength: 5000}
public type GetAccountsAccountCapabilitiesQueriesExpandItemsString string;

public type intent_capture_bodyExpandItemsString string;

# All invoices will be billed using the specified settings.
public type invoice_settings_param_1 record {
    AccounttaxidsItemsString[]|"" account_tax_ids?;
    param_3 issuer?;
};

# Represents the Queries record for the operation: GetCustomersCustomerSourcesId
public type GetCustomersCustomerSourcesIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerSourcesIdQueriesExpandItemsString[] expand?;
};

# 
public type Issuing_card_google_pay record {
    # Google Pay Eligibility
    boolean eligible;
    # Reason the card is ineligible for Google Pay
    "missing_agreement"|"missing_cardholder_contact"|"unsupported_region"? ineligible_reason?;
};

public type invoice_pay_body record {|
    # Specifies which fields in the response should be expanded.
    invoice_pay_bodyExpandItemsString[] expand?;
    # In cases where the source used to pay the invoice has insufficient funds, passing `forgive=true` controls whether a charge should be attempted for the full amount available on the source, up to the amount to fully pay the invoice. This effectively forgives the difference between the amount available on the source and the amount due. 
    # 
    # Passing `forgive=false` will fail the charge if the source hasn't been pre-funded with the right amount. An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the difference. Defaults to `false`.
    boolean forgive?;
    # ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the payment_method param or the invoice's default_payment_method or default_source, if set.
    string|"" mandate?;
    # Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `true` (off-session).
    boolean off_session?;
    # Boolean representing whether an invoice is paid outside of Stripe. This will result in no charge being made. Defaults to `false`.
    boolean paid_out_of_band?;
    # A PaymentMethod to be charged. The PaymentMethod must be the ID of a PaymentMethod belonging to the customer associated with the invoice being paid.
    @constraint:String {maxLength: 5000}
    string payment_method?;
    # A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.
    @constraint:String {maxLength: 5000}
    string 'source?;
|};

# 
public type Payment_method_afterpay_clearpay record {
};

# 
public type Customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer record {
    # The last 4 digits of the account number of the sender of the funding.
    string? account_number_last4?;
    # The full name of the sender, as supplied by the sending bank.
    string? sender_name?;
    # The sort code of the bank of the sender of the funding
    string? sort_code?;
};

# Settings for the cost of shipping for this invoice.
public type shipping_cost record {
    @constraint:String {maxLength: 5000}
    string shipping_rate?;
    method_params shipping_rate_data?;
};

# 
public type Connect_embedded_payments_config_claim record {
    # Whether the embedded component is enabled.
    boolean enabled;
    Connect_embedded_payments_features features;
};

# 
public type Payment_method_card_wallet_amex_express_checkout record {
};

# 
public type Tax_product_resource_postal_address record {
    # City, district, suburb, town, or village.
    string? city?;
    # Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    @constraint:String {maxLength: 5000}
    string country;
    # Address line 1 (e.g., street, PO Box, or company name).
    string? line1?;
    # Address line 2 (e.g., apartment, suite, unit, or building).
    string? line2?;
    # ZIP or postal code.
    string? postal_code?;
    # State/province as an [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision code, without country prefix. Example: "NY" or "TX".
    string? state?;
};

# Business information about the account.
public type business_profile_specs record {
    annual_revenue_specs annual_revenue?;
    int estimated_worker_count?;
    @constraint:String {maxLength: 4}
    string mcc?;
    monthly_estimated_revenue_specs monthly_estimated_revenue?;
    @constraint:String {maxLength: 5000}
    string name?;
    @constraint:String {maxLength: 40000}
    string product_description?;
    address_specs support_address?;
    string support_email?;
    @constraint:String {maxLength: 5000}
    string support_phone?;
    string|"" support_url?;
    string url?;
};

# Represents the Queries record for the operation: GetTreasuryFinancialAccounts
public type GetTreasuryFinancialAccountsQueries record {
    # An object ID cursor for use in pagination.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetTreasuryFinancialAccountsQueriesExpandItemsString[] expand?;
    # Only return FinancialAccounts that were created during the given date interval.
    created_43 created?;
    # A limit ranging from 1 to 100 (defaults to 10).
    int 'limit?;
    # An object ID cursor for use in pagination.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Setup_intent_payment_method_options_us_bank_account record {
    Linked_account_options_us_bank_account financial_connections?;
    Payment_method_options_us_bank_account_mandate_options mandate_options?;
    # Bank account verification method.
    "automatic"|"instant"|"microdeposits" verification_method?;
};

public type Tax\.settings record {
    Tax_product_resource_tax_settings_defaults defaults;
    Tax_product_resource_tax_settings_head_office? head_office?;
    boolean livemode;
    "tax.settings" 'object;
    "active"|"pending" status;
    Tax_product_resource_tax_settings_status_details status_details;
};

# 
public type Payment_flows_amount_details record {
    Payment_flows_amount_details_resource_tip tip?;
};

# A phase describes the plans, coupon, and trialing status of a subscription for a predefined time period.
public type Subscription_schedule_phase_configuration record {
    # A list of prices and quantities that will generate invoice items appended to the next invoice for this phase.
    Subscription_schedule_add_invoice_item[] add_invoice_items;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account during this phase of the schedule.
    decimal? application_fee_percent?;
    Schedules_phase_automatic_tax automatic_tax?;
    # Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    "automatic"|"phase_start"? billing_cycle_anchor?;
    # Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
    Subscription_billing_thresholds? billing_thresholds?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.
    "charge_automatically"|"send_invoice"? collection_method?;
    # ID of the coupon to use during this phase of the subscription schedule.
    string|Coupon|Deleted_coupon? coupon?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.
    string|Payment_method? default_payment_method?;
    # The default tax rates to apply to the subscription during this phase of the subscription schedule.
    Tax_rate[]? default_tax_rates?;
    # Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.
    string? description?;
    # The stackable discounts that will be applied to the subscription on this phase. Subscription item discounts are applied before subscription discounts.
    Discounts_resource_stackable_discount[] discounts;
    # The end of this phase of the subscription schedule.
    int end_date;
    # The invoice settings applicable during this phase.
    Invoice_setting_subscription_schedule_phase_setting? invoice_settings?;
    # Subscription items to configure the subscription to during this phase of the subscription schedule.
    Subscription_schedule_configuration_item[] items;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to a phase. Metadata on a schedule's phase will update the underlying subscription's `metadata` when the phase is entered. Updating the underlying subscription's `metadata` directly will not affect the current phase's `metadata`.
    record {|string...;|}? metadata?;
    # The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.
    string|Account? on_behalf_of?;
    # If the subscription schedule will prorate when transitioning to this phase. Possible values are `create_prorations` and `none`.
    "always_invoice"|"create_prorations"|"none" proration_behavior;
    # The start of this phase of the subscription schedule.
    int start_date;
    # The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.
    Subscription_transfer_data? transfer_data?;
    # When the trial ends within the phase.
    int? trial_end?;
};

public type invoice_send_bodyExpandItemsString string;

# 
public type Deleted_plan record {
    # Always true for a deleted object
    true deleted;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # String representing the object's type. Objects of the same type share the same value.
    "plan" 'object;
};

public type accounts_body record {|
    # An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.
    @constraint:String {maxLength: 5000}
    string account_token?;
    # Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details.
    record {string account_holder_name?; "company"|"individual" account_holder_type?; string account_number; "checking"|"futsu"|"savings"|"toza" account_type?; string country; string currency?; record {record {bank_account_ownership_verificationFilesItemsString[] files?;} bank_account_ownership_verification?;} documents?; "bank_account" 'object?; string routing_number?;}|string bank_account?;
    business_profile_specs business_profile?;
    # The business type. Once you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    "company"|"government_entity"|"individual"|"non_profit" business_type?;
    capabilities_param capabilities?;
    company_specs company?;
    controller_specs controller?;
    # The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created. Available countries include [Stripe's global markets](https://stripe.com/global) as well as countries where [cross-border payouts](https://stripe.com/docs/connect/cross-border-payouts) are supported.
    @constraint:String {maxLength: 5000}
    string country?;
    # Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://docs.stripe.com/payouts).
    string default_currency?;
    documents_specs documents?;
    # The email address of the account holder. This is only to make the account easier to identify to you. If [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts, Stripe doesn't email the account without your consent.
    string email?;
    # Specifies which fields in the response should be expanded.
    accounts_bodyExpandItemsString[] expand?;
    # A card or bank account to attach to the account for receiving [payouts](/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](/js), or a dictionary, as documented in the `external_account` parameter for [bank account](/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](/api#account_create_bank_account) or [card creation](/api#account_create_card) APIs. After you create an [Account Link](/api/account_links) or [Account Session](/api/account_sessions), this property can only be updated for accounts where [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection) is `application`, which includes Custom accounts.
    @constraint:String {maxLength: 5000}
    string external_account?;
    individual_specs individual?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
    settings_specs settings?;
    tos_acceptance_specs tos_acceptance?;
    # The type of Stripe account to create. May be one of `custom`, `express` or `standard`.
    "custom"|"express"|"standard" 'type?;
|};

# A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.
public type payment_intent_data_update_params record {
    string|"" description?;
    record {|string...;|}|"" metadata?;
    string|"" statement_descriptor?;
    string|"" statement_descriptor_suffix?;
    string|"" transfer_group?;
};

public type reader_set_reader_display_bodyExpandItemsString string;

# Represents the Queries record for the operation: GetFinancialConnectionsAccountsAccountOwners
public type GetFinancialConnectionsAccountsAccountOwnersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetFinancialConnectionsAccountsAccountOwnersQueriesExpandItemsString[] expand?;
    # The ID of the ownership object to fetch owners from.
    @constraint:String {maxLength: 5000}
    string ownership;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

public type financial_accounts_financial_account_bodyExpandItemsString string;

public type Financial_connections\.session record {
    Bank_connections_resource_accountholder? account_holder?;
    BankConnectionsResourceLinkedAccountList_1 accounts;
    string client_secret;
    Bank_connections_resource_link_account_session_filters filters?;
    string id;
    boolean livemode;
    "financial_connections.session" 'object;
    ("balances"|"ownership"|"payment_method"|"transactions")[] permissions;
    ("balances"|"ownership"|"transactions")[]? prefetch?;
    string return_url?;
};

# 
public type Issuing_cardholder_spending_limit record {
    # Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
    int amount;
    # Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.
    ("ac_refrigeration_repair"|"accounting_bookkeeping_services"|"advertising_services"|"agricultural_cooperative"|"airlines_air_carriers"|"airports_flying_fields"|"ambulance_services"|"amusement_parks_carnivals"|"antique_reproductions"|"antique_shops"|"aquariums"|"architectural_surveying_services"|"art_dealers_and_galleries"|"artists_supply_and_craft_shops"|"auto_and_home_supply_stores"|"auto_body_repair_shops"|"auto_paint_shops"|"auto_service_shops"|"automated_cash_disburse"|"automated_fuel_dispensers"|"automobile_associations"|"automotive_parts_and_accessories_stores"|"automotive_tire_stores"|"bail_and_bond_payments"|"bakeries"|"bands_orchestras"|"barber_and_beauty_shops"|"betting_casino_gambling"|"bicycle_shops"|"billiard_pool_establishments"|"boat_dealers"|"boat_rentals_and_leases"|"book_stores"|"books_periodicals_and_newspapers"|"bowling_alleys"|"bus_lines"|"business_secretarial_schools"|"buying_shopping_services"|"cable_satellite_and_other_pay_television_and_radio"|"camera_and_photographic_supply_stores"|"candy_nut_and_confectionery_stores"|"car_and_truck_dealers_new_used"|"car_and_truck_dealers_used_only"|"car_rental_agencies"|"car_washes"|"carpentry_services"|"carpet_upholstery_cleaning"|"caterers"|"charitable_and_social_service_organizations_fundraising"|"chemicals_and_allied_products"|"child_care_services"|"childrens_and_infants_wear_stores"|"chiropodists_podiatrists"|"chiropractors"|"cigar_stores_and_stands"|"civic_social_fraternal_associations"|"cleaning_and_maintenance"|"clothing_rental"|"colleges_universities"|"commercial_equipment"|"commercial_footwear"|"commercial_photography_art_and_graphics"|"commuter_transport_and_ferries"|"computer_network_services"|"computer_programming"|"computer_repair"|"computer_software_stores"|"computers_peripherals_and_software"|"concrete_work_services"|"construction_materials"|"consulting_public_relations"|"correspondence_schools"|"cosmetic_stores"|"counseling_services"|"country_clubs"|"courier_services"|"court_costs"|"credit_reporting_agencies"|"cruise_lines"|"dairy_products_stores"|"dance_hall_studios_schools"|"dating_escort_services"|"dentists_orthodontists"|"department_stores"|"detective_agencies"|"digital_goods_applications"|"digital_goods_games"|"digital_goods_large_volume"|"digital_goods_media"|"direct_marketing_catalog_merchant"|"direct_marketing_combination_catalog_and_retail_merchant"|"direct_marketing_inbound_telemarketing"|"direct_marketing_insurance_services"|"direct_marketing_other"|"direct_marketing_outbound_telemarketing"|"direct_marketing_subscription"|"direct_marketing_travel"|"discount_stores"|"doctors"|"door_to_door_sales"|"drapery_window_covering_and_upholstery_stores"|"drinking_places"|"drug_stores_and_pharmacies"|"drugs_drug_proprietaries_and_druggist_sundries"|"dry_cleaners"|"durable_goods"|"duty_free_stores"|"eating_places_restaurants"|"educational_services"|"electric_razor_stores"|"electric_vehicle_charging"|"electrical_parts_and_equipment"|"electrical_services"|"electronics_repair_shops"|"electronics_stores"|"elementary_secondary_schools"|"emergency_services_gcas_visa_use_only"|"employment_temp_agencies"|"equipment_rental"|"exterminating_services"|"family_clothing_stores"|"fast_food_restaurants"|"financial_institutions"|"fines_government_administrative_entities"|"fireplace_fireplace_screens_and_accessories_stores"|"floor_covering_stores"|"florists"|"florists_supplies_nursery_stock_and_flowers"|"freezer_and_locker_meat_provisioners"|"fuel_dealers_non_automotive"|"funeral_services_crematories"|"furniture_home_furnishings_and_equipment_stores_except_appliances"|"furniture_repair_refinishing"|"furriers_and_fur_shops"|"general_services"|"gift_card_novelty_and_souvenir_shops"|"glass_paint_and_wallpaper_stores"|"glassware_crystal_stores"|"golf_courses_public"|"government_licensed_horse_dog_racing_us_region_only"|"government_licensed_online_casions_online_gambling_us_region_only"|"government_owned_lotteries_non_us_region"|"government_owned_lotteries_us_region_only"|"government_services"|"grocery_stores_supermarkets"|"hardware_equipment_and_supplies"|"hardware_stores"|"health_and_beauty_spas"|"hearing_aids_sales_and_supplies"|"heating_plumbing_a_c"|"hobby_toy_and_game_shops"|"home_supply_warehouse_stores"|"hospitals"|"hotels_motels_and_resorts"|"household_appliance_stores"|"industrial_supplies"|"information_retrieval_services"|"insurance_default"|"insurance_underwriting_premiums"|"intra_company_purchases"|"jewelry_stores_watches_clocks_and_silverware_stores"|"landscaping_services"|"laundries"|"laundry_cleaning_services"|"legal_services_attorneys"|"luggage_and_leather_goods_stores"|"lumber_building_materials_stores"|"manual_cash_disburse"|"marinas_service_and_supplies"|"marketplaces"|"masonry_stonework_and_plaster"|"massage_parlors"|"medical_and_dental_labs"|"medical_dental_ophthalmic_and_hospital_equipment_and_supplies"|"medical_services"|"membership_organizations"|"mens_and_boys_clothing_and_accessories_stores"|"mens_womens_clothing_stores"|"metal_service_centers"|"miscellaneous"|"miscellaneous_apparel_and_accessory_shops"|"miscellaneous_auto_dealers"|"miscellaneous_business_services"|"miscellaneous_food_stores"|"miscellaneous_general_merchandise"|"miscellaneous_general_services"|"miscellaneous_home_furnishing_specialty_stores"|"miscellaneous_publishing_and_printing"|"miscellaneous_recreation_services"|"miscellaneous_repair_shops"|"miscellaneous_specialty_retail"|"mobile_home_dealers"|"motion_picture_theaters"|"motor_freight_carriers_and_trucking"|"motor_homes_dealers"|"motor_vehicle_supplies_and_new_parts"|"motorcycle_shops_and_dealers"|"motorcycle_shops_dealers"|"music_stores_musical_instruments_pianos_and_sheet_music"|"news_dealers_and_newsstands"|"non_fi_money_orders"|"non_fi_stored_value_card_purchase_load"|"nondurable_goods"|"nurseries_lawn_and_garden_supply_stores"|"nursing_personal_care"|"office_and_commercial_furniture"|"opticians_eyeglasses"|"optometrists_ophthalmologist"|"orthopedic_goods_prosthetic_devices"|"osteopaths"|"package_stores_beer_wine_and_liquor"|"paints_varnishes_and_supplies"|"parking_lots_garages"|"passenger_railways"|"pawn_shops"|"pet_shops_pet_food_and_supplies"|"petroleum_and_petroleum_products"|"photo_developing"|"photographic_photocopy_microfilm_equipment_and_supplies"|"photographic_studios"|"picture_video_production"|"piece_goods_notions_and_other_dry_goods"|"plumbing_heating_equipment_and_supplies"|"political_organizations"|"postal_services_government_only"|"precious_stones_and_metals_watches_and_jewelry"|"professional_services"|"public_warehousing_and_storage"|"quick_copy_repro_and_blueprint"|"railroads"|"real_estate_agents_and_managers_rentals"|"record_stores"|"recreational_vehicle_rentals"|"religious_goods_stores"|"religious_organizations"|"roofing_siding_sheet_metal"|"secretarial_support_services"|"security_brokers_dealers"|"service_stations"|"sewing_needlework_fabric_and_piece_goods_stores"|"shoe_repair_hat_cleaning"|"shoe_stores"|"small_appliance_repair"|"snowmobile_dealers"|"special_trade_services"|"specialty_cleaning"|"sporting_goods_stores"|"sporting_recreation_camps"|"sports_and_riding_apparel_stores"|"sports_clubs_fields"|"stamp_and_coin_stores"|"stationary_office_supplies_printing_and_writing_paper"|"stationery_stores_office_and_school_supply_stores"|"swimming_pools_sales"|"t_ui_travel_germany"|"tailors_alterations"|"tax_payments_government_agencies"|"tax_preparation_services"|"taxicabs_limousines"|"telecommunication_equipment_and_telephone_sales"|"telecommunication_services"|"telegraph_services"|"tent_and_awning_shops"|"testing_laboratories"|"theatrical_ticket_agencies"|"timeshares"|"tire_retreading_and_repair"|"tolls_bridge_fees"|"tourist_attractions_and_exhibits"|"towing_services"|"trailer_parks_campgrounds"|"transportation_services"|"travel_agencies_tour_operators"|"truck_stop_iteration"|"truck_utility_trailer_rentals"|"typesetting_plate_making_and_related_services"|"typewriter_stores"|"u_s_federal_government_agencies_or_departments"|"uniforms_commercial_clothing"|"used_merchandise_and_secondhand_stores"|"utilities"|"variety_stores"|"veterinary_services"|"video_amusement_game_supplies"|"video_game_arcades"|"video_tape_rental_stores"|"vocational_trade_schools"|"watch_jewelry_repair"|"welding_repair"|"wholesale_clubs"|"wig_and_toupee_stores"|"wires_money_orders"|"womens_accessory_and_specialty_shops"|"womens_ready_to_wear_stores"|"wrecking_and_salvage_yards")[]? categories?;
    # Interval (or event) to which the amount applies.
    "all_time"|"daily"|"monthly"|"per_authorization"|"weekly"|"yearly" interval;
};

# 
public type Legal_entity_person_verification_document record {
    # The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? back?;
    # A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say "Identity document is too unclear to read".
    string? details?;
    # One of `document_corrupt`, `document_country_not_supported`, `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`, `document_too_large`, or `document_type_not_supported`. A machine-readable code specifying the verification state for this document.
    string? details_code?;
    # The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.
    string|File? front?;
};

# 
public type Payment_method_details_konbini_store record {
    # The name of the convenience store chain where the payment was completed.
    "familymart"|"lawson"|"ministop"|"seicomart"? chain?;
};

public type documents_param_1FilesItemsnull string|"";

# Generate a post-purchase Invoice for one-time payments.
public type invoice_creation_params record {
    boolean enabled;
    invoice_data_params invoice_data?;
};

@constraint:String {maxLength: 5000}
public type GetApplePayDomainsQueriesExpandItemsString string;

public type reader_process_setup_intent_body record {|
    # Customer Consent Collected
    boolean customer_consent_collected;
    # Specifies which fields in the response should be expanded.
    reader_process_setup_intent_bodyExpandItemsString[] expand?;
    process_setup_config process_config?;
    # SetupIntent ID
    @constraint:String {maxLength: 5000}
    string setup_intent;
|};

public type subscription_billing_cycle_anchor "now"|"unchanged"|int;

public type flight_segment_specs record {
    @constraint:String {maxLength: 3}
    string arrival_airport_code?;
    @constraint:String {maxLength: 5000}
    string carrier?;
    @constraint:String {maxLength: 3}
    string departure_airport_code?;
    @constraint:String {maxLength: 5000}
    string flight_number?;
    @constraint:String {maxLength: 5000}
    string service_class?;
    boolean stopover_allowed?;
};

@constraint:String {maxLength: 5000}
public type Account_future_requirementsCurrentlydueItemsString string;

# Issue a credit note to adjust an invoice's amount after the invoice is finalized.
# 
# Related guide: [Credit notes](https://stripe.com/docs/billing/invoices/credit-notes)
public type Credit_note record {
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax.
    int amount;
    # This is the sum of all the shipping amounts.
    int amount_shipping;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # ID of the customer.
    string|Customer|Deleted_customer customer;
    # Customer balance transaction related to this credit note.
    string|Customer_balance_transaction? customer_balance_transaction?;
    # The integer amount in cents (or local equivalent) representing the total amount of discount that was credited.
    int discount_amount;
    # The aggregate amounts calculated per discount for all line items.
    Discounts_resource_discount_amount[] discount_amounts;
    # The date when this credit note is in effect. Same as `created` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the credit note PDF.
    int? effective_at?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # ID of the invoice.
    string|Invoice invoice;
    CreditNoteLinesList_1 lines;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Customer-facing text that appears on the credit note PDF.
    string? memo?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.
    @constraint:String {maxLength: 5000}
    string number;
    # String representing the object's type. Objects of the same type share the same value.
    "credit_note" 'object;
    # Amount that was credited outside of Stripe.
    int? out_of_band_amount?;
    # The link to download the PDF of the credit note.
    @constraint:String {maxLength: 5000}
    string pdf;
    # Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    "duplicate"|"fraudulent"|"order_change"|"product_unsatisfactory"? reason?;
    # Refund related to this credit note.
    string|Refund? refund?;
    # The details of the cost of shipping, including the ShippingRate applied to the invoice.
    Invoices_resource_shipping_cost? shipping_cost?;
    # Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
    "issued"|"void" status;
    # The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding exclusive tax and invoice level discounts.
    int subtotal;
    # The integer amount in cents (or local equivalent) representing the amount of the credit note, excluding all tax and invoice level discounts.
    int? subtotal_excluding_tax?;
    # The aggregate amounts calculated per tax rate for all line items.
    Credit_note_tax_amount[] tax_amounts;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, including tax and all discount.
    int total;
    # The integer amount in cents (or local equivalent) representing the total amount of the credit note, excluding tax, but including discounts.
    int? total_excluding_tax?;
    # Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.
    "post_payment"|"pre_payment" 'type;
    # The time that the credit note was voided.
    int? voided_at?;
};

# 
public type Checkout_multibanco_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.
public type custom_unit_amount_1 record {
    boolean enabled;
    int maximum?;
    int minimum?;
    int preset?;
};

public type account_subscribe_body record {|
    # Specifies which fields in the response should be expanded.
    account_subscribe_bodyExpandItemsString[] expand?;
    # The list of account features to which you would like to subscribe.
    ("transactions")[] features;
|};

# Details about the customer, including address and tax IDs.
public type customer_details record {
    postal_address address?;
    "billing"|"shipping" address_source?;
    string ip_address?;
    data_params[] tax_ids?;
    "customer_exempt"|"none"|"reverse_charge" taxability_override?;
};

public type charges_bodyExpandItemsString string;

public type customer_fund_cash_balance_body record {|
    # Amount to be used for this test cash balance transaction. A positive integer representing how much to fund in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to fund $1.00 or 100 to fund ¥100, a zero-decimal currency).
    int amount;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency;
    # Specifies which fields in the response should be expanded.
    customer_fund_cash_balance_bodyExpandItemsString[] expand?;
    # A description of the test funding. This simulates free-text references supplied by customers when making bank transfers to their cash balance. You can use this to test how Stripe's [reconciliation algorithm](https://stripe.com/docs/payments/customer-balance/reconciliation) applies to different user inputs.
    @constraint:String {maxLength: 5000}
    string reference?;
|};

# List of ForwardingRequest data.
public type ForwardingRequestList record {
    Forwarding\.request[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).
public type access_3 record {
    boolean requested;
};

public type schedule_release_body record {|
    # Specifies which fields in the response should be expanded.
    schedule_release_bodyExpandItemsString[] expand?;
    # Keep any cancellation on the subscription that the schedule has set
    boolean preserve_cancel_date?;
|};

# Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.
public type access_2 record {
    boolean requested;
};

# Encodes the FinancialAccount's ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.
public type access_1 record {
    boolean requested;
};

# Represents the Queries record for the operation: GetCreditNotesCreditNoteLines
public type GetCreditNotesCreditNoteLinesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCreditNotesCreditNoteLinesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Portal_flows_flow_after_completion record {
    # Configuration when `after_completion.type=hosted_confirmation`.
    Portal_flows_after_completion_hosted_confirmation? hosted_confirmation?;
    # Configuration when `after_completion.type=redirect`.
    Portal_flows_after_completion_redirect? redirect?;
    # The specified type of behavior after the flow is completed.
    "hosted_confirmation"|"portal_homepage"|"redirect" 'type;
};

# Represents the Queries record for the operation: GetCustomers
public type GetCustomersQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersQueriesExpandItemsString[] expand?;
    # Provides a list of customers that are associated with the specified test clock. The response will not include customers with test clocks if this parameter is not set.
    @constraint:String {maxLength: 5000}
    string test_clock?;
    # Only return customers that were created during the given date interval.
    created_8 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # A case-sensitive filter on the list based on the customer's `email` field. The value must be a string.
    @constraint:String {maxLength: 512}
    string email?;
};

# 
public type Source_redirect_flow record {
    # The failure reason for the redirect, either `user_abort` (the customer aborted or dropped out of the redirect flow), `declined` (the authentication failed or the transaction was declined), or `processing_error` (the redirect failed due to a technical error). Present only if the redirect status is `failed`.
    string? failure_reason?;
    # The URL you provide to redirect the customer to after they authenticated their payment.
    @constraint:String {maxLength: 5000}
    string return_url;
    # The status of the redirect, either `pending` (ready to be used by your customer to authenticate the transaction), `succeeded` (succesful authentication, cannot be reused) or `not_required` (redirect should not be used) or `failed` (failed authentication, cannot be reused).
    @constraint:String {maxLength: 5000}
    string status;
    # The URL provided to you to redirect a customer to as part of a `redirect` authentication flow.
    @constraint:String {maxLength: 2048}
    string url;
};

# Represents the Queries record for the operation: GetBalanceHistoryId
public type GetBalanceHistoryIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetBalanceHistoryIdQueriesExpandItemsString[] expand?;
};

public type after_completion_hosted_confirmation_param record {
    @constraint:String {maxLength: 500}
    string custom_message?;
};

@constraint:String {maxLength: 5000}
public type GetPromotionCodesPromotionCodeQueriesExpandItemsString string;

# Each key of the dictionary represents an embedded component, and each embedded component maps to its configuration (e.g. whether it has been enabled or not).
public type account_session_create_components_param record {
    account_config_param account_management?;
    account_config_param account_onboarding?;
    payouts_config_param balances?;
    base_config_param documents?;
    account_config_param notification_banner?;
    payments_config_param payment_details?;
    payments_config_param payments?;
    payouts_config_param payouts?;
    base_config_param payouts_list?;
};

# 
public type TreasuryInboundTransfersResourceInboundTransferList record {
    # Details about each object.
    Treasury\.inbound_transfer[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000}
    string url;
};

# Represents the Queries record for the operation: GetEntitlementsActiveEntitlementsId
public type GetEntitlementsActiveEntitlementsIdQueries record {
    # Specifies which fields in the response should be expanded.
    GetEntitlementsActiveEntitlementsIdQueriesExpandItemsString[] expand?;
};

# 
public type Treasury_outbound_transfers_resource_us_domestic_wire_tracking_details record {
    # IMAD of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.
    @constraint:String {maxLength: 5000}
    string imad;
    # OMAD of the OutboundTransfer for transfers sent over the `us_domestic_wire` network.
    string? omad?;
};

# 
public type Payment_flows_private_payment_methods_klarna_dob record {
    # The day of birth, between 1 and 31.
    int? day?;
    # The month of birth, between 1 and 12.
    int? month?;
    # The four-digit year of birth.
    int? year?;
};

# 
public type Issuing_transaction_fleet_data record {
    # Answers to prompts presented to cardholder at point of sale.
    Issuing_transaction_fleet_cardholder_prompt_data? cardholder_prompt_data?;
    # The type of purchase. One of `fuel_purchase`, `non_fuel_purchase`, or `fuel_and_non_fuel_purchase`.
    string? purchase_type?;
    # More information about the total amount. This information is not guaranteed to be accurate as some merchants may provide unreliable data.
    Issuing_transaction_fleet_reported_breakdown? reported_breakdown?;
    # The type of fuel service. One of `non_fuel_transaction`, `full_service`, or `self_service`.
    string? service_type?;
};

# 
public type Payment_links_resource_custom_fields_dropdown record {
    # The options available for the customer to select. Up to 200 options allowed.
    Payment_links_resource_custom_fields_dropdown_option[] options;
};

# Represents the Queries record for the operation: GetProducts
public type GetProductsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetProductsQueriesExpandItemsString[] expand?;
    # Only return products that can be shipped (i.e., physical, not digital products).
    boolean shippable?;
    # Only return products that were created during the given date interval.
    created_27 created?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # Only return products that are active or inactive (e.g., pass `false` to list all inactive products).
    boolean active?;
    # Only return products with the given IDs. Cannot be used with [starting_after](https://stripe.com/docs/api#list_products-starting_after) or [ending_before](https://stripe.com/docs/api#list_products-ending_before).
    GetProductsQueriesIdsItemsString[] ids?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return products with the given url.
    @constraint:String {maxLength: 5000}
    string url?;
};

# The PII this token represents.
public type pii_token_specs record {
    @constraint:String {maxLength: 5000}
    string id_number?;
};

public type capabilities_capability_body record {|
    # Specifies which fields in the response should be expanded.
    capabilities_capability_bodyExpandItemsString[] expand?;
    # To request a new capability for an account, pass true. There can be a delay before the requested capability becomes active. If the capability has any activation requirements, the response includes them in the `requirements` arrays.
    # 
    # If a capability isn't permanent, you can remove it from the account by passing false. Some capabilities are permanent after they've been requested. Attempting to remove a permanent capability returns an error.
    boolean requested?;
|};

public type Source_type_three_d_secure record {
    string? address_line1_check?;
    string? address_zip_check?;
    boolean? authenticated?;
    string? brand?;
    string? card?;
    string? country?;
    string? customer?;
    string? cvc_check?;
    string? dynamic_last4?;
    int? exp_month?;
    int? exp_year?;
    string fingerprint?;
    string? funding?;
    string? last4?;
    string? name?;
    string three_d_secure?;
    string? tokenization_method?;
};

public type reader_refund_payment_body record {|
    # A positive integer in __cents__ representing how much of this charge to refund.
    int amount?;
    # ID of the Charge to refund.
    @constraint:String {maxLength: 5000}
    string charge?;
    # Specifies which fields in the response should be expanded.
    reader_refund_payment_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # ID of the PaymentIntent to refund.
    @constraint:String {maxLength: 5000}
    string payment_intent?;
    # Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.
    boolean refund_application_fee?;
    refund_payment_config refund_payment_config?;
    # Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.
    boolean reverse_transfer?;
|};

public type quotes_quote_body record {|
    # The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field.
    int|"" application_fee_amount?;
    # A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field.
    decimal|"" application_fee_percent?;
    automatic_tax_param_5 automatic_tax?;
    # Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.
    "charge_automatically"|"send_invoice" collection_method?;
    # The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.
    @constraint:String {maxLength: 5000}
    string customer?;
    # The tax rates that will apply to any line item that does not have `tax_rates` set.
    DefaulttaxratesItemsString[]|"" default_tax_rates?;
    # A description that will be displayed on the quote PDF.
    string|"" description?;
    # The discounts applied to the quote. You can only set up to one discount.
    record {string coupon?; string discount?; string promotion_code?;}[]|"" discounts?;
    # Specifies which fields in the response should be expanded.
    quotes_quote_bodyExpandItemsString[] expand?;
    # A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.
    int expires_at?;
    # A footer that will be displayed on the quote PDF.
    string|"" footer?;
    # A header that will be displayed on the quote PDF.
    string|"" header?;
    quote_param invoice_settings?;
    # A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost.
    line_item_update_params[] line_items?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|} metadata?;
    # The account on behalf of which to charge.
    string|"" on_behalf_of?;
    subscription_data_update_params_1 subscription_data?;
    # The data with which to automatically create a Transfer for each of the invoices.
    record {int amount?; decimal amount_percent?; string destination;}|"" transfer_data?;
|};

# To share the contents of a `File` object with non-Stripe users, you can
# create a `FileLink`. `FileLink`s contain a URL that you can use to
# retrieve the contents of the file without authentication.
public type File_link record {
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # Returns if the link is already expired.
    boolean expired;
    # Time that the link expires.
    int? expires_at?;
    # The file object this link points to.
    string|File file;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|} metadata;
    # String representing the object's type. Objects of the same type share the same value.
    "file_link" 'object;
    # The publicly accessible URL to download the file.
    string? url?;
};

public type InvoiceAccounttaxidsItemsnull string|Tax_id|Deleted_tax_id;

# Documents that may be submitted to satisfy various informational requests.
public type documents_specs record {
    documents_param bank_account_ownership_verification?;
    documents_param company_license?;
    documents_param company_memorandum_of_association?;
    documents_param company_ministerial_decree?;
    documents_param company_registration_verification?;
    documents_param company_tax_id_verification?;
    documents_param proof_of_registration?;
};

public type prices_bodyExpandItemsString string;

# 
public type Invoice_payment_method_options_acss_debit_mandate_options record {
    # Transaction type of the mandate.
    "business"|"personal"? transaction_type?;
};

# Represents the Queries record for the operation: GetCustomersCustomerTaxIds
public type GetCustomersCustomerTaxIdsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetCustomersCustomerTaxIdsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# Represents the Queries record for the operation: GetTreasuryReceivedDebits
public type GetTreasuryReceivedDebitsQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # The FinancialAccount that funds were pulled from.
    string financial_account;
    # Specifies which fields in the response should be expanded.
    GetTreasuryReceivedDebitsQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
    # Only return ReceivedDebits that have the given status: `succeeded` or `failed`.
    "failed"|"succeeded" status?;
};

# 
public type Payment_method_options_konbini record {
    # An optional 10 to 11 digit numeric-only string determining the confirmation code at applicable convenience stores.
    string? confirmation_number?;
    # The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.
    int? expires_after_days?;
    # The timestamp at which the Konbini payment instructions will expire. Only one of `expires_after_days` or `expires_at` may be set.
    int? expires_at?;
    # A product descriptor of up to 22 characters, which will appear to customers at the convenience store.
    string? product_description?;
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

public type source_verify_body record {|
    # Specifies which fields in the response should be expanded.
    source_verify_bodyExpandItemsString[] expand?;
    # The values needed to verify the source.
    source_verify_bodyValuesItemsString[] values;
|};

public type authorization_decline_body record {|
    # Specifies which fields in the response should be expanded.
    authorization_decline_bodyExpandItemsString[] expand?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    record {|string...;|}|"" metadata?;
|};

# 
public type Checkout_au_becs_debit_payment_method_options record {
    # Indicates that you intend to make future payments with this PaymentIntent's payment method.
    # 
    # Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.
    # 
    # When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).
    "none" setup_future_usage?;
};

# 
public type Schedules_phase_automatic_tax record {
    # Whether Stripe automatically computes tax on invoices created during this phase.
    boolean enabled;
    # The account that's liable for tax. If set, the business address and tax registrations required to perform the tax calculation are loaded from this account. The tax transaction is returned in the report of the connected account.
    Connect_account_reference? liability?;
};

# 
public type Payment_method_options_card_present record {
    # Request ability to capture this payment beyond the standard [authorization validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)
    boolean? request_extended_authorization?;
    # Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.
    boolean? request_incremental_authorization_support?;
    Payment_method_options_card_present_routing routing?;
};

# 
public type Account_card_payments_settings record {
    Account_decline_charge_on decline_on?;
    # The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix?;
    # The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kana?;
    # The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.
    string? statement_descriptor_prefix_kanji?;
};

public type reporting_report_runs_body record {|
    # Specifies which fields in the response should be expanded.
    reporting_report_runs_bodyExpandItemsString[] expand?;
    run_parameter_specs parameters?;
    # The ID of the [report type](https://stripe.com/docs/reporting/statements/api#report-types) to run, such as `"balance.summary.1"`.
    string report_type;
|};

# Represents the Queries record for the operation: GetProductsProductFeatures
public type GetProductsProductFeaturesQueries record {
    # A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    @constraint:String {maxLength: 5000}
    string ending_before?;
    # Specifies which fields in the response should be expanded.
    GetProductsProductFeaturesQueriesExpandItemsString[] expand?;
    # A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int 'limit?;
    # A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    @constraint:String {maxLength: 5000}
    string starting_after?;
};

# 
public type Payment_method_au_becs_debit record {
    # Six-digit number identifying bank and branch associated with this bank account.
    string? bsb_number?;
    # Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    string? fingerprint?;
    # Last four digits of the bank account number.
    string? last4?;
};

# 
public type NotificationWebhookEndpointList record {
    Webhook_endpoint[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/webhook_endpoints`}
    string url;
};

public type access_with_ach_details record {
    boolean requested;
};

# 
public type Notification_event_data record {
    # Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](https://stripe.com/docs/api#invoice_object) as the value of the object key.
    record {} 'object;
    # Object containing the names of the updated attributes and their values prior to the event (only included in events of type `*.updated`). If an array attribute has any updated elements, this object contains the entire array. In Stripe API versions 2017-04-06 or earlier, an updated array attribute in this object includes only the updated array elements.
    record {} previous_attributes?;
};

public type linked_account_options_filters_param record {
    (linked_account_options_filters_paramAccountsubcategoriesItemsString)[] account_subcategories?;
};

# 
public type Payment_intent_next_action_display_bank_transfer_instructions record {
    # The remaining amount that needs to be transferred to complete the payment.
    int? amount_remaining?;
    # Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string? currency?;
    # A list of financial addresses that can be used to fund the customer balance
    Funding_instructions_bank_transfer_financial_address[] financial_addresses?;
    # A link to a hosted page that guides your customer through completing the transfer.
    string? hosted_instructions_url?;
    # A string identifying this payment. Instruct your customer to include this code in the reference or memo field of their bank transfer.
    string? reference?;
    # Type of bank transfer
    "eu_bank_transfer"|"gb_bank_transfer"|"jp_bank_transfer"|"mx_bank_transfer"|"us_bank_transfer" 'type;
};

# 
public type ClimateRemovalsProductsList record {
    Climate\.product[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/climate/products`}
    string url;
};

# 
public type PaymentMethodConfigResourcePaymentMethodConfigurationsList record {
    Payment_method_configuration[] data;
    # True if this list has another page of items after this one that can be fetched.
    boolean has_more;
    # String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
    "list" 'object;
    # The URL where this list can be accessed.
    @constraint:String {maxLength: 5000, pattern: re `^/v1/payment_method_configurations`}
    string url;
};

# 
public type Invoice_setting_subscription_schedule_setting record {
    # The account tax IDs associated with the subscription schedule. Will be set on invoices generated by the subscription schedule.
    (string|Tax_id|Deleted_tax_id)[]? account_tax_ids?;
    # Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.
    int? days_until_due?;
    Connect_account_reference issuer;
};

# 
public type Deleted_discount record {
    # The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
    string? checkout_session?;
    Coupon coupon;
    # The ID of the customer associated with this discount.
    string|Customer|Deleted_customer? customer?;
    # Always true for a deleted object
    true deleted;
    # The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.
    @constraint:String {maxLength: 5000}
    string id;
    # The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.
    string? invoice?;
    # The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
    string? invoice_item?;
    # String representing the object's type. Objects of the same type share the same value.
    "discount" 'object;
    # The promotion code applied to create this discount.
    string|Promotion_code? promotion_code?;
    # Date that the coupon was applied.
    int 'start;
    # The subscription that this coupon is applied to, if it is applied to a particular subscription.
    string? subscription?;
    # The subscription item that this coupon is applied to, if it is applied to a particular subscription item.
    string? subscription_item?;
};

public type intent_cancel_body_1 record {|
    # Reason for canceling this SetupIntent. Possible values are: `abandoned`, `requested_by_customer`, or `duplicate`
    "abandoned"|"duplicate"|"requested_by_customer" cancellation_reason?;
    # Specifies which fields in the response should be expanded.
    intent_cancel_body_1ExpandItemsString[] expand?;
|};

# 
public type Payment_method_link record {
    # Account owner's email address.
    string? email?;
};

@constraint:String {maxLength: 5000}
public type Issuing_authorization_treasuryReceivedcreditsItemsString string;

# 
public type Issuing_network_token_network_data record {
    Issuing_network_token_device device?;
    Issuing_network_token_mastercard mastercard?;
    # The network that the token is associated with. An additional hash is included with a name matching this value, containing tokenization data specific to the card network.
    "mastercard"|"visa" 'type;
    Issuing_network_token_visa visa?;
    Issuing_network_token_wallet_provider wallet_provider?;
};

# The updated CVC value this token represents.
public type cvc_params record {
    @constraint:String {maxLength: 5000}
    string cvc;
};

public type payments_features_param record {
    boolean capture_payments?;
    boolean destination_on_behalf_of_charge_management?;
    boolean dispute_management?;
    boolean refund_management?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

# Controls what fields on Customer can be updated by the Checkout Session. Can only be provided when `customer` is provided.
public type customer_update_params record {
    "auto"|"never" address?;
    "auto"|"never" name?;
    "auto"|"never" shipping?;
};

# 
public type Issuing_network_token_device record {
    # An obfuscated ID derived from the device ID.
    @constraint:String {maxLength: 5000}
    string device_fingerprint?;
    # The IP address of the device at provisioning time.
    @constraint:String {maxLength: 5000}
    string ip_address?;
    # The geographic latitude/longitude coordinates of the device at provisioning time. The format is [+-]decimal/[+-]decimal.
    @constraint:String {maxLength: 5000}
    string location?;
    # The name of the device used for tokenization.
    @constraint:String {maxLength: 5000}
    string name?;
    # The phone number of the device used for tokenization.
    @constraint:String {maxLength: 5000}
    string phone_number?;
    # The type of device used for tokenization.
    "other"|"phone"|"watch" 'type?;
};

# 
public type Source_mandate_notification_acss_debit_data record {
    # The statement descriptor associate with the debit.
    @constraint:String {maxLength: 5000}
    string statement_descriptor?;
};

# A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.
# For example, you can use a SetupIntent to set up and save your customer's card without immediately collecting a payment.
# Later, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.
# 
# Create a SetupIntent when you're ready to collect your customer's payment credentials.
# Don't maintain long-lived, unconfirmed SetupIntents because they might not be valid.
# The SetupIntent transitions through multiple [statuses](https://docs.stripe.com/payments/intents#intent-statuses) as it guides
# you through the setup process.
# 
# Successful SetupIntents result in payment credentials that are optimized for future payments.
# For example, cardholders in [certain regions](https://stripe.com/guides/strong-customer-authentication) might need to be run through
# [Strong Customer Authentication](https://docs.stripe.com/strong-customer-authentication) during payment method collection
# to streamline later [off-session payments](https://docs.stripe.com/payments/setup-intents).
# If you use the SetupIntent with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer),
# it automatically attaches the resulting payment method to that Customer after successful setup.
# We recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on
# PaymentIntents to save payment methods to prevent saving invalid or unoptimized payment methods.
# 
# By using SetupIntents, you can reduce friction for your customers, even as regulations change over time.
# 
# Related guide: [Setup Intents API](https://docs.stripe.com/payments/setup-intents)
public type Setup_intent record {
    # ID of the Connect application that created the SetupIntent.
    string|Application? application?;
    # If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.
    # 
    # It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
    boolean attach_to_self?;
    # Settings for dynamic payment methods compatible with this Setup Intent
    Payment_flows_automatic_payment_methods_setup_intent? automatic_payment_methods?;
    # Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.
    "abandoned"|"duplicate"|"requested_by_customer"? cancellation_reason?;
    # The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.
    # 
    # The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
    string? client_secret?;
    # Time at which the object was created. Measured in seconds since the Unix epoch.
    int created;
    # ID of the Customer this SetupIntent belongs to, if one exists.
    # 
    # If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
    string|Customer|Deleted_customer? customer?;
    # An arbitrary string attached to the object. Often useful for displaying to users.
    string? description?;
    # Indicates the directions of money movement for which this payment method is intended to be used.
    # 
    # Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
    ("inbound"|"outbound")[]? flow_directions?;
    # Unique identifier for the object.
    @constraint:String {maxLength: 5000}
    string id;
    # The error encountered in the previous SetupIntent confirmation.
    Api_errors? last_setup_error?;
    # The most recent SetupAttempt for this SetupIntent.
    string|Setup_attempt? latest_attempt?;
    # Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
    boolean livemode;
    # ID of the multi use Mandate generated by the SetupIntent.
    string|Mandate? mandate?;
    # Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    record {|string...;|}? metadata?;
    # If present, this property tells you what actions you need to take in order for your customer to continue payment setup.
    Setup_intent_next_action? next_action?;
    # String representing the object's type. Objects of the same type share the same value.
    "setup_intent" 'object;
    # The account (if any) for which the setup is intended.
    string|Account? on_behalf_of?;
    # ID of the payment method used with this SetupIntent.
    string|Payment_method? payment_method?;
    # Information about the payment method configuration used for this Setup Intent.
    Payment_method_config_biz_payment_method_configuration_details? payment_method_configuration_details?;
    # Payment method-specific configuration for this SetupIntent.
    Setup_intent_payment_method_options? payment_method_options?;
    # The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.
    Setup_intentPaymentmethodtypesItemsString[] payment_method_types;
    # ID of the single_use Mandate generated by the SetupIntent.
    string|Mandate? single_use_mandate?;
    # [Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.
    "canceled"|"processing"|"requires_action"|"requires_confirmation"|"requires_payment_method"|"succeeded" status;
    # Indicates how the payment method is intended to be used in the future.
    # 
    # Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.
    @constraint:String {maxLength: 5000}
    string usage;
};

# 
public type Payment_intent_next_action_konbini_ministop record {
    # The confirmation number.
    @constraint:String {maxLength: 5000}
    string confirmation_number?;
    # The payment code.
    @constraint:String {maxLength: 5000}
    string payment_code;
};

# Default configuration to be used on Stripe Tax calculations.
public type defaults_param record {
    "exclusive"|"inclusive"|"inferred_by_currency" tax_behavior?;
    string tax_code?;
};

public type Discounts1ItemsObject record {
    string coupon?;
    string discount?;
    string promotion_code?;
};

# 
public type Bank_connections_resource_balance_api_resource_credit_balance record {
    # The credit that has been used by the account holder.
    # 
    # Each key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    # 
    # Each value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.
    record {|int...;|}? used?;
};
